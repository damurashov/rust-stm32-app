#![allow(dead_code)]
pub const FLASH_BASE: u32 = 0x08000000u32;
pub const FLASH_BANK1_END: u32 = 0x08007FFFu32;
pub const SRAM_BASE: u32 = 0x20000000u32;
pub const PERIPH_BASE: u32 = 0x40000000u32;
pub const APBPERIPH_BASE: u32 = PERIPH_BASE;
pub const AHBPERIPH_BASE: u32 = PERIPH_BASE + 0x00020000u32;
pub const AHB2PERIPH_BASE: u32 = PERIPH_BASE + 0x08000000u32;
pub const TIM3_BASE: u32 = APBPERIPH_BASE + 0x00000400u32;
pub const TIM14_BASE: u32 = APBPERIPH_BASE + 0x00002000u32;
pub const RTC_BASE: u32 = APBPERIPH_BASE + 0x00002800u32;
pub const WWDG_BASE: u32 = APBPERIPH_BASE + 0x00002C00u32;
pub const IWDG_BASE: u32 = APBPERIPH_BASE + 0x00003000u32;
pub const I2C1_BASE: u32 = APBPERIPH_BASE + 0x00005400u32;
pub const PWR_BASE: u32 = APBPERIPH_BASE + 0x00007000u32;
pub const SYSCFG_BASE: u32 = APBPERIPH_BASE + 0x00010000u32;
pub const EXTI_BASE: u32 = APBPERIPH_BASE + 0x00010400u32;
pub const ADC1_BASE: u32 = APBPERIPH_BASE + 0x00012400u32;
pub const ADC_BASE: u32 = APBPERIPH_BASE + 0x00012708u32;
pub const TIM1_BASE: u32 = APBPERIPH_BASE + 0x00012C00u32;
pub const SPI1_BASE: u32 = APBPERIPH_BASE + 0x00013000u32;
pub const USART1_BASE: u32 = APBPERIPH_BASE + 0x00013800u32;
pub const TIM16_BASE: u32 = APBPERIPH_BASE + 0x00014400u32;
pub const TIM17_BASE: u32 = APBPERIPH_BASE + 0x00014800u32;
pub const DBGMCU_BASE: u32 = APBPERIPH_BASE + 0x00015800u32;
pub const DMA1_BASE: u32 = AHBPERIPH_BASE + 0x00000000u32;
pub const DMA1_CHANNEL1_BASE: u32 = DMA1_BASE + 0x00000008u32;
pub const DMA1_CHANNEL2_BASE: u32 = DMA1_BASE + 0x0000001Cu32;
pub const DMA1_CHANNEL3_BASE: u32 = DMA1_BASE + 0x00000030u32;
pub const DMA1_CHANNEL4_BASE: u32 = DMA1_BASE + 0x00000044u32;
pub const DMA1_CHANNEL5_BASE: u32 = DMA1_BASE + 0x00000058u32;
pub const RCC_BASE: u32 = AHBPERIPH_BASE + 0x00001000u32;
pub const FLASH_R_BASE: u32 = AHBPERIPH_BASE + 0x00002000u32;
pub const OB_BASE: u32 = 0x1FFFF800u32;
pub const FLASHSIZE_BASE: u32 = 0x1FFFF7CCu32;
pub const UID_BASE: u32 = 0x1FFFF7ACu32;
pub const CRC_BASE: u32 = AHBPERIPH_BASE + 0x00003000u32;
pub const GPIOA_BASE: u32 = AHB2PERIPH_BASE + 0x00000000u32;
pub const GPIOB_BASE: u32 = AHB2PERIPH_BASE + 0x00000400u32;
pub const GPIOC_BASE: u32 = AHB2PERIPH_BASE + 0x00000800u32;
pub const GPIOD_BASE: u32 = AHB2PERIPH_BASE + 0x00000C00u32;
pub const GPIOF_BASE: u32 = AHB2PERIPH_BASE + 0x00001400u32;
pub const LSI_STARTUP_TIME: u32 = 85u32;
pub const ADC_ISR_ADRDY_POS: u32 = 0u32;
pub const ADC_ISR_ADRDY_MSK: u32 = 0x1u32 << ADC_ISR_ADRDY_POS;
pub const ADC_ISR_ADRDY: u32 = ADC_ISR_ADRDY_MSK;
pub const ADC_ISR_EOSMP_POS: u32 = 1u32;
pub const ADC_ISR_EOSMP_MSK: u32 = 0x1u32 << ADC_ISR_EOSMP_POS;
pub const ADC_ISR_EOSMP: u32 = ADC_ISR_EOSMP_MSK;
pub const ADC_ISR_EOC_POS: u32 = 2u32;
pub const ADC_ISR_EOC_MSK: u32 = 0x1u32 << ADC_ISR_EOC_POS;
pub const ADC_ISR_EOC: u32 = ADC_ISR_EOC_MSK;
pub const ADC_ISR_EOS_POS: u32 = 3u32;
pub const ADC_ISR_EOS_MSK: u32 = 0x1u32 << ADC_ISR_EOS_POS;
pub const ADC_ISR_EOS: u32 = ADC_ISR_EOS_MSK;
pub const ADC_ISR_OVR_POS: u32 = 4u32;
pub const ADC_ISR_OVR_MSK: u32 = 0x1u32 << ADC_ISR_OVR_POS;
pub const ADC_ISR_OVR: u32 = ADC_ISR_OVR_MSK;
pub const ADC_ISR_AWD1_POS: u32 = 7u32;
pub const ADC_ISR_AWD1_MSK: u32 = 0x1u32 << ADC_ISR_AWD1_POS;
pub const ADC_ISR_AWD1: u32 = ADC_ISR_AWD1_MSK;
pub const ADC_ISR_AWD: u32 = ADC_ISR_AWD1;
pub const ADC_ISR_EOSEQ: u32 = ADC_ISR_EOS;
pub const ADC_IER_ADRDYIE_POS: u32 = 0u32;
pub const ADC_IER_ADRDYIE_MSK: u32 = 0x1u32 << ADC_IER_ADRDYIE_POS;
pub const ADC_IER_ADRDYIE: u32 = ADC_IER_ADRDYIE_MSK;
pub const ADC_IER_EOSMPIE_POS: u32 = 1u32;
pub const ADC_IER_EOSMPIE_MSK: u32 = 0x1u32 << ADC_IER_EOSMPIE_POS;
pub const ADC_IER_EOSMPIE: u32 = ADC_IER_EOSMPIE_MSK;
pub const ADC_IER_EOCIE_POS: u32 = 2u32;
pub const ADC_IER_EOCIE_MSK: u32 = 0x1u32 << ADC_IER_EOCIE_POS;
pub const ADC_IER_EOCIE: u32 = ADC_IER_EOCIE_MSK;
pub const ADC_IER_EOSIE_POS: u32 = 3u32;
pub const ADC_IER_EOSIE_MSK: u32 = 0x1u32 << ADC_IER_EOSIE_POS;
pub const ADC_IER_EOSIE: u32 = ADC_IER_EOSIE_MSK;
pub const ADC_IER_OVRIE_POS: u32 = 4u32;
pub const ADC_IER_OVRIE_MSK: u32 = 0x1u32 << ADC_IER_OVRIE_POS;
pub const ADC_IER_OVRIE: u32 = ADC_IER_OVRIE_MSK;
pub const ADC_IER_AWD1IE_POS: u32 = 7u32;
pub const ADC_IER_AWD1IE_MSK: u32 = 0x1u32 << ADC_IER_AWD1IE_POS;
pub const ADC_IER_AWD1IE: u32 = ADC_IER_AWD1IE_MSK;
pub const ADC_IER_AWDIE: u32 = ADC_IER_AWD1IE;
pub const ADC_IER_EOSEQIE: u32 = ADC_IER_EOSIE;
pub const ADC_CR_ADEN_POS: u32 = 0u32;
pub const ADC_CR_ADEN_MSK: u32 = 0x1u32 << ADC_CR_ADEN_POS;
pub const ADC_CR_ADEN: u32 = ADC_CR_ADEN_MSK;
pub const ADC_CR_ADSTART_POS: u32 = 2u32;
pub const ADC_CR_ADSTART_MSK: u32 = 0x1u32 << ADC_CR_ADSTART_POS;
pub const ADC_CR_ADSTART: u32 = ADC_CR_ADSTART_MSK;
pub const ADC_CR_ADSTP_POS: u32 = 4u32;
pub const ADC_CR_ADSTP_MSK: u32 = 0x1u32 << ADC_CR_ADSTP_POS;
pub const ADC_CR_ADSTP: u32 = ADC_CR_ADSTP_MSK;
pub const ADC_CR_ADCAL_POS: u32 = 31u32;
pub const ADC_CR_ADCAL_MSK: u32 = 0x1u32 << ADC_CR_ADCAL_POS;
pub const ADC_CR_ADCAL: u32 = ADC_CR_ADCAL_MSK;
pub const ADC_CFGR1_DMAEN_POS: u32 = 0u32;
pub const ADC_CFGR1_DMAEN_MSK: u32 = 0x1u32 << ADC_CFGR1_DMAEN_POS;
pub const ADC_CFGR1_DMAEN: u32 = ADC_CFGR1_DMAEN_MSK;
pub const ADC_CFGR1_DMACFG_POS: u32 = 1u32;
pub const ADC_CFGR1_DMACFG_MSK: u32 = 0x1u32 << ADC_CFGR1_DMACFG_POS;
pub const ADC_CFGR1_DMACFG: u32 = ADC_CFGR1_DMACFG_MSK;
pub const ADC_CFGR1_SCANDIR_POS: u32 = 2u32;
pub const ADC_CFGR1_SCANDIR_MSK: u32 = 0x1u32 << ADC_CFGR1_SCANDIR_POS;
pub const ADC_CFGR1_SCANDIR: u32 = ADC_CFGR1_SCANDIR_MSK;
pub const ADC_CFGR1_RES_POS: u32 = 3u32;
pub const ADC_CFGR1_RES_MSK: u32 = 0x3u32 << ADC_CFGR1_RES_POS;
pub const ADC_CFGR1_RES: u32 = ADC_CFGR1_RES_MSK;
pub const ADC_CFGR1_RES_0: u32 = 0x1u32 << ADC_CFGR1_RES_POS;
pub const ADC_CFGR1_RES_1: u32 = 0x2u32 << ADC_CFGR1_RES_POS;
pub const ADC_CFGR1_ALIGN_POS: u32 = 5u32;
pub const ADC_CFGR1_ALIGN_MSK: u32 = 0x1u32 << ADC_CFGR1_ALIGN_POS;
pub const ADC_CFGR1_ALIGN: u32 = ADC_CFGR1_ALIGN_MSK;
pub const ADC_CFGR1_EXTSEL_POS: u32 = 6u32;
pub const ADC_CFGR1_EXTSEL_MSK: u32 = 0x7u32 << ADC_CFGR1_EXTSEL_POS;
pub const ADC_CFGR1_EXTSEL: u32 = ADC_CFGR1_EXTSEL_MSK;
pub const ADC_CFGR1_EXTSEL_0: u32 = 0x1u32 << ADC_CFGR1_EXTSEL_POS;
pub const ADC_CFGR1_EXTSEL_1: u32 = 0x2u32 << ADC_CFGR1_EXTSEL_POS;
pub const ADC_CFGR1_EXTSEL_2: u32 = 0x4u32 << ADC_CFGR1_EXTSEL_POS;
pub const ADC_CFGR1_EXTEN_POS: u32 = 10u32;
pub const ADC_CFGR1_EXTEN_MSK: u32 = 0x3u32 << ADC_CFGR1_EXTEN_POS;
pub const ADC_CFGR1_EXTEN: u32 = ADC_CFGR1_EXTEN_MSK;
pub const ADC_CFGR1_EXTEN_0: u32 = 0x1u32 << ADC_CFGR1_EXTEN_POS;
pub const ADC_CFGR1_EXTEN_1: u32 = 0x2u32 << ADC_CFGR1_EXTEN_POS;
pub const ADC_CFGR1_OVRMOD_POS: u32 = 12u32;
pub const ADC_CFGR1_OVRMOD_MSK: u32 = 0x1u32 << ADC_CFGR1_OVRMOD_POS;
pub const ADC_CFGR1_OVRMOD: u32 = ADC_CFGR1_OVRMOD_MSK;
pub const ADC_CFGR1_CONT_POS: u32 = 13u32;
pub const ADC_CFGR1_CONT_MSK: u32 = 0x1u32 << ADC_CFGR1_CONT_POS;
pub const ADC_CFGR1_CONT: u32 = ADC_CFGR1_CONT_MSK;
pub const ADC_CFGR1_WAIT_POS: u32 = 14u32;
pub const ADC_CFGR1_WAIT_MSK: u32 = 0x1u32 << ADC_CFGR1_WAIT_POS;
pub const ADC_CFGR1_WAIT: u32 = ADC_CFGR1_WAIT_MSK;
pub const ADC_CFGR1_AUTOFF_POS: u32 = 15u32;
pub const ADC_CFGR1_AUTOFF_MSK: u32 = 0x1u32 << ADC_CFGR1_AUTOFF_POS;
pub const ADC_CFGR1_AUTOFF: u32 = ADC_CFGR1_AUTOFF_MSK;
pub const ADC_CFGR1_DISCEN_POS: u32 = 16u32;
pub const ADC_CFGR1_DISCEN_MSK: u32 = 0x1u32 << ADC_CFGR1_DISCEN_POS;
pub const ADC_CFGR1_DISCEN: u32 = ADC_CFGR1_DISCEN_MSK;
pub const ADC_CFGR1_AWD1SGL_POS: u32 = 22u32;
pub const ADC_CFGR1_AWD1SGL_MSK: u32 = 0x1u32 << ADC_CFGR1_AWD1SGL_POS;
pub const ADC_CFGR1_AWD1SGL: u32 = ADC_CFGR1_AWD1SGL_MSK;
pub const ADC_CFGR1_AWD1EN_POS: u32 = 23u32;
pub const ADC_CFGR1_AWD1EN_MSK: u32 = 0x1u32 << ADC_CFGR1_AWD1EN_POS;
pub const ADC_CFGR1_AWD1EN: u32 = ADC_CFGR1_AWD1EN_MSK;
pub const ADC_CFGR1_AWD1CH_POS: u32 = 26u32;
pub const ADC_CFGR1_AWD1CH_MSK: u32 = 0x1Fu32 << ADC_CFGR1_AWD1CH_POS;
pub const ADC_CFGR1_AWD1CH: u32 = ADC_CFGR1_AWD1CH_MSK;
pub const ADC_CFGR1_AWD1CH_0: u32 = 0x01u32 << ADC_CFGR1_AWD1CH_POS;
pub const ADC_CFGR1_AWD1CH_1: u32 = 0x02u32 << ADC_CFGR1_AWD1CH_POS;
pub const ADC_CFGR1_AWD1CH_2: u32 = 0x04u32 << ADC_CFGR1_AWD1CH_POS;
pub const ADC_CFGR1_AWD1CH_3: u32 = 0x08u32 << ADC_CFGR1_AWD1CH_POS;
pub const ADC_CFGR1_AWD1CH_4: u32 = 0x10u32 << ADC_CFGR1_AWD1CH_POS;
pub const ADC_CFGR1_AUTDLY: u32 = ADC_CFGR1_WAIT;
pub const ADC_CFGR1_AWDSGL: u32 = ADC_CFGR1_AWD1SGL;
pub const ADC_CFGR1_AWDEN: u32 = ADC_CFGR1_AWD1EN;
pub const ADC_CFGR1_AWDCH: u32 = ADC_CFGR1_AWD1CH;
pub const ADC_CFGR1_AWDCH_0: u32 = ADC_CFGR1_AWD1CH_0;
pub const ADC_CFGR1_AWDCH_1: u32 = ADC_CFGR1_AWD1CH_1;
pub const ADC_CFGR1_AWDCH_2: u32 = ADC_CFGR1_AWD1CH_2;
pub const ADC_CFGR1_AWDCH_3: u32 = ADC_CFGR1_AWD1CH_3;
pub const ADC_CFGR1_AWDCH_4: u32 = ADC_CFGR1_AWD1CH_4;
pub const ADC_CFGR2_CKMODE_POS: u32 = 30u32;
pub const ADC_CFGR2_CKMODE_MSK: u32 = 0x3u32 << ADC_CFGR2_CKMODE_POS;
pub const ADC_CFGR2_CKMODE: u32 = ADC_CFGR2_CKMODE_MSK;
pub const ADC_CFGR2_CKMODE_1: u32 = 0x2u32 << ADC_CFGR2_CKMODE_POS;
pub const ADC_CFGR2_CKMODE_0: u32 = 0x1u32 << ADC_CFGR2_CKMODE_POS;
pub const ADC_CFGR2_JITOFFDIV4: u32 = ADC_CFGR2_CKMODE_1;
pub const ADC_CFGR2_JITOFFDIV2: u32 = ADC_CFGR2_CKMODE_0;
pub const ADC_SMPR_SMP_POS: u32 = 0u32;
pub const ADC_SMPR_SMP_MSK: u32 = 0x7u32 << ADC_SMPR_SMP_POS;
pub const ADC_SMPR_SMP: u32 = ADC_SMPR_SMP_MSK;
pub const ADC_SMPR_SMP_0: u32 = 0x1u32 << ADC_SMPR_SMP_POS;
pub const ADC_SMPR_SMP_1: u32 = 0x2u32 << ADC_SMPR_SMP_POS;
pub const ADC_SMPR_SMP_2: u32 = 0x4u32 << ADC_SMPR_SMP_POS;
pub const ADC_SMPR1_SMPR: u32 = ADC_SMPR_SMP;
pub const ADC_SMPR1_SMPR_0: u32 = ADC_SMPR_SMP_0;
pub const ADC_SMPR1_SMPR_1: u32 = ADC_SMPR_SMP_1;
pub const ADC_SMPR1_SMPR_2: u32 = ADC_SMPR_SMP_2;
pub const ADC_TR1_LT1_POS: u32 = 0u32;
pub const ADC_TR1_LT1_MSK: u32 = 0xFFFu32 << ADC_TR1_LT1_POS;
pub const ADC_TR1_LT1: u32 = ADC_TR1_LT1_MSK;
pub const ADC_TR1_LT1_0: u32 = 0x001u32 << ADC_TR1_LT1_POS;
pub const ADC_TR1_LT1_1: u32 = 0x002u32 << ADC_TR1_LT1_POS;
pub const ADC_TR1_LT1_2: u32 = 0x004u32 << ADC_TR1_LT1_POS;
pub const ADC_TR1_LT1_3: u32 = 0x008u32 << ADC_TR1_LT1_POS;
pub const ADC_TR1_LT1_4: u32 = 0x010u32 << ADC_TR1_LT1_POS;
pub const ADC_TR1_LT1_5: u32 = 0x020u32 << ADC_TR1_LT1_POS;
pub const ADC_TR1_LT1_6: u32 = 0x040u32 << ADC_TR1_LT1_POS;
pub const ADC_TR1_LT1_7: u32 = 0x080u32 << ADC_TR1_LT1_POS;
pub const ADC_TR1_LT1_8: u32 = 0x100u32 << ADC_TR1_LT1_POS;
pub const ADC_TR1_LT1_9: u32 = 0x200u32 << ADC_TR1_LT1_POS;
pub const ADC_TR1_LT1_10: u32 = 0x400u32 << ADC_TR1_LT1_POS;
pub const ADC_TR1_LT1_11: u32 = 0x800u32 << ADC_TR1_LT1_POS;
pub const ADC_TR1_HT1_POS: u32 = 16u32;
pub const ADC_TR1_HT1_MSK: u32 = 0xFFFu32 << ADC_TR1_HT1_POS;
pub const ADC_TR1_HT1: u32 = ADC_TR1_HT1_MSK;
pub const ADC_TR1_HT1_0: u32 = 0x001u32 << ADC_TR1_HT1_POS;
pub const ADC_TR1_HT1_1: u32 = 0x002u32 << ADC_TR1_HT1_POS;
pub const ADC_TR1_HT1_2: u32 = 0x004u32 << ADC_TR1_HT1_POS;
pub const ADC_TR1_HT1_3: u32 = 0x008u32 << ADC_TR1_HT1_POS;
pub const ADC_TR1_HT1_4: u32 = 0x010u32 << ADC_TR1_HT1_POS;
pub const ADC_TR1_HT1_5: u32 = 0x020u32 << ADC_TR1_HT1_POS;
pub const ADC_TR1_HT1_6: u32 = 0x040u32 << ADC_TR1_HT1_POS;
pub const ADC_TR1_HT1_7: u32 = 0x080u32 << ADC_TR1_HT1_POS;
pub const ADC_TR1_HT1_8: u32 = 0x100u32 << ADC_TR1_HT1_POS;
pub const ADC_TR1_HT1_9: u32 = 0x200u32 << ADC_TR1_HT1_POS;
pub const ADC_TR1_HT1_10: u32 = 0x400u32 << ADC_TR1_HT1_POS;
pub const ADC_TR1_HT1_11: u32 = 0x800u32 << ADC_TR1_HT1_POS;
pub const ADC_TR_HT: u32 = ADC_TR1_HT1;
pub const ADC_TR_LT: u32 = ADC_TR1_LT1;
pub const ADC_HTR_HT: u32 = ADC_TR1_HT1;
pub const ADC_LTR_LT: u32 = ADC_TR1_LT1;
pub const ADC_CHSELR_CHSEL_POS: u32 = 0u32;
pub const ADC_CHSELR_CHSEL_MSK: u32 = 0x7FFFFu32 << ADC_CHSELR_CHSEL_POS;
pub const ADC_CHSELR_CHSEL: u32 = ADC_CHSELR_CHSEL_MSK;
pub const ADC_CHSELR_CHSEL18_POS: u32 = 18u32;
pub const ADC_CHSELR_CHSEL18_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL18_POS;
pub const ADC_CHSELR_CHSEL18: u32 = ADC_CHSELR_CHSEL18_MSK;
pub const ADC_CHSELR_CHSEL17_POS: u32 = 17u32;
pub const ADC_CHSELR_CHSEL17_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL17_POS;
pub const ADC_CHSELR_CHSEL17: u32 = ADC_CHSELR_CHSEL17_MSK;
pub const ADC_CHSELR_CHSEL16_POS: u32 = 16u32;
pub const ADC_CHSELR_CHSEL16_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL16_POS;
pub const ADC_CHSELR_CHSEL16: u32 = ADC_CHSELR_CHSEL16_MSK;
pub const ADC_CHSELR_CHSEL15_POS: u32 = 15u32;
pub const ADC_CHSELR_CHSEL15_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL15_POS;
pub const ADC_CHSELR_CHSEL15: u32 = ADC_CHSELR_CHSEL15_MSK;
pub const ADC_CHSELR_CHSEL14_POS: u32 = 14u32;
pub const ADC_CHSELR_CHSEL14_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL14_POS;
pub const ADC_CHSELR_CHSEL14: u32 = ADC_CHSELR_CHSEL14_MSK;
pub const ADC_CHSELR_CHSEL13_POS: u32 = 13u32;
pub const ADC_CHSELR_CHSEL13_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL13_POS;
pub const ADC_CHSELR_CHSEL13: u32 = ADC_CHSELR_CHSEL13_MSK;
pub const ADC_CHSELR_CHSEL12_POS: u32 = 12u32;
pub const ADC_CHSELR_CHSEL12_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL12_POS;
pub const ADC_CHSELR_CHSEL12: u32 = ADC_CHSELR_CHSEL12_MSK;
pub const ADC_CHSELR_CHSEL11_POS: u32 = 11u32;
pub const ADC_CHSELR_CHSEL11_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL11_POS;
pub const ADC_CHSELR_CHSEL11: u32 = ADC_CHSELR_CHSEL11_MSK;
pub const ADC_CHSELR_CHSEL10_POS: u32 = 10u32;
pub const ADC_CHSELR_CHSEL10_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL10_POS;
pub const ADC_CHSELR_CHSEL10: u32 = ADC_CHSELR_CHSEL10_MSK;
pub const ADC_CHSELR_CHSEL9_POS: u32 = 9u32;
pub const ADC_CHSELR_CHSEL9_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL9_POS;
pub const ADC_CHSELR_CHSEL9: u32 = ADC_CHSELR_CHSEL9_MSK;
pub const ADC_CHSELR_CHSEL8_POS: u32 = 8u32;
pub const ADC_CHSELR_CHSEL8_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL8_POS;
pub const ADC_CHSELR_CHSEL8: u32 = ADC_CHSELR_CHSEL8_MSK;
pub const ADC_CHSELR_CHSEL7_POS: u32 = 7u32;
pub const ADC_CHSELR_CHSEL7_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL7_POS;
pub const ADC_CHSELR_CHSEL7: u32 = ADC_CHSELR_CHSEL7_MSK;
pub const ADC_CHSELR_CHSEL6_POS: u32 = 6u32;
pub const ADC_CHSELR_CHSEL6_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL6_POS;
pub const ADC_CHSELR_CHSEL6: u32 = ADC_CHSELR_CHSEL6_MSK;
pub const ADC_CHSELR_CHSEL5_POS: u32 = 5u32;
pub const ADC_CHSELR_CHSEL5_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL5_POS;
pub const ADC_CHSELR_CHSEL5: u32 = ADC_CHSELR_CHSEL5_MSK;
pub const ADC_CHSELR_CHSEL4_POS: u32 = 4u32;
pub const ADC_CHSELR_CHSEL4_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL4_POS;
pub const ADC_CHSELR_CHSEL4: u32 = ADC_CHSELR_CHSEL4_MSK;
pub const ADC_CHSELR_CHSEL3_POS: u32 = 3u32;
pub const ADC_CHSELR_CHSEL3_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL3_POS;
pub const ADC_CHSELR_CHSEL3: u32 = ADC_CHSELR_CHSEL3_MSK;
pub const ADC_CHSELR_CHSEL2_POS: u32 = 2u32;
pub const ADC_CHSELR_CHSEL2_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL2_POS;
pub const ADC_CHSELR_CHSEL2: u32 = ADC_CHSELR_CHSEL2_MSK;
pub const ADC_CHSELR_CHSEL1_POS: u32 = 1u32;
pub const ADC_CHSELR_CHSEL1_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL1_POS;
pub const ADC_CHSELR_CHSEL1: u32 = ADC_CHSELR_CHSEL1_MSK;
pub const ADC_CHSELR_CHSEL0_POS: u32 = 0u32;
pub const ADC_CHSELR_CHSEL0_MSK: u32 = 0x1u32 << ADC_CHSELR_CHSEL0_POS;
pub const ADC_CHSELR_CHSEL0: u32 = ADC_CHSELR_CHSEL0_MSK;
pub const ADC_DR_DATA_POS: u32 = 0u32;
pub const ADC_DR_DATA_MSK: u32 = 0xFFFFu32 << ADC_DR_DATA_POS;
pub const ADC_DR_DATA: u32 = ADC_DR_DATA_MSK;
pub const ADC_DR_DATA_0: u32 = 0x0001u32 << ADC_DR_DATA_POS;
pub const ADC_DR_DATA_1: u32 = 0x0002u32 << ADC_DR_DATA_POS;
pub const ADC_DR_DATA_2: u32 = 0x0004u32 << ADC_DR_DATA_POS;
pub const ADC_DR_DATA_3: u32 = 0x0008u32 << ADC_DR_DATA_POS;
pub const ADC_DR_DATA_4: u32 = 0x0010u32 << ADC_DR_DATA_POS;
pub const ADC_DR_DATA_5: u32 = 0x0020u32 << ADC_DR_DATA_POS;
pub const ADC_DR_DATA_6: u32 = 0x0040u32 << ADC_DR_DATA_POS;
pub const ADC_DR_DATA_7: u32 = 0x0080u32 << ADC_DR_DATA_POS;
pub const ADC_DR_DATA_8: u32 = 0x0100u32 << ADC_DR_DATA_POS;
pub const ADC_DR_DATA_9: u32 = 0x0200u32 << ADC_DR_DATA_POS;
pub const ADC_DR_DATA_10: u32 = 0x0400u32 << ADC_DR_DATA_POS;
pub const ADC_DR_DATA_11: u32 = 0x0800u32 << ADC_DR_DATA_POS;
pub const ADC_DR_DATA_12: u32 = 0x1000u32 << ADC_DR_DATA_POS;
pub const ADC_DR_DATA_13: u32 = 0x2000u32 << ADC_DR_DATA_POS;
pub const ADC_DR_DATA_14: u32 = 0x4000u32 << ADC_DR_DATA_POS;
pub const ADC_DR_DATA_15: u32 = 0x8000u32 << ADC_DR_DATA_POS;
pub const ADC_CCR_VREFEN_POS: u32 = 22u32;
pub const ADC_CCR_VREFEN_MSK: u32 = 0x1u32 << ADC_CCR_VREFEN_POS;
pub const ADC_CCR_VREFEN: u32 = ADC_CCR_VREFEN_MSK;
pub const ADC_CCR_TSEN_POS: u32 = 23u32;
pub const ADC_CCR_TSEN_MSK: u32 = 0x1u32 << ADC_CCR_TSEN_POS;
pub const ADC_CCR_TSEN: u32 = ADC_CCR_TSEN_MSK;
pub const CRC_DR_DR_POS: u32 = 0u32;
pub const CRC_DR_DR_MSK: u32 = 0xFFFFFFFFu32 << CRC_DR_DR_POS;
pub const CRC_DR_DR: u32 = CRC_DR_DR_MSK;
pub const CRC_CR_RESET_POS: u32 = 0u32;
pub const CRC_CR_RESET_MSK: u32 = 0x1u32 << CRC_CR_RESET_POS;
pub const CRC_CR_RESET: u32 = CRC_CR_RESET_MSK;
pub const CRC_CR_REV_IN_POS: u32 = 5u32;
pub const CRC_CR_REV_IN_MSK: u32 = 0x3u32 << CRC_CR_REV_IN_POS;
pub const CRC_CR_REV_IN: u32 = CRC_CR_REV_IN_MSK;
pub const CRC_CR_REV_IN_0: u32 = 0x1u32 << CRC_CR_REV_IN_POS;
pub const CRC_CR_REV_IN_1: u32 = 0x2u32 << CRC_CR_REV_IN_POS;
pub const CRC_CR_REV_OUT_POS: u32 = 7u32;
pub const CRC_CR_REV_OUT_MSK: u32 = 0x1u32 << CRC_CR_REV_OUT_POS;
pub const CRC_CR_REV_OUT: u32 = CRC_CR_REV_OUT_MSK;
pub const CRC_INIT_INIT_POS: u32 = 0u32;
pub const CRC_INIT_INIT_MSK: u32 = 0xFFFFFFFFu32 << CRC_INIT_INIT_POS;
pub const CRC_INIT_INIT: u32 = CRC_INIT_INIT_MSK;
pub const DBGMCU_IDCODE_DEV_ID_POS: u32 = 0u32;
pub const DBGMCU_IDCODE_DEV_ID_MSK: u32 = 0xFFFu32 << DBGMCU_IDCODE_DEV_ID_POS;
pub const DBGMCU_IDCODE_DEV_ID: u32 = DBGMCU_IDCODE_DEV_ID_MSK;
pub const DBGMCU_IDCODE_REV_ID_POS: u32 = 16u32;
pub const DBGMCU_IDCODE_REV_ID_MSK: u32 = 0xFFFFu32 << DBGMCU_IDCODE_REV_ID_POS;
pub const DBGMCU_IDCODE_REV_ID: u32 = DBGMCU_IDCODE_REV_ID_MSK;
pub const DBGMCU_IDCODE_REV_ID_0: u32 = 0x0001u32 << DBGMCU_IDCODE_REV_ID_POS;
pub const DBGMCU_IDCODE_REV_ID_1: u32 = 0x0002u32 << DBGMCU_IDCODE_REV_ID_POS;
pub const DBGMCU_IDCODE_REV_ID_2: u32 = 0x0004u32 << DBGMCU_IDCODE_REV_ID_POS;
pub const DBGMCU_IDCODE_REV_ID_3: u32 = 0x0008u32 << DBGMCU_IDCODE_REV_ID_POS;
pub const DBGMCU_IDCODE_REV_ID_4: u32 = 0x0010u32 << DBGMCU_IDCODE_REV_ID_POS;
pub const DBGMCU_IDCODE_REV_ID_5: u32 = 0x0020u32 << DBGMCU_IDCODE_REV_ID_POS;
pub const DBGMCU_IDCODE_REV_ID_6: u32 = 0x0040u32 << DBGMCU_IDCODE_REV_ID_POS;
pub const DBGMCU_IDCODE_REV_ID_7: u32 = 0x0080u32 << DBGMCU_IDCODE_REV_ID_POS;
pub const DBGMCU_IDCODE_REV_ID_8: u32 = 0x0100u32 << DBGMCU_IDCODE_REV_ID_POS;
pub const DBGMCU_IDCODE_REV_ID_9: u32 = 0x0200u32 << DBGMCU_IDCODE_REV_ID_POS;
pub const DBGMCU_IDCODE_REV_ID_10: u32 = 0x0400u32 << DBGMCU_IDCODE_REV_ID_POS;
pub const DBGMCU_IDCODE_REV_ID_11: u32 = 0x0800u32 << DBGMCU_IDCODE_REV_ID_POS;
pub const DBGMCU_IDCODE_REV_ID_12: u32 = 0x1000u32 << DBGMCU_IDCODE_REV_ID_POS;
pub const DBGMCU_IDCODE_REV_ID_13: u32 = 0x2000u32 << DBGMCU_IDCODE_REV_ID_POS;
pub const DBGMCU_IDCODE_REV_ID_14: u32 = 0x4000u32 << DBGMCU_IDCODE_REV_ID_POS;
pub const DBGMCU_IDCODE_REV_ID_15: u32 = 0x8000u32 << DBGMCU_IDCODE_REV_ID_POS;
pub const DBGMCU_CR_DBG_STOP_POS: u32 = 1u32;
pub const DBGMCU_CR_DBG_STOP_MSK: u32 = 0x1u32 << DBGMCU_CR_DBG_STOP_POS;
pub const DBGMCU_CR_DBG_STOP: u32 = DBGMCU_CR_DBG_STOP_MSK;
pub const DBGMCU_CR_DBG_STANDBY_POS: u32 = 2u32;
pub const DBGMCU_CR_DBG_STANDBY_MSK: u32 = 0x1u32 << DBGMCU_CR_DBG_STANDBY_POS;
pub const DBGMCU_CR_DBG_STANDBY: u32 = DBGMCU_CR_DBG_STANDBY_MSK;
pub const DBGMCU_APB1_FZ_DBG_TIM3_STOP_POS: u32 = 1u32;
pub const DBGMCU_APB1_FZ_DBG_TIM3_STOP_MSK: u32 = 0x1u32 << DBGMCU_APB1_FZ_DBG_TIM3_STOP_POS;
pub const DBGMCU_APB1_FZ_DBG_TIM3_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM3_STOP_MSK;
pub const DBGMCU_APB1_FZ_DBG_TIM14_STOP_POS: u32 = 8u32;
pub const DBGMCU_APB1_FZ_DBG_TIM14_STOP_MSK: u32 = 0x1u32 << DBGMCU_APB1_FZ_DBG_TIM14_STOP_POS;
pub const DBGMCU_APB1_FZ_DBG_TIM14_STOP: u32 = DBGMCU_APB1_FZ_DBG_TIM14_STOP_MSK;
pub const DBGMCU_APB1_FZ_DBG_RTC_STOP_POS: u32 = 10u32;
pub const DBGMCU_APB1_FZ_DBG_RTC_STOP_MSK: u32 = 0x1u32 << DBGMCU_APB1_FZ_DBG_RTC_STOP_POS;
pub const DBGMCU_APB1_FZ_DBG_RTC_STOP: u32 = DBGMCU_APB1_FZ_DBG_RTC_STOP_MSK;
pub const DBGMCU_APB1_FZ_DBG_WWDG_STOP_POS: u32 = 11u32;
pub const DBGMCU_APB1_FZ_DBG_WWDG_STOP_MSK: u32 = 0x1u32 << DBGMCU_APB1_FZ_DBG_WWDG_STOP_POS;
pub const DBGMCU_APB1_FZ_DBG_WWDG_STOP: u32 = DBGMCU_APB1_FZ_DBG_WWDG_STOP_MSK;
pub const DBGMCU_APB1_FZ_DBG_IWDG_STOP_POS: u32 = 12u32;
pub const DBGMCU_APB1_FZ_DBG_IWDG_STOP_MSK: u32 = 0x1u32 << DBGMCU_APB1_FZ_DBG_IWDG_STOP_POS;
pub const DBGMCU_APB1_FZ_DBG_IWDG_STOP: u32 = DBGMCU_APB1_FZ_DBG_IWDG_STOP_MSK;
pub const DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT_POS: u32 = 21u32;
pub const DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT_MSK: u32 = 0x1u32 << DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT_POS;
pub const DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT: u32 = DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT_MSK;
pub const DBGMCU_APB2_FZ_DBG_TIM1_STOP_POS: u32 = 11u32;
pub const DBGMCU_APB2_FZ_DBG_TIM1_STOP_MSK: u32 = 0x1u32 << DBGMCU_APB2_FZ_DBG_TIM1_STOP_POS;
pub const DBGMCU_APB2_FZ_DBG_TIM1_STOP: u32 = DBGMCU_APB2_FZ_DBG_TIM1_STOP_MSK;
pub const DBGMCU_APB2_FZ_DBG_TIM16_STOP_POS: u32 = 17u32;
pub const DBGMCU_APB2_FZ_DBG_TIM16_STOP_MSK: u32 = 0x1u32 << DBGMCU_APB2_FZ_DBG_TIM16_STOP_POS;
pub const DBGMCU_APB2_FZ_DBG_TIM16_STOP: u32 = DBGMCU_APB2_FZ_DBG_TIM16_STOP_MSK;
pub const DBGMCU_APB2_FZ_DBG_TIM17_STOP_POS: u32 = 18u32;
pub const DBGMCU_APB2_FZ_DBG_TIM17_STOP_MSK: u32 = 0x1u32 << DBGMCU_APB2_FZ_DBG_TIM17_STOP_POS;
pub const DBGMCU_APB2_FZ_DBG_TIM17_STOP: u32 = DBGMCU_APB2_FZ_DBG_TIM17_STOP_MSK;
pub const DMA_ISR_GIF1_POS: u32 = 0u32;
pub const DMA_ISR_GIF1_MSK: u32 = 0x1u32 << DMA_ISR_GIF1_POS;
pub const DMA_ISR_GIF1: u32 = DMA_ISR_GIF1_MSK;
pub const DMA_ISR_TCIF1_POS: u32 = 1u32;
pub const DMA_ISR_TCIF1_MSK: u32 = 0x1u32 << DMA_ISR_TCIF1_POS;
pub const DMA_ISR_TCIF1: u32 = DMA_ISR_TCIF1_MSK;
pub const DMA_ISR_HTIF1_POS: u32 = 2u32;
pub const DMA_ISR_HTIF1_MSK: u32 = 0x1u32 << DMA_ISR_HTIF1_POS;
pub const DMA_ISR_HTIF1: u32 = DMA_ISR_HTIF1_MSK;
pub const DMA_ISR_TEIF1_POS: u32 = 3u32;
pub const DMA_ISR_TEIF1_MSK: u32 = 0x1u32 << DMA_ISR_TEIF1_POS;
pub const DMA_ISR_TEIF1: u32 = DMA_ISR_TEIF1_MSK;
pub const DMA_ISR_GIF2_POS: u32 = 4u32;
pub const DMA_ISR_GIF2_MSK: u32 = 0x1u32 << DMA_ISR_GIF2_POS;
pub const DMA_ISR_GIF2: u32 = DMA_ISR_GIF2_MSK;
pub const DMA_ISR_TCIF2_POS: u32 = 5u32;
pub const DMA_ISR_TCIF2_MSK: u32 = 0x1u32 << DMA_ISR_TCIF2_POS;
pub const DMA_ISR_TCIF2: u32 = DMA_ISR_TCIF2_MSK;
pub const DMA_ISR_HTIF2_POS: u32 = 6u32;
pub const DMA_ISR_HTIF2_MSK: u32 = 0x1u32 << DMA_ISR_HTIF2_POS;
pub const DMA_ISR_HTIF2: u32 = DMA_ISR_HTIF2_MSK;
pub const DMA_ISR_TEIF2_POS: u32 = 7u32;
pub const DMA_ISR_TEIF2_MSK: u32 = 0x1u32 << DMA_ISR_TEIF2_POS;
pub const DMA_ISR_TEIF2: u32 = DMA_ISR_TEIF2_MSK;
pub const DMA_ISR_GIF3_POS: u32 = 8u32;
pub const DMA_ISR_GIF3_MSK: u32 = 0x1u32 << DMA_ISR_GIF3_POS;
pub const DMA_ISR_GIF3: u32 = DMA_ISR_GIF3_MSK;
pub const DMA_ISR_TCIF3_POS: u32 = 9u32;
pub const DMA_ISR_TCIF3_MSK: u32 = 0x1u32 << DMA_ISR_TCIF3_POS;
pub const DMA_ISR_TCIF3: u32 = DMA_ISR_TCIF3_MSK;
pub const DMA_ISR_HTIF3_POS: u32 = 10u32;
pub const DMA_ISR_HTIF3_MSK: u32 = 0x1u32 << DMA_ISR_HTIF3_POS;
pub const DMA_ISR_HTIF3: u32 = DMA_ISR_HTIF3_MSK;
pub const DMA_ISR_TEIF3_POS: u32 = 11u32;
pub const DMA_ISR_TEIF3_MSK: u32 = 0x1u32 << DMA_ISR_TEIF3_POS;
pub const DMA_ISR_TEIF3: u32 = DMA_ISR_TEIF3_MSK;
pub const DMA_ISR_GIF4_POS: u32 = 12u32;
pub const DMA_ISR_GIF4_MSK: u32 = 0x1u32 << DMA_ISR_GIF4_POS;
pub const DMA_ISR_GIF4: u32 = DMA_ISR_GIF4_MSK;
pub const DMA_ISR_TCIF4_POS: u32 = 13u32;
pub const DMA_ISR_TCIF4_MSK: u32 = 0x1u32 << DMA_ISR_TCIF4_POS;
pub const DMA_ISR_TCIF4: u32 = DMA_ISR_TCIF4_MSK;
pub const DMA_ISR_HTIF4_POS: u32 = 14u32;
pub const DMA_ISR_HTIF4_MSK: u32 = 0x1u32 << DMA_ISR_HTIF4_POS;
pub const DMA_ISR_HTIF4: u32 = DMA_ISR_HTIF4_MSK;
pub const DMA_ISR_TEIF4_POS: u32 = 15u32;
pub const DMA_ISR_TEIF4_MSK: u32 = 0x1u32 << DMA_ISR_TEIF4_POS;
pub const DMA_ISR_TEIF4: u32 = DMA_ISR_TEIF4_MSK;
pub const DMA_ISR_GIF5_POS: u32 = 16u32;
pub const DMA_ISR_GIF5_MSK: u32 = 0x1u32 << DMA_ISR_GIF5_POS;
pub const DMA_ISR_GIF5: u32 = DMA_ISR_GIF5_MSK;
pub const DMA_ISR_TCIF5_POS: u32 = 17u32;
pub const DMA_ISR_TCIF5_MSK: u32 = 0x1u32 << DMA_ISR_TCIF5_POS;
pub const DMA_ISR_TCIF5: u32 = DMA_ISR_TCIF5_MSK;
pub const DMA_ISR_HTIF5_POS: u32 = 18u32;
pub const DMA_ISR_HTIF5_MSK: u32 = 0x1u32 << DMA_ISR_HTIF5_POS;
pub const DMA_ISR_HTIF5: u32 = DMA_ISR_HTIF5_MSK;
pub const DMA_ISR_TEIF5_POS: u32 = 19u32;
pub const DMA_ISR_TEIF5_MSK: u32 = 0x1u32 << DMA_ISR_TEIF5_POS;
pub const DMA_ISR_TEIF5: u32 = DMA_ISR_TEIF5_MSK;
pub const DMA_IFCR_CGIF1_POS: u32 = 0u32;
pub const DMA_IFCR_CGIF1_MSK: u32 = 0x1u32 << DMA_IFCR_CGIF1_POS;
pub const DMA_IFCR_CGIF1: u32 = DMA_IFCR_CGIF1_MSK;
pub const DMA_IFCR_CTCIF1_POS: u32 = 1u32;
pub const DMA_IFCR_CTCIF1_MSK: u32 = 0x1u32 << DMA_IFCR_CTCIF1_POS;
pub const DMA_IFCR_CTCIF1: u32 = DMA_IFCR_CTCIF1_MSK;
pub const DMA_IFCR_CHTIF1_POS: u32 = 2u32;
pub const DMA_IFCR_CHTIF1_MSK: u32 = 0x1u32 << DMA_IFCR_CHTIF1_POS;
pub const DMA_IFCR_CHTIF1: u32 = DMA_IFCR_CHTIF1_MSK;
pub const DMA_IFCR_CTEIF1_POS: u32 = 3u32;
pub const DMA_IFCR_CTEIF1_MSK: u32 = 0x1u32 << DMA_IFCR_CTEIF1_POS;
pub const DMA_IFCR_CTEIF1: u32 = DMA_IFCR_CTEIF1_MSK;
pub const DMA_IFCR_CGIF2_POS: u32 = 4u32;
pub const DMA_IFCR_CGIF2_MSK: u32 = 0x1u32 << DMA_IFCR_CGIF2_POS;
pub const DMA_IFCR_CGIF2: u32 = DMA_IFCR_CGIF2_MSK;
pub const DMA_IFCR_CTCIF2_POS: u32 = 5u32;
pub const DMA_IFCR_CTCIF2_MSK: u32 = 0x1u32 << DMA_IFCR_CTCIF2_POS;
pub const DMA_IFCR_CTCIF2: u32 = DMA_IFCR_CTCIF2_MSK;
pub const DMA_IFCR_CHTIF2_POS: u32 = 6u32;
pub const DMA_IFCR_CHTIF2_MSK: u32 = 0x1u32 << DMA_IFCR_CHTIF2_POS;
pub const DMA_IFCR_CHTIF2: u32 = DMA_IFCR_CHTIF2_MSK;
pub const DMA_IFCR_CTEIF2_POS: u32 = 7u32;
pub const DMA_IFCR_CTEIF2_MSK: u32 = 0x1u32 << DMA_IFCR_CTEIF2_POS;
pub const DMA_IFCR_CTEIF2: u32 = DMA_IFCR_CTEIF2_MSK;
pub const DMA_IFCR_CGIF3_POS: u32 = 8u32;
pub const DMA_IFCR_CGIF3_MSK: u32 = 0x1u32 << DMA_IFCR_CGIF3_POS;
pub const DMA_IFCR_CGIF3: u32 = DMA_IFCR_CGIF3_MSK;
pub const DMA_IFCR_CTCIF3_POS: u32 = 9u32;
pub const DMA_IFCR_CTCIF3_MSK: u32 = 0x1u32 << DMA_IFCR_CTCIF3_POS;
pub const DMA_IFCR_CTCIF3: u32 = DMA_IFCR_CTCIF3_MSK;
pub const DMA_IFCR_CHTIF3_POS: u32 = 10u32;
pub const DMA_IFCR_CHTIF3_MSK: u32 = 0x1u32 << DMA_IFCR_CHTIF3_POS;
pub const DMA_IFCR_CHTIF3: u32 = DMA_IFCR_CHTIF3_MSK;
pub const DMA_IFCR_CTEIF3_POS: u32 = 11u32;
pub const DMA_IFCR_CTEIF3_MSK: u32 = 0x1u32 << DMA_IFCR_CTEIF3_POS;
pub const DMA_IFCR_CTEIF3: u32 = DMA_IFCR_CTEIF3_MSK;
pub const DMA_IFCR_CGIF4_POS: u32 = 12u32;
pub const DMA_IFCR_CGIF4_MSK: u32 = 0x1u32 << DMA_IFCR_CGIF4_POS;
pub const DMA_IFCR_CGIF4: u32 = DMA_IFCR_CGIF4_MSK;
pub const DMA_IFCR_CTCIF4_POS: u32 = 13u32;
pub const DMA_IFCR_CTCIF4_MSK: u32 = 0x1u32 << DMA_IFCR_CTCIF4_POS;
pub const DMA_IFCR_CTCIF4: u32 = DMA_IFCR_CTCIF4_MSK;
pub const DMA_IFCR_CHTIF4_POS: u32 = 14u32;
pub const DMA_IFCR_CHTIF4_MSK: u32 = 0x1u32 << DMA_IFCR_CHTIF4_POS;
pub const DMA_IFCR_CHTIF4: u32 = DMA_IFCR_CHTIF4_MSK;
pub const DMA_IFCR_CTEIF4_POS: u32 = 15u32;
pub const DMA_IFCR_CTEIF4_MSK: u32 = 0x1u32 << DMA_IFCR_CTEIF4_POS;
pub const DMA_IFCR_CTEIF4: u32 = DMA_IFCR_CTEIF4_MSK;
pub const DMA_IFCR_CGIF5_POS: u32 = 16u32;
pub const DMA_IFCR_CGIF5_MSK: u32 = 0x1u32 << DMA_IFCR_CGIF5_POS;
pub const DMA_IFCR_CGIF5: u32 = DMA_IFCR_CGIF5_MSK;
pub const DMA_IFCR_CTCIF5_POS: u32 = 17u32;
pub const DMA_IFCR_CTCIF5_MSK: u32 = 0x1u32 << DMA_IFCR_CTCIF5_POS;
pub const DMA_IFCR_CTCIF5: u32 = DMA_IFCR_CTCIF5_MSK;
pub const DMA_IFCR_CHTIF5_POS: u32 = 18u32;
pub const DMA_IFCR_CHTIF5_MSK: u32 = 0x1u32 << DMA_IFCR_CHTIF5_POS;
pub const DMA_IFCR_CHTIF5: u32 = DMA_IFCR_CHTIF5_MSK;
pub const DMA_IFCR_CTEIF5_POS: u32 = 19u32;
pub const DMA_IFCR_CTEIF5_MSK: u32 = 0x1u32 << DMA_IFCR_CTEIF5_POS;
pub const DMA_IFCR_CTEIF5: u32 = DMA_IFCR_CTEIF5_MSK;
pub const DMA_CCR_EN_POS: u32 = 0u32;
pub const DMA_CCR_EN_MSK: u32 = 0x1u32 << DMA_CCR_EN_POS;
pub const DMA_CCR_EN: u32 = DMA_CCR_EN_MSK;
pub const DMA_CCR_TCIE_POS: u32 = 1u32;
pub const DMA_CCR_TCIE_MSK: u32 = 0x1u32 << DMA_CCR_TCIE_POS;
pub const DMA_CCR_TCIE: u32 = DMA_CCR_TCIE_MSK;
pub const DMA_CCR_HTIE_POS: u32 = 2u32;
pub const DMA_CCR_HTIE_MSK: u32 = 0x1u32 << DMA_CCR_HTIE_POS;
pub const DMA_CCR_HTIE: u32 = DMA_CCR_HTIE_MSK;
pub const DMA_CCR_TEIE_POS: u32 = 3u32;
pub const DMA_CCR_TEIE_MSK: u32 = 0x1u32 << DMA_CCR_TEIE_POS;
pub const DMA_CCR_TEIE: u32 = DMA_CCR_TEIE_MSK;
pub const DMA_CCR_DIR_POS: u32 = 4u32;
pub const DMA_CCR_DIR_MSK: u32 = 0x1u32 << DMA_CCR_DIR_POS;
pub const DMA_CCR_DIR: u32 = DMA_CCR_DIR_MSK;
pub const DMA_CCR_CIRC_POS: u32 = 5u32;
pub const DMA_CCR_CIRC_MSK: u32 = 0x1u32 << DMA_CCR_CIRC_POS;
pub const DMA_CCR_CIRC: u32 = DMA_CCR_CIRC_MSK;
pub const DMA_CCR_PINC_POS: u32 = 6u32;
pub const DMA_CCR_PINC_MSK: u32 = 0x1u32 << DMA_CCR_PINC_POS;
pub const DMA_CCR_PINC: u32 = DMA_CCR_PINC_MSK;
pub const DMA_CCR_MINC_POS: u32 = 7u32;
pub const DMA_CCR_MINC_MSK: u32 = 0x1u32 << DMA_CCR_MINC_POS;
pub const DMA_CCR_MINC: u32 = DMA_CCR_MINC_MSK;
pub const DMA_CCR_PSIZE_POS: u32 = 8u32;
pub const DMA_CCR_PSIZE_MSK: u32 = 0x3u32 << DMA_CCR_PSIZE_POS;
pub const DMA_CCR_PSIZE: u32 = DMA_CCR_PSIZE_MSK;
pub const DMA_CCR_PSIZE_0: u32 = 0x1u32 << DMA_CCR_PSIZE_POS;
pub const DMA_CCR_PSIZE_1: u32 = 0x2u32 << DMA_CCR_PSIZE_POS;
pub const DMA_CCR_MSIZE_POS: u32 = 10u32;
pub const DMA_CCR_MSIZE_MSK: u32 = 0x3u32 << DMA_CCR_MSIZE_POS;
pub const DMA_CCR_MSIZE: u32 = DMA_CCR_MSIZE_MSK;
pub const DMA_CCR_MSIZE_0: u32 = 0x1u32 << DMA_CCR_MSIZE_POS;
pub const DMA_CCR_MSIZE_1: u32 = 0x2u32 << DMA_CCR_MSIZE_POS;
pub const DMA_CCR_PL_POS: u32 = 12u32;
pub const DMA_CCR_PL_MSK: u32 = 0x3u32 << DMA_CCR_PL_POS;
pub const DMA_CCR_PL: u32 = DMA_CCR_PL_MSK;
pub const DMA_CCR_PL_0: u32 = 0x1u32 << DMA_CCR_PL_POS;
pub const DMA_CCR_PL_1: u32 = 0x2u32 << DMA_CCR_PL_POS;
pub const DMA_CCR_MEM2MEM_POS: u32 = 14u32;
pub const DMA_CCR_MEM2MEM_MSK: u32 = 0x1u32 << DMA_CCR_MEM2MEM_POS;
pub const DMA_CCR_MEM2MEM: u32 = DMA_CCR_MEM2MEM_MSK;
pub const DMA_CNDTR_NDT_POS: u32 = 0u32;
pub const DMA_CNDTR_NDT_MSK: u32 = 0xFFFFu32 << DMA_CNDTR_NDT_POS;
pub const DMA_CNDTR_NDT: u32 = DMA_CNDTR_NDT_MSK;
pub const DMA_CPAR_PA_POS: u32 = 0u32;
pub const DMA_CPAR_PA_MSK: u32 = 0xFFFFFFFFu32 << DMA_CPAR_PA_POS;
pub const DMA_CPAR_PA: u32 = DMA_CPAR_PA_MSK;
pub const DMA_CMAR_MA_POS: u32 = 0u32;
pub const DMA_CMAR_MA_MSK: u32 = 0xFFFFFFFFu32 << DMA_CMAR_MA_POS;
pub const DMA_CMAR_MA: u32 = DMA_CMAR_MA_MSK;
pub const EXTI_IMR_MR0_POS: u32 = 0u32;
pub const EXTI_IMR_MR0_MSK: u32 = 0x1u32 << EXTI_IMR_MR0_POS;
pub const EXTI_IMR_MR0: u32 = EXTI_IMR_MR0_MSK;
pub const EXTI_IMR_MR1_POS: u32 = 1u32;
pub const EXTI_IMR_MR1_MSK: u32 = 0x1u32 << EXTI_IMR_MR1_POS;
pub const EXTI_IMR_MR1: u32 = EXTI_IMR_MR1_MSK;
pub const EXTI_IMR_MR2_POS: u32 = 2u32;
pub const EXTI_IMR_MR2_MSK: u32 = 0x1u32 << EXTI_IMR_MR2_POS;
pub const EXTI_IMR_MR2: u32 = EXTI_IMR_MR2_MSK;
pub const EXTI_IMR_MR3_POS: u32 = 3u32;
pub const EXTI_IMR_MR3_MSK: u32 = 0x1u32 << EXTI_IMR_MR3_POS;
pub const EXTI_IMR_MR3: u32 = EXTI_IMR_MR3_MSK;
pub const EXTI_IMR_MR4_POS: u32 = 4u32;
pub const EXTI_IMR_MR4_MSK: u32 = 0x1u32 << EXTI_IMR_MR4_POS;
pub const EXTI_IMR_MR4: u32 = EXTI_IMR_MR4_MSK;
pub const EXTI_IMR_MR5_POS: u32 = 5u32;
pub const EXTI_IMR_MR5_MSK: u32 = 0x1u32 << EXTI_IMR_MR5_POS;
pub const EXTI_IMR_MR5: u32 = EXTI_IMR_MR5_MSK;
pub const EXTI_IMR_MR6_POS: u32 = 6u32;
pub const EXTI_IMR_MR6_MSK: u32 = 0x1u32 << EXTI_IMR_MR6_POS;
pub const EXTI_IMR_MR6: u32 = EXTI_IMR_MR6_MSK;
pub const EXTI_IMR_MR7_POS: u32 = 7u32;
pub const EXTI_IMR_MR7_MSK: u32 = 0x1u32 << EXTI_IMR_MR7_POS;
pub const EXTI_IMR_MR7: u32 = EXTI_IMR_MR7_MSK;
pub const EXTI_IMR_MR8_POS: u32 = 8u32;
pub const EXTI_IMR_MR8_MSK: u32 = 0x1u32 << EXTI_IMR_MR8_POS;
pub const EXTI_IMR_MR8: u32 = EXTI_IMR_MR8_MSK;
pub const EXTI_IMR_MR9_POS: u32 = 9u32;
pub const EXTI_IMR_MR9_MSK: u32 = 0x1u32 << EXTI_IMR_MR9_POS;
pub const EXTI_IMR_MR9: u32 = EXTI_IMR_MR9_MSK;
pub const EXTI_IMR_MR10_POS: u32 = 10u32;
pub const EXTI_IMR_MR10_MSK: u32 = 0x1u32 << EXTI_IMR_MR10_POS;
pub const EXTI_IMR_MR10: u32 = EXTI_IMR_MR10_MSK;
pub const EXTI_IMR_MR11_POS: u32 = 11u32;
pub const EXTI_IMR_MR11_MSK: u32 = 0x1u32 << EXTI_IMR_MR11_POS;
pub const EXTI_IMR_MR11: u32 = EXTI_IMR_MR11_MSK;
pub const EXTI_IMR_MR12_POS: u32 = 12u32;
pub const EXTI_IMR_MR12_MSK: u32 = 0x1u32 << EXTI_IMR_MR12_POS;
pub const EXTI_IMR_MR12: u32 = EXTI_IMR_MR12_MSK;
pub const EXTI_IMR_MR13_POS: u32 = 13u32;
pub const EXTI_IMR_MR13_MSK: u32 = 0x1u32 << EXTI_IMR_MR13_POS;
pub const EXTI_IMR_MR13: u32 = EXTI_IMR_MR13_MSK;
pub const EXTI_IMR_MR14_POS: u32 = 14u32;
pub const EXTI_IMR_MR14_MSK: u32 = 0x1u32 << EXTI_IMR_MR14_POS;
pub const EXTI_IMR_MR14: u32 = EXTI_IMR_MR14_MSK;
pub const EXTI_IMR_MR15_POS: u32 = 15u32;
pub const EXTI_IMR_MR15_MSK: u32 = 0x1u32 << EXTI_IMR_MR15_POS;
pub const EXTI_IMR_MR15: u32 = EXTI_IMR_MR15_MSK;
pub const EXTI_IMR_MR17_POS: u32 = 17u32;
pub const EXTI_IMR_MR17_MSK: u32 = 0x1u32 << EXTI_IMR_MR17_POS;
pub const EXTI_IMR_MR17: u32 = EXTI_IMR_MR17_MSK;
pub const EXTI_IMR_MR19_POS: u32 = 19u32;
pub const EXTI_IMR_MR19_MSK: u32 = 0x1u32 << EXTI_IMR_MR19_POS;
pub const EXTI_IMR_MR19: u32 = EXTI_IMR_MR19_MSK;
pub const EXTI_IMR_IM0: u32 = EXTI_IMR_MR0;
pub const EXTI_IMR_IM1: u32 = EXTI_IMR_MR1;
pub const EXTI_IMR_IM2: u32 = EXTI_IMR_MR2;
pub const EXTI_IMR_IM3: u32 = EXTI_IMR_MR3;
pub const EXTI_IMR_IM4: u32 = EXTI_IMR_MR4;
pub const EXTI_IMR_IM5: u32 = EXTI_IMR_MR5;
pub const EXTI_IMR_IM6: u32 = EXTI_IMR_MR6;
pub const EXTI_IMR_IM7: u32 = EXTI_IMR_MR7;
pub const EXTI_IMR_IM8: u32 = EXTI_IMR_MR8;
pub const EXTI_IMR_IM9: u32 = EXTI_IMR_MR9;
pub const EXTI_IMR_IM10: u32 = EXTI_IMR_MR10;
pub const EXTI_IMR_IM11: u32 = EXTI_IMR_MR11;
pub const EXTI_IMR_IM12: u32 = EXTI_IMR_MR12;
pub const EXTI_IMR_IM13: u32 = EXTI_IMR_MR13;
pub const EXTI_IMR_IM14: u32 = EXTI_IMR_MR14;
pub const EXTI_IMR_IM15: u32 = EXTI_IMR_MR15;
pub const EXTI_IMR_IM17: u32 = EXTI_IMR_MR17;
pub const EXTI_IMR_IM19: u32 = EXTI_IMR_MR19;
pub const EXTI_IMR_IM_POS: u32 = 0u32;
pub const EXTI_IMR_IM_MSK: u32 = 0x8EFFFFu32 << EXTI_IMR_IM_POS;
pub const EXTI_IMR_IM: u32 = EXTI_IMR_IM_MSK;
pub const EXTI_EMR_MR0_POS: u32 = 0u32;
pub const EXTI_EMR_MR0_MSK: u32 = 0x1u32 << EXTI_EMR_MR0_POS;
pub const EXTI_EMR_MR0: u32 = EXTI_EMR_MR0_MSK;
pub const EXTI_EMR_MR1_POS: u32 = 1u32;
pub const EXTI_EMR_MR1_MSK: u32 = 0x1u32 << EXTI_EMR_MR1_POS;
pub const EXTI_EMR_MR1: u32 = EXTI_EMR_MR1_MSK;
pub const EXTI_EMR_MR2_POS: u32 = 2u32;
pub const EXTI_EMR_MR2_MSK: u32 = 0x1u32 << EXTI_EMR_MR2_POS;
pub const EXTI_EMR_MR2: u32 = EXTI_EMR_MR2_MSK;
pub const EXTI_EMR_MR3_POS: u32 = 3u32;
pub const EXTI_EMR_MR3_MSK: u32 = 0x1u32 << EXTI_EMR_MR3_POS;
pub const EXTI_EMR_MR3: u32 = EXTI_EMR_MR3_MSK;
pub const EXTI_EMR_MR4_POS: u32 = 4u32;
pub const EXTI_EMR_MR4_MSK: u32 = 0x1u32 << EXTI_EMR_MR4_POS;
pub const EXTI_EMR_MR4: u32 = EXTI_EMR_MR4_MSK;
pub const EXTI_EMR_MR5_POS: u32 = 5u32;
pub const EXTI_EMR_MR5_MSK: u32 = 0x1u32 << EXTI_EMR_MR5_POS;
pub const EXTI_EMR_MR5: u32 = EXTI_EMR_MR5_MSK;
pub const EXTI_EMR_MR6_POS: u32 = 6u32;
pub const EXTI_EMR_MR6_MSK: u32 = 0x1u32 << EXTI_EMR_MR6_POS;
pub const EXTI_EMR_MR6: u32 = EXTI_EMR_MR6_MSK;
pub const EXTI_EMR_MR7_POS: u32 = 7u32;
pub const EXTI_EMR_MR7_MSK: u32 = 0x1u32 << EXTI_EMR_MR7_POS;
pub const EXTI_EMR_MR7: u32 = EXTI_EMR_MR7_MSK;
pub const EXTI_EMR_MR8_POS: u32 = 8u32;
pub const EXTI_EMR_MR8_MSK: u32 = 0x1u32 << EXTI_EMR_MR8_POS;
pub const EXTI_EMR_MR8: u32 = EXTI_EMR_MR8_MSK;
pub const EXTI_EMR_MR9_POS: u32 = 9u32;
pub const EXTI_EMR_MR9_MSK: u32 = 0x1u32 << EXTI_EMR_MR9_POS;
pub const EXTI_EMR_MR9: u32 = EXTI_EMR_MR9_MSK;
pub const EXTI_EMR_MR10_POS: u32 = 10u32;
pub const EXTI_EMR_MR10_MSK: u32 = 0x1u32 << EXTI_EMR_MR10_POS;
pub const EXTI_EMR_MR10: u32 = EXTI_EMR_MR10_MSK;
pub const EXTI_EMR_MR11_POS: u32 = 11u32;
pub const EXTI_EMR_MR11_MSK: u32 = 0x1u32 << EXTI_EMR_MR11_POS;
pub const EXTI_EMR_MR11: u32 = EXTI_EMR_MR11_MSK;
pub const EXTI_EMR_MR12_POS: u32 = 12u32;
pub const EXTI_EMR_MR12_MSK: u32 = 0x1u32 << EXTI_EMR_MR12_POS;
pub const EXTI_EMR_MR12: u32 = EXTI_EMR_MR12_MSK;
pub const EXTI_EMR_MR13_POS: u32 = 13u32;
pub const EXTI_EMR_MR13_MSK: u32 = 0x1u32 << EXTI_EMR_MR13_POS;
pub const EXTI_EMR_MR13: u32 = EXTI_EMR_MR13_MSK;
pub const EXTI_EMR_MR14_POS: u32 = 14u32;
pub const EXTI_EMR_MR14_MSK: u32 = 0x1u32 << EXTI_EMR_MR14_POS;
pub const EXTI_EMR_MR14: u32 = EXTI_EMR_MR14_MSK;
pub const EXTI_EMR_MR15_POS: u32 = 15u32;
pub const EXTI_EMR_MR15_MSK: u32 = 0x1u32 << EXTI_EMR_MR15_POS;
pub const EXTI_EMR_MR15: u32 = EXTI_EMR_MR15_MSK;
pub const EXTI_EMR_MR17_POS: u32 = 17u32;
pub const EXTI_EMR_MR17_MSK: u32 = 0x1u32 << EXTI_EMR_MR17_POS;
pub const EXTI_EMR_MR17: u32 = EXTI_EMR_MR17_MSK;
pub const EXTI_EMR_MR19_POS: u32 = 19u32;
pub const EXTI_EMR_MR19_MSK: u32 = 0x1u32 << EXTI_EMR_MR19_POS;
pub const EXTI_EMR_MR19: u32 = EXTI_EMR_MR19_MSK;
pub const EXTI_EMR_EM0: u32 = EXTI_EMR_MR0;
pub const EXTI_EMR_EM1: u32 = EXTI_EMR_MR1;
pub const EXTI_EMR_EM2: u32 = EXTI_EMR_MR2;
pub const EXTI_EMR_EM3: u32 = EXTI_EMR_MR3;
pub const EXTI_EMR_EM4: u32 = EXTI_EMR_MR4;
pub const EXTI_EMR_EM5: u32 = EXTI_EMR_MR5;
pub const EXTI_EMR_EM6: u32 = EXTI_EMR_MR6;
pub const EXTI_EMR_EM7: u32 = EXTI_EMR_MR7;
pub const EXTI_EMR_EM8: u32 = EXTI_EMR_MR8;
pub const EXTI_EMR_EM9: u32 = EXTI_EMR_MR9;
pub const EXTI_EMR_EM10: u32 = EXTI_EMR_MR10;
pub const EXTI_EMR_EM11: u32 = EXTI_EMR_MR11;
pub const EXTI_EMR_EM12: u32 = EXTI_EMR_MR12;
pub const EXTI_EMR_EM13: u32 = EXTI_EMR_MR13;
pub const EXTI_EMR_EM14: u32 = EXTI_EMR_MR14;
pub const EXTI_EMR_EM15: u32 = EXTI_EMR_MR15;
pub const EXTI_EMR_EM17: u32 = EXTI_EMR_MR17;
pub const EXTI_EMR_EM19: u32 = EXTI_EMR_MR19;
pub const EXTI_RTSR_TR0_POS: u32 = 0u32;
pub const EXTI_RTSR_TR0_MSK: u32 = 0x1u32 << EXTI_RTSR_TR0_POS;
pub const EXTI_RTSR_TR0: u32 = EXTI_RTSR_TR0_MSK;
pub const EXTI_RTSR_TR1_POS: u32 = 1u32;
pub const EXTI_RTSR_TR1_MSK: u32 = 0x1u32 << EXTI_RTSR_TR1_POS;
pub const EXTI_RTSR_TR1: u32 = EXTI_RTSR_TR1_MSK;
pub const EXTI_RTSR_TR2_POS: u32 = 2u32;
pub const EXTI_RTSR_TR2_MSK: u32 = 0x1u32 << EXTI_RTSR_TR2_POS;
pub const EXTI_RTSR_TR2: u32 = EXTI_RTSR_TR2_MSK;
pub const EXTI_RTSR_TR3_POS: u32 = 3u32;
pub const EXTI_RTSR_TR3_MSK: u32 = 0x1u32 << EXTI_RTSR_TR3_POS;
pub const EXTI_RTSR_TR3: u32 = EXTI_RTSR_TR3_MSK;
pub const EXTI_RTSR_TR4_POS: u32 = 4u32;
pub const EXTI_RTSR_TR4_MSK: u32 = 0x1u32 << EXTI_RTSR_TR4_POS;
pub const EXTI_RTSR_TR4: u32 = EXTI_RTSR_TR4_MSK;
pub const EXTI_RTSR_TR5_POS: u32 = 5u32;
pub const EXTI_RTSR_TR5_MSK: u32 = 0x1u32 << EXTI_RTSR_TR5_POS;
pub const EXTI_RTSR_TR5: u32 = EXTI_RTSR_TR5_MSK;
pub const EXTI_RTSR_TR6_POS: u32 = 6u32;
pub const EXTI_RTSR_TR6_MSK: u32 = 0x1u32 << EXTI_RTSR_TR6_POS;
pub const EXTI_RTSR_TR6: u32 = EXTI_RTSR_TR6_MSK;
pub const EXTI_RTSR_TR7_POS: u32 = 7u32;
pub const EXTI_RTSR_TR7_MSK: u32 = 0x1u32 << EXTI_RTSR_TR7_POS;
pub const EXTI_RTSR_TR7: u32 = EXTI_RTSR_TR7_MSK;
pub const EXTI_RTSR_TR8_POS: u32 = 8u32;
pub const EXTI_RTSR_TR8_MSK: u32 = 0x1u32 << EXTI_RTSR_TR8_POS;
pub const EXTI_RTSR_TR8: u32 = EXTI_RTSR_TR8_MSK;
pub const EXTI_RTSR_TR9_POS: u32 = 9u32;
pub const EXTI_RTSR_TR9_MSK: u32 = 0x1u32 << EXTI_RTSR_TR9_POS;
pub const EXTI_RTSR_TR9: u32 = EXTI_RTSR_TR9_MSK;
pub const EXTI_RTSR_TR10_POS: u32 = 10u32;
pub const EXTI_RTSR_TR10_MSK: u32 = 0x1u32 << EXTI_RTSR_TR10_POS;
pub const EXTI_RTSR_TR10: u32 = EXTI_RTSR_TR10_MSK;
pub const EXTI_RTSR_TR11_POS: u32 = 11u32;
pub const EXTI_RTSR_TR11_MSK: u32 = 0x1u32 << EXTI_RTSR_TR11_POS;
pub const EXTI_RTSR_TR11: u32 = EXTI_RTSR_TR11_MSK;
pub const EXTI_RTSR_TR12_POS: u32 = 12u32;
pub const EXTI_RTSR_TR12_MSK: u32 = 0x1u32 << EXTI_RTSR_TR12_POS;
pub const EXTI_RTSR_TR12: u32 = EXTI_RTSR_TR12_MSK;
pub const EXTI_RTSR_TR13_POS: u32 = 13u32;
pub const EXTI_RTSR_TR13_MSK: u32 = 0x1u32 << EXTI_RTSR_TR13_POS;
pub const EXTI_RTSR_TR13: u32 = EXTI_RTSR_TR13_MSK;
pub const EXTI_RTSR_TR14_POS: u32 = 14u32;
pub const EXTI_RTSR_TR14_MSK: u32 = 0x1u32 << EXTI_RTSR_TR14_POS;
pub const EXTI_RTSR_TR14: u32 = EXTI_RTSR_TR14_MSK;
pub const EXTI_RTSR_TR15_POS: u32 = 15u32;
pub const EXTI_RTSR_TR15_MSK: u32 = 0x1u32 << EXTI_RTSR_TR15_POS;
pub const EXTI_RTSR_TR15: u32 = EXTI_RTSR_TR15_MSK;
pub const EXTI_RTSR_TR16_POS: u32 = 16u32;
pub const EXTI_RTSR_TR16_MSK: u32 = 0x1u32 << EXTI_RTSR_TR16_POS;
pub const EXTI_RTSR_TR16: u32 = EXTI_RTSR_TR16_MSK;
pub const EXTI_RTSR_TR17_POS: u32 = 17u32;
pub const EXTI_RTSR_TR17_MSK: u32 = 0x1u32 << EXTI_RTSR_TR17_POS;
pub const EXTI_RTSR_TR17: u32 = EXTI_RTSR_TR17_MSK;
pub const EXTI_RTSR_TR19_POS: u32 = 19u32;
pub const EXTI_RTSR_TR19_MSK: u32 = 0x1u32 << EXTI_RTSR_TR19_POS;
pub const EXTI_RTSR_TR19: u32 = EXTI_RTSR_TR19_MSK;
pub const EXTI_RTSR_RT0: u32 = EXTI_RTSR_TR0;
pub const EXTI_RTSR_RT1: u32 = EXTI_RTSR_TR1;
pub const EXTI_RTSR_RT2: u32 = EXTI_RTSR_TR2;
pub const EXTI_RTSR_RT3: u32 = EXTI_RTSR_TR3;
pub const EXTI_RTSR_RT4: u32 = EXTI_RTSR_TR4;
pub const EXTI_RTSR_RT5: u32 = EXTI_RTSR_TR5;
pub const EXTI_RTSR_RT6: u32 = EXTI_RTSR_TR6;
pub const EXTI_RTSR_RT7: u32 = EXTI_RTSR_TR7;
pub const EXTI_RTSR_RT8: u32 = EXTI_RTSR_TR8;
pub const EXTI_RTSR_RT9: u32 = EXTI_RTSR_TR9;
pub const EXTI_RTSR_RT10: u32 = EXTI_RTSR_TR10;
pub const EXTI_RTSR_RT11: u32 = EXTI_RTSR_TR11;
pub const EXTI_RTSR_RT12: u32 = EXTI_RTSR_TR12;
pub const EXTI_RTSR_RT13: u32 = EXTI_RTSR_TR13;
pub const EXTI_RTSR_RT14: u32 = EXTI_RTSR_TR14;
pub const EXTI_RTSR_RT15: u32 = EXTI_RTSR_TR15;
pub const EXTI_RTSR_RT16: u32 = EXTI_RTSR_TR16;
pub const EXTI_RTSR_RT17: u32 = EXTI_RTSR_TR17;
pub const EXTI_RTSR_RT19: u32 = EXTI_RTSR_TR19;
pub const EXTI_FTSR_TR0_POS: u32 = 0u32;
pub const EXTI_FTSR_TR0_MSK: u32 = 0x1u32 << EXTI_FTSR_TR0_POS;
pub const EXTI_FTSR_TR0: u32 = EXTI_FTSR_TR0_MSK;
pub const EXTI_FTSR_TR1_POS: u32 = 1u32;
pub const EXTI_FTSR_TR1_MSK: u32 = 0x1u32 << EXTI_FTSR_TR1_POS;
pub const EXTI_FTSR_TR1: u32 = EXTI_FTSR_TR1_MSK;
pub const EXTI_FTSR_TR2_POS: u32 = 2u32;
pub const EXTI_FTSR_TR2_MSK: u32 = 0x1u32 << EXTI_FTSR_TR2_POS;
pub const EXTI_FTSR_TR2: u32 = EXTI_FTSR_TR2_MSK;
pub const EXTI_FTSR_TR3_POS: u32 = 3u32;
pub const EXTI_FTSR_TR3_MSK: u32 = 0x1u32 << EXTI_FTSR_TR3_POS;
pub const EXTI_FTSR_TR3: u32 = EXTI_FTSR_TR3_MSK;
pub const EXTI_FTSR_TR4_POS: u32 = 4u32;
pub const EXTI_FTSR_TR4_MSK: u32 = 0x1u32 << EXTI_FTSR_TR4_POS;
pub const EXTI_FTSR_TR4: u32 = EXTI_FTSR_TR4_MSK;
pub const EXTI_FTSR_TR5_POS: u32 = 5u32;
pub const EXTI_FTSR_TR5_MSK: u32 = 0x1u32 << EXTI_FTSR_TR5_POS;
pub const EXTI_FTSR_TR5: u32 = EXTI_FTSR_TR5_MSK;
pub const EXTI_FTSR_TR6_POS: u32 = 6u32;
pub const EXTI_FTSR_TR6_MSK: u32 = 0x1u32 << EXTI_FTSR_TR6_POS;
pub const EXTI_FTSR_TR6: u32 = EXTI_FTSR_TR6_MSK;
pub const EXTI_FTSR_TR7_POS: u32 = 7u32;
pub const EXTI_FTSR_TR7_MSK: u32 = 0x1u32 << EXTI_FTSR_TR7_POS;
pub const EXTI_FTSR_TR7: u32 = EXTI_FTSR_TR7_MSK;
pub const EXTI_FTSR_TR8_POS: u32 = 8u32;
pub const EXTI_FTSR_TR8_MSK: u32 = 0x1u32 << EXTI_FTSR_TR8_POS;
pub const EXTI_FTSR_TR8: u32 = EXTI_FTSR_TR8_MSK;
pub const EXTI_FTSR_TR9_POS: u32 = 9u32;
pub const EXTI_FTSR_TR9_MSK: u32 = 0x1u32 << EXTI_FTSR_TR9_POS;
pub const EXTI_FTSR_TR9: u32 = EXTI_FTSR_TR9_MSK;
pub const EXTI_FTSR_TR10_POS: u32 = 10u32;
pub const EXTI_FTSR_TR10_MSK: u32 = 0x1u32 << EXTI_FTSR_TR10_POS;
pub const EXTI_FTSR_TR10: u32 = EXTI_FTSR_TR10_MSK;
pub const EXTI_FTSR_TR11_POS: u32 = 11u32;
pub const EXTI_FTSR_TR11_MSK: u32 = 0x1u32 << EXTI_FTSR_TR11_POS;
pub const EXTI_FTSR_TR11: u32 = EXTI_FTSR_TR11_MSK;
pub const EXTI_FTSR_TR12_POS: u32 = 12u32;
pub const EXTI_FTSR_TR12_MSK: u32 = 0x1u32 << EXTI_FTSR_TR12_POS;
pub const EXTI_FTSR_TR12: u32 = EXTI_FTSR_TR12_MSK;
pub const EXTI_FTSR_TR13_POS: u32 = 13u32;
pub const EXTI_FTSR_TR13_MSK: u32 = 0x1u32 << EXTI_FTSR_TR13_POS;
pub const EXTI_FTSR_TR13: u32 = EXTI_FTSR_TR13_MSK;
pub const EXTI_FTSR_TR14_POS: u32 = 14u32;
pub const EXTI_FTSR_TR14_MSK: u32 = 0x1u32 << EXTI_FTSR_TR14_POS;
pub const EXTI_FTSR_TR14: u32 = EXTI_FTSR_TR14_MSK;
pub const EXTI_FTSR_TR15_POS: u32 = 15u32;
pub const EXTI_FTSR_TR15_MSK: u32 = 0x1u32 << EXTI_FTSR_TR15_POS;
pub const EXTI_FTSR_TR15: u32 = EXTI_FTSR_TR15_MSK;
pub const EXTI_FTSR_TR16_POS: u32 = 16u32;
pub const EXTI_FTSR_TR16_MSK: u32 = 0x1u32 << EXTI_FTSR_TR16_POS;
pub const EXTI_FTSR_TR16: u32 = EXTI_FTSR_TR16_MSK;
pub const EXTI_FTSR_TR17_POS: u32 = 17u32;
pub const EXTI_FTSR_TR17_MSK: u32 = 0x1u32 << EXTI_FTSR_TR17_POS;
pub const EXTI_FTSR_TR17: u32 = EXTI_FTSR_TR17_MSK;
pub const EXTI_FTSR_TR19_POS: u32 = 19u32;
pub const EXTI_FTSR_TR19_MSK: u32 = 0x1u32 << EXTI_FTSR_TR19_POS;
pub const EXTI_FTSR_TR19: u32 = EXTI_FTSR_TR19_MSK;
pub const EXTI_FTSR_FT0: u32 = EXTI_FTSR_TR0;
pub const EXTI_FTSR_FT1: u32 = EXTI_FTSR_TR1;
pub const EXTI_FTSR_FT2: u32 = EXTI_FTSR_TR2;
pub const EXTI_FTSR_FT3: u32 = EXTI_FTSR_TR3;
pub const EXTI_FTSR_FT4: u32 = EXTI_FTSR_TR4;
pub const EXTI_FTSR_FT5: u32 = EXTI_FTSR_TR5;
pub const EXTI_FTSR_FT6: u32 = EXTI_FTSR_TR6;
pub const EXTI_FTSR_FT7: u32 = EXTI_FTSR_TR7;
pub const EXTI_FTSR_FT8: u32 = EXTI_FTSR_TR8;
pub const EXTI_FTSR_FT9: u32 = EXTI_FTSR_TR9;
pub const EXTI_FTSR_FT10: u32 = EXTI_FTSR_TR10;
pub const EXTI_FTSR_FT11: u32 = EXTI_FTSR_TR11;
pub const EXTI_FTSR_FT12: u32 = EXTI_FTSR_TR12;
pub const EXTI_FTSR_FT13: u32 = EXTI_FTSR_TR13;
pub const EXTI_FTSR_FT14: u32 = EXTI_FTSR_TR14;
pub const EXTI_FTSR_FT15: u32 = EXTI_FTSR_TR15;
pub const EXTI_FTSR_FT16: u32 = EXTI_FTSR_TR16;
pub const EXTI_FTSR_FT17: u32 = EXTI_FTSR_TR17;
pub const EXTI_FTSR_FT19: u32 = EXTI_FTSR_TR19;
pub const EXTI_SWIER_SWIER0_POS: u32 = 0u32;
pub const EXTI_SWIER_SWIER0_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER0_POS;
pub const EXTI_SWIER_SWIER0: u32 = EXTI_SWIER_SWIER0_MSK;
pub const EXTI_SWIER_SWIER1_POS: u32 = 1u32;
pub const EXTI_SWIER_SWIER1_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER1_POS;
pub const EXTI_SWIER_SWIER1: u32 = EXTI_SWIER_SWIER1_MSK;
pub const EXTI_SWIER_SWIER2_POS: u32 = 2u32;
pub const EXTI_SWIER_SWIER2_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER2_POS;
pub const EXTI_SWIER_SWIER2: u32 = EXTI_SWIER_SWIER2_MSK;
pub const EXTI_SWIER_SWIER3_POS: u32 = 3u32;
pub const EXTI_SWIER_SWIER3_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER3_POS;
pub const EXTI_SWIER_SWIER3: u32 = EXTI_SWIER_SWIER3_MSK;
pub const EXTI_SWIER_SWIER4_POS: u32 = 4u32;
pub const EXTI_SWIER_SWIER4_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER4_POS;
pub const EXTI_SWIER_SWIER4: u32 = EXTI_SWIER_SWIER4_MSK;
pub const EXTI_SWIER_SWIER5_POS: u32 = 5u32;
pub const EXTI_SWIER_SWIER5_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER5_POS;
pub const EXTI_SWIER_SWIER5: u32 = EXTI_SWIER_SWIER5_MSK;
pub const EXTI_SWIER_SWIER6_POS: u32 = 6u32;
pub const EXTI_SWIER_SWIER6_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER6_POS;
pub const EXTI_SWIER_SWIER6: u32 = EXTI_SWIER_SWIER6_MSK;
pub const EXTI_SWIER_SWIER7_POS: u32 = 7u32;
pub const EXTI_SWIER_SWIER7_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER7_POS;
pub const EXTI_SWIER_SWIER7: u32 = EXTI_SWIER_SWIER7_MSK;
pub const EXTI_SWIER_SWIER8_POS: u32 = 8u32;
pub const EXTI_SWIER_SWIER8_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER8_POS;
pub const EXTI_SWIER_SWIER8: u32 = EXTI_SWIER_SWIER8_MSK;
pub const EXTI_SWIER_SWIER9_POS: u32 = 9u32;
pub const EXTI_SWIER_SWIER9_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER9_POS;
pub const EXTI_SWIER_SWIER9: u32 = EXTI_SWIER_SWIER9_MSK;
pub const EXTI_SWIER_SWIER10_POS: u32 = 10u32;
pub const EXTI_SWIER_SWIER10_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER10_POS;
pub const EXTI_SWIER_SWIER10: u32 = EXTI_SWIER_SWIER10_MSK;
pub const EXTI_SWIER_SWIER11_POS: u32 = 11u32;
pub const EXTI_SWIER_SWIER11_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER11_POS;
pub const EXTI_SWIER_SWIER11: u32 = EXTI_SWIER_SWIER11_MSK;
pub const EXTI_SWIER_SWIER12_POS: u32 = 12u32;
pub const EXTI_SWIER_SWIER12_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER12_POS;
pub const EXTI_SWIER_SWIER12: u32 = EXTI_SWIER_SWIER12_MSK;
pub const EXTI_SWIER_SWIER13_POS: u32 = 13u32;
pub const EXTI_SWIER_SWIER13_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER13_POS;
pub const EXTI_SWIER_SWIER13: u32 = EXTI_SWIER_SWIER13_MSK;
pub const EXTI_SWIER_SWIER14_POS: u32 = 14u32;
pub const EXTI_SWIER_SWIER14_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER14_POS;
pub const EXTI_SWIER_SWIER14: u32 = EXTI_SWIER_SWIER14_MSK;
pub const EXTI_SWIER_SWIER15_POS: u32 = 15u32;
pub const EXTI_SWIER_SWIER15_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER15_POS;
pub const EXTI_SWIER_SWIER15: u32 = EXTI_SWIER_SWIER15_MSK;
pub const EXTI_SWIER_SWIER16_POS: u32 = 16u32;
pub const EXTI_SWIER_SWIER16_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER16_POS;
pub const EXTI_SWIER_SWIER16: u32 = EXTI_SWIER_SWIER16_MSK;
pub const EXTI_SWIER_SWIER17_POS: u32 = 17u32;
pub const EXTI_SWIER_SWIER17_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER17_POS;
pub const EXTI_SWIER_SWIER17: u32 = EXTI_SWIER_SWIER17_MSK;
pub const EXTI_SWIER_SWIER19_POS: u32 = 19u32;
pub const EXTI_SWIER_SWIER19_MSK: u32 = 0x1u32 << EXTI_SWIER_SWIER19_POS;
pub const EXTI_SWIER_SWIER19: u32 = EXTI_SWIER_SWIER19_MSK;
pub const EXTI_SWIER_SWI0: u32 = EXTI_SWIER_SWIER0;
pub const EXTI_SWIER_SWI1: u32 = EXTI_SWIER_SWIER1;
pub const EXTI_SWIER_SWI2: u32 = EXTI_SWIER_SWIER2;
pub const EXTI_SWIER_SWI3: u32 = EXTI_SWIER_SWIER3;
pub const EXTI_SWIER_SWI4: u32 = EXTI_SWIER_SWIER4;
pub const EXTI_SWIER_SWI5: u32 = EXTI_SWIER_SWIER5;
pub const EXTI_SWIER_SWI6: u32 = EXTI_SWIER_SWIER6;
pub const EXTI_SWIER_SWI7: u32 = EXTI_SWIER_SWIER7;
pub const EXTI_SWIER_SWI8: u32 = EXTI_SWIER_SWIER8;
pub const EXTI_SWIER_SWI9: u32 = EXTI_SWIER_SWIER9;
pub const EXTI_SWIER_SWI10: u32 = EXTI_SWIER_SWIER10;
pub const EXTI_SWIER_SWI11: u32 = EXTI_SWIER_SWIER11;
pub const EXTI_SWIER_SWI12: u32 = EXTI_SWIER_SWIER12;
pub const EXTI_SWIER_SWI13: u32 = EXTI_SWIER_SWIER13;
pub const EXTI_SWIER_SWI14: u32 = EXTI_SWIER_SWIER14;
pub const EXTI_SWIER_SWI15: u32 = EXTI_SWIER_SWIER15;
pub const EXTI_SWIER_SWI16: u32 = EXTI_SWIER_SWIER16;
pub const EXTI_SWIER_SWI17: u32 = EXTI_SWIER_SWIER17;
pub const EXTI_SWIER_SWI19: u32 = EXTI_SWIER_SWIER19;
pub const EXTI_PR_PR0_POS: u32 = 0u32;
pub const EXTI_PR_PR0_MSK: u32 = 0x1u32 << EXTI_PR_PR0_POS;
pub const EXTI_PR_PR0: u32 = EXTI_PR_PR0_MSK;
pub const EXTI_PR_PR1_POS: u32 = 1u32;
pub const EXTI_PR_PR1_MSK: u32 = 0x1u32 << EXTI_PR_PR1_POS;
pub const EXTI_PR_PR1: u32 = EXTI_PR_PR1_MSK;
pub const EXTI_PR_PR2_POS: u32 = 2u32;
pub const EXTI_PR_PR2_MSK: u32 = 0x1u32 << EXTI_PR_PR2_POS;
pub const EXTI_PR_PR2: u32 = EXTI_PR_PR2_MSK;
pub const EXTI_PR_PR3_POS: u32 = 3u32;
pub const EXTI_PR_PR3_MSK: u32 = 0x1u32 << EXTI_PR_PR3_POS;
pub const EXTI_PR_PR3: u32 = EXTI_PR_PR3_MSK;
pub const EXTI_PR_PR4_POS: u32 = 4u32;
pub const EXTI_PR_PR4_MSK: u32 = 0x1u32 << EXTI_PR_PR4_POS;
pub const EXTI_PR_PR4: u32 = EXTI_PR_PR4_MSK;
pub const EXTI_PR_PR5_POS: u32 = 5u32;
pub const EXTI_PR_PR5_MSK: u32 = 0x1u32 << EXTI_PR_PR5_POS;
pub const EXTI_PR_PR5: u32 = EXTI_PR_PR5_MSK;
pub const EXTI_PR_PR6_POS: u32 = 6u32;
pub const EXTI_PR_PR6_MSK: u32 = 0x1u32 << EXTI_PR_PR6_POS;
pub const EXTI_PR_PR6: u32 = EXTI_PR_PR6_MSK;
pub const EXTI_PR_PR7_POS: u32 = 7u32;
pub const EXTI_PR_PR7_MSK: u32 = 0x1u32 << EXTI_PR_PR7_POS;
pub const EXTI_PR_PR7: u32 = EXTI_PR_PR7_MSK;
pub const EXTI_PR_PR8_POS: u32 = 8u32;
pub const EXTI_PR_PR8_MSK: u32 = 0x1u32 << EXTI_PR_PR8_POS;
pub const EXTI_PR_PR8: u32 = EXTI_PR_PR8_MSK;
pub const EXTI_PR_PR9_POS: u32 = 9u32;
pub const EXTI_PR_PR9_MSK: u32 = 0x1u32 << EXTI_PR_PR9_POS;
pub const EXTI_PR_PR9: u32 = EXTI_PR_PR9_MSK;
pub const EXTI_PR_PR10_POS: u32 = 10u32;
pub const EXTI_PR_PR10_MSK: u32 = 0x1u32 << EXTI_PR_PR10_POS;
pub const EXTI_PR_PR10: u32 = EXTI_PR_PR10_MSK;
pub const EXTI_PR_PR11_POS: u32 = 11u32;
pub const EXTI_PR_PR11_MSK: u32 = 0x1u32 << EXTI_PR_PR11_POS;
pub const EXTI_PR_PR11: u32 = EXTI_PR_PR11_MSK;
pub const EXTI_PR_PR12_POS: u32 = 12u32;
pub const EXTI_PR_PR12_MSK: u32 = 0x1u32 << EXTI_PR_PR12_POS;
pub const EXTI_PR_PR12: u32 = EXTI_PR_PR12_MSK;
pub const EXTI_PR_PR13_POS: u32 = 13u32;
pub const EXTI_PR_PR13_MSK: u32 = 0x1u32 << EXTI_PR_PR13_POS;
pub const EXTI_PR_PR13: u32 = EXTI_PR_PR13_MSK;
pub const EXTI_PR_PR14_POS: u32 = 14u32;
pub const EXTI_PR_PR14_MSK: u32 = 0x1u32 << EXTI_PR_PR14_POS;
pub const EXTI_PR_PR14: u32 = EXTI_PR_PR14_MSK;
pub const EXTI_PR_PR15_POS: u32 = 15u32;
pub const EXTI_PR_PR15_MSK: u32 = 0x1u32 << EXTI_PR_PR15_POS;
pub const EXTI_PR_PR15: u32 = EXTI_PR_PR15_MSK;
pub const EXTI_PR_PR16_POS: u32 = 16u32;
pub const EXTI_PR_PR16_MSK: u32 = 0x1u32 << EXTI_PR_PR16_POS;
pub const EXTI_PR_PR16: u32 = EXTI_PR_PR16_MSK;
pub const EXTI_PR_PR17_POS: u32 = 17u32;
pub const EXTI_PR_PR17_MSK: u32 = 0x1u32 << EXTI_PR_PR17_POS;
pub const EXTI_PR_PR17: u32 = EXTI_PR_PR17_MSK;
pub const EXTI_PR_PR19_POS: u32 = 19u32;
pub const EXTI_PR_PR19_MSK: u32 = 0x1u32 << EXTI_PR_PR19_POS;
pub const EXTI_PR_PR19: u32 = EXTI_PR_PR19_MSK;
pub const EXTI_PR_PIF0: u32 = EXTI_PR_PR0;
pub const EXTI_PR_PIF1: u32 = EXTI_PR_PR1;
pub const EXTI_PR_PIF2: u32 = EXTI_PR_PR2;
pub const EXTI_PR_PIF3: u32 = EXTI_PR_PR3;
pub const EXTI_PR_PIF4: u32 = EXTI_PR_PR4;
pub const EXTI_PR_PIF5: u32 = EXTI_PR_PR5;
pub const EXTI_PR_PIF6: u32 = EXTI_PR_PR6;
pub const EXTI_PR_PIF7: u32 = EXTI_PR_PR7;
pub const EXTI_PR_PIF8: u32 = EXTI_PR_PR8;
pub const EXTI_PR_PIF9: u32 = EXTI_PR_PR9;
pub const EXTI_PR_PIF10: u32 = EXTI_PR_PR10;
pub const EXTI_PR_PIF11: u32 = EXTI_PR_PR11;
pub const EXTI_PR_PIF12: u32 = EXTI_PR_PR12;
pub const EXTI_PR_PIF13: u32 = EXTI_PR_PR13;
pub const EXTI_PR_PIF14: u32 = EXTI_PR_PR14;
pub const EXTI_PR_PIF15: u32 = EXTI_PR_PR15;
pub const EXTI_PR_PIF16: u32 = EXTI_PR_PR16;
pub const EXTI_PR_PIF17: u32 = EXTI_PR_PR17;
pub const EXTI_PR_PIF19: u32 = EXTI_PR_PR19;
pub const FLASH_ACR_LATENCY_POS: u32 = 0u32;
pub const FLASH_ACR_LATENCY_MSK: u32 = 0x1u32 << FLASH_ACR_LATENCY_POS;
pub const FLASH_ACR_LATENCY: u32 = FLASH_ACR_LATENCY_MSK;
pub const FLASH_ACR_PRFTBE_POS: u32 = 4u32;
pub const FLASH_ACR_PRFTBE_MSK: u32 = 0x1u32 << FLASH_ACR_PRFTBE_POS;
pub const FLASH_ACR_PRFTBE: u32 = FLASH_ACR_PRFTBE_MSK;
pub const FLASH_ACR_PRFTBS_POS: u32 = 5u32;
pub const FLASH_ACR_PRFTBS_MSK: u32 = 0x1u32 << FLASH_ACR_PRFTBS_POS;
pub const FLASH_ACR_PRFTBS: u32 = FLASH_ACR_PRFTBS_MSK;
pub const FLASH_KEYR_FKEYR_POS: u32 = 0u32;
pub const FLASH_KEYR_FKEYR_MSK: u32 = 0xFFFFFFFFu32 << FLASH_KEYR_FKEYR_POS;
pub const FLASH_KEYR_FKEYR: u32 = FLASH_KEYR_FKEYR_MSK;
pub const FLASH_OPTKEYR_OPTKEYR_POS: u32 = 0u32;
pub const FLASH_OPTKEYR_OPTKEYR_MSK: u32 = 0xFFFFFFFFu32 << FLASH_OPTKEYR_OPTKEYR_POS;
pub const FLASH_OPTKEYR_OPTKEYR: u32 = FLASH_OPTKEYR_OPTKEYR_MSK;
pub const FLASH_KEY1_POS: u32 = 0u32;
pub const FLASH_KEY1_MSK: u32 = 0x45670123u32 << FLASH_KEY1_POS;
pub const FLASH_KEY1: u32 = FLASH_KEY1_MSK;
pub const FLASH_KEY2_POS: u32 = 0u32;
pub const FLASH_KEY2_MSK: u32 = 0xCDEF89ABu32 << FLASH_KEY2_POS;
pub const FLASH_KEY2: u32 = FLASH_KEY2_MSK;
pub const FLASH_OPTKEY1_POS: u32 = 0u32;
pub const FLASH_OPTKEY1_MSK: u32 = 0x45670123u32 << FLASH_OPTKEY1_POS;
pub const FLASH_OPTKEY1: u32 = FLASH_OPTKEY1_MSK;
pub const FLASH_OPTKEY2_POS: u32 = 0u32;
pub const FLASH_OPTKEY2_MSK: u32 = 0xCDEF89ABu32 << FLASH_OPTKEY2_POS;
pub const FLASH_OPTKEY2: u32 = FLASH_OPTKEY2_MSK;
pub const FLASH_SR_BSY_POS: u32 = 0u32;
pub const FLASH_SR_BSY_MSK: u32 = 0x1u32 << FLASH_SR_BSY_POS;
pub const FLASH_SR_BSY: u32 = FLASH_SR_BSY_MSK;
pub const FLASH_SR_PGERR_POS: u32 = 2u32;
pub const FLASH_SR_PGERR_MSK: u32 = 0x1u32 << FLASH_SR_PGERR_POS;
pub const FLASH_SR_PGERR: u32 = FLASH_SR_PGERR_MSK;
pub const FLASH_SR_WRPRTERR_POS: u32 = 4u32;
pub const FLASH_SR_WRPRTERR_MSK: u32 = 0x1u32 << FLASH_SR_WRPRTERR_POS;
pub const FLASH_SR_WRPRTERR: u32 = FLASH_SR_WRPRTERR_MSK;
pub const FLASH_SR_EOP_POS: u32 = 5u32;
pub const FLASH_SR_EOP_MSK: u32 = 0x1u32 << FLASH_SR_EOP_POS;
pub const FLASH_SR_EOP: u32 = FLASH_SR_EOP_MSK;
pub const FLASH_SR_WRPERR: u32 = FLASH_SR_WRPRTERR;
pub const FLASH_CR_PG_POS: u32 = 0u32;
pub const FLASH_CR_PG_MSK: u32 = 0x1u32 << FLASH_CR_PG_POS;
pub const FLASH_CR_PG: u32 = FLASH_CR_PG_MSK;
pub const FLASH_CR_PER_POS: u32 = 1u32;
pub const FLASH_CR_PER_MSK: u32 = 0x1u32 << FLASH_CR_PER_POS;
pub const FLASH_CR_PER: u32 = FLASH_CR_PER_MSK;
pub const FLASH_CR_MER_POS: u32 = 2u32;
pub const FLASH_CR_MER_MSK: u32 = 0x1u32 << FLASH_CR_MER_POS;
pub const FLASH_CR_MER: u32 = FLASH_CR_MER_MSK;
pub const FLASH_CR_OPTPG_POS: u32 = 4u32;
pub const FLASH_CR_OPTPG_MSK: u32 = 0x1u32 << FLASH_CR_OPTPG_POS;
pub const FLASH_CR_OPTPG: u32 = FLASH_CR_OPTPG_MSK;
pub const FLASH_CR_OPTER_POS: u32 = 5u32;
pub const FLASH_CR_OPTER_MSK: u32 = 0x1u32 << FLASH_CR_OPTER_POS;
pub const FLASH_CR_OPTER: u32 = FLASH_CR_OPTER_MSK;
pub const FLASH_CR_STRT_POS: u32 = 6u32;
pub const FLASH_CR_STRT_MSK: u32 = 0x1u32 << FLASH_CR_STRT_POS;
pub const FLASH_CR_STRT: u32 = FLASH_CR_STRT_MSK;
pub const FLASH_CR_LOCK_POS: u32 = 7u32;
pub const FLASH_CR_LOCK_MSK: u32 = 0x1u32 << FLASH_CR_LOCK_POS;
pub const FLASH_CR_LOCK: u32 = FLASH_CR_LOCK_MSK;
pub const FLASH_CR_OPTWRE_POS: u32 = 9u32;
pub const FLASH_CR_OPTWRE_MSK: u32 = 0x1u32 << FLASH_CR_OPTWRE_POS;
pub const FLASH_CR_OPTWRE: u32 = FLASH_CR_OPTWRE_MSK;
pub const FLASH_CR_ERRIE_POS: u32 = 10u32;
pub const FLASH_CR_ERRIE_MSK: u32 = 0x1u32 << FLASH_CR_ERRIE_POS;
pub const FLASH_CR_ERRIE: u32 = FLASH_CR_ERRIE_MSK;
pub const FLASH_CR_EOPIE_POS: u32 = 12u32;
pub const FLASH_CR_EOPIE_MSK: u32 = 0x1u32 << FLASH_CR_EOPIE_POS;
pub const FLASH_CR_EOPIE: u32 = FLASH_CR_EOPIE_MSK;
pub const FLASH_CR_OBL_LAUNCH_POS: u32 = 13u32;
pub const FLASH_CR_OBL_LAUNCH_MSK: u32 = 0x1u32 << FLASH_CR_OBL_LAUNCH_POS;
pub const FLASH_CR_OBL_LAUNCH: u32 = FLASH_CR_OBL_LAUNCH_MSK;
pub const FLASH_AR_FAR_POS: u32 = 0u32;
pub const FLASH_AR_FAR_MSK: u32 = 0xFFFFFFFFu32 << FLASH_AR_FAR_POS;
pub const FLASH_AR_FAR: u32 = FLASH_AR_FAR_MSK;
pub const FLASH_OBR_OPTERR_POS: u32 = 0u32;
pub const FLASH_OBR_OPTERR_MSK: u32 = 0x1u32 << FLASH_OBR_OPTERR_POS;
pub const FLASH_OBR_OPTERR: u32 = FLASH_OBR_OPTERR_MSK;
pub const FLASH_OBR_RDPRT1_POS: u32 = 1u32;
pub const FLASH_OBR_RDPRT1_MSK: u32 = 0x1u32 << FLASH_OBR_RDPRT1_POS;
pub const FLASH_OBR_RDPRT1: u32 = FLASH_OBR_RDPRT1_MSK;
pub const FLASH_OBR_RDPRT2_POS: u32 = 2u32;
pub const FLASH_OBR_RDPRT2_MSK: u32 = 0x1u32 << FLASH_OBR_RDPRT2_POS;
pub const FLASH_OBR_RDPRT2: u32 = FLASH_OBR_RDPRT2_MSK;
pub const FLASH_OBR_USER_POS: u32 = 8u32;
pub const FLASH_OBR_USER_MSK: u32 = 0x77u32 << FLASH_OBR_USER_POS;
pub const FLASH_OBR_USER: u32 = FLASH_OBR_USER_MSK;
pub const FLASH_OBR_IWDG_SW_POS: u32 = 8u32;
pub const FLASH_OBR_IWDG_SW_MSK: u32 = 0x1u32 << FLASH_OBR_IWDG_SW_POS;
pub const FLASH_OBR_IWDG_SW: u32 = FLASH_OBR_IWDG_SW_MSK;
pub const FLASH_OBR_NRST_STOP_POS: u32 = 9u32;
pub const FLASH_OBR_NRST_STOP_MSK: u32 = 0x1u32 << FLASH_OBR_NRST_STOP_POS;
pub const FLASH_OBR_NRST_STOP: u32 = FLASH_OBR_NRST_STOP_MSK;
pub const FLASH_OBR_NRST_STDBY_POS: u32 = 10u32;
pub const FLASH_OBR_NRST_STDBY_MSK: u32 = 0x1u32 << FLASH_OBR_NRST_STDBY_POS;
pub const FLASH_OBR_NRST_STDBY: u32 = FLASH_OBR_NRST_STDBY_MSK;
pub const FLASH_OBR_NBOOT1_POS: u32 = 12u32;
pub const FLASH_OBR_NBOOT1_MSK: u32 = 0x1u32 << FLASH_OBR_NBOOT1_POS;
pub const FLASH_OBR_NBOOT1: u32 = FLASH_OBR_NBOOT1_MSK;
pub const FLASH_OBR_VDDA_MONITOR_POS: u32 = 13u32;
pub const FLASH_OBR_VDDA_MONITOR_MSK: u32 = 0x1u32 << FLASH_OBR_VDDA_MONITOR_POS;
pub const FLASH_OBR_VDDA_MONITOR: u32 = FLASH_OBR_VDDA_MONITOR_MSK;
pub const FLASH_OBR_RAM_PARITY_CHECK_POS: u32 = 14u32;
pub const FLASH_OBR_RAM_PARITY_CHECK_MSK: u32 = 0x1u32 << FLASH_OBR_RAM_PARITY_CHECK_POS;
pub const FLASH_OBR_RAM_PARITY_CHECK: u32 = FLASH_OBR_RAM_PARITY_CHECK_MSK;
pub const FLASH_OBR_DATA0_POS: u32 = 16u32;
pub const FLASH_OBR_DATA0_MSK: u32 = 0xFFu32 << FLASH_OBR_DATA0_POS;
pub const FLASH_OBR_DATA0: u32 = FLASH_OBR_DATA0_MSK;
pub const FLASH_OBR_DATA1_POS: u32 = 24u32;
pub const FLASH_OBR_DATA1_MSK: u32 = 0xFFu32 << FLASH_OBR_DATA1_POS;
pub const FLASH_OBR_DATA1: u32 = FLASH_OBR_DATA1_MSK;
pub const FLASH_OBR_BOOT1: u32 = FLASH_OBR_NBOOT1;
pub const FLASH_OBR_VDDA_ANALOG: u32 = FLASH_OBR_VDDA_MONITOR;
pub const FLASH_WRPR_WRP_POS: u32 = 0u32;
pub const FLASH_WRPR_WRP_MSK: u32 = 0xFFFFu32 << FLASH_WRPR_WRP_POS;
pub const FLASH_WRPR_WRP: u32 = FLASH_WRPR_WRP_MSK;
pub const OB_RDP_RDP_POS: u32 = 0u32;
pub const OB_RDP_RDP_MSK: u32 = 0xFFu32 << OB_RDP_RDP_POS;
pub const OB_RDP_RDP: u32 = OB_RDP_RDP_MSK;
pub const OB_RDP_NRDP_POS: u32 = 8u32;
pub const OB_RDP_NRDP_MSK: u32 = 0xFFu32 << OB_RDP_NRDP_POS;
pub const OB_RDP_NRDP: u32 = OB_RDP_NRDP_MSK;
pub const OB_USER_USER_POS: u32 = 16u32;
pub const OB_USER_USER_MSK: u32 = 0xFFu32 << OB_USER_USER_POS;
pub const OB_USER_USER: u32 = OB_USER_USER_MSK;
pub const OB_USER_NUSER_POS: u32 = 24u32;
pub const OB_USER_NUSER_MSK: u32 = 0xFFu32 << OB_USER_NUSER_POS;
pub const OB_USER_NUSER: u32 = OB_USER_NUSER_MSK;
pub const OB_WRP0_WRP0_POS: u32 = 0u32;
pub const OB_WRP0_WRP0_MSK: u32 = 0xFFu32 << OB_WRP0_WRP0_POS;
pub const OB_WRP0_WRP0: u32 = OB_WRP0_WRP0_MSK;
pub const OB_WRP0_NWRP0_POS: u32 = 8u32;
pub const OB_WRP0_NWRP0_MSK: u32 = 0xFFu32 << OB_WRP0_NWRP0_POS;
pub const OB_WRP0_NWRP0: u32 = OB_WRP0_NWRP0_MSK;
pub const GPIO_MODER_MODER0_POS: u32 = 0u32;
pub const GPIO_MODER_MODER0_MSK: u32 = 0x3u32 << GPIO_MODER_MODER0_POS;
pub const GPIO_MODER_MODER0: u32 = GPIO_MODER_MODER0_MSK;
pub const GPIO_MODER_MODER0_0: u32 = 0x1u32 << GPIO_MODER_MODER0_POS;
pub const GPIO_MODER_MODER0_1: u32 = 0x2u32 << GPIO_MODER_MODER0_POS;
pub const GPIO_MODER_MODER1_POS: u32 = 2u32;
pub const GPIO_MODER_MODER1_MSK: u32 = 0x3u32 << GPIO_MODER_MODER1_POS;
pub const GPIO_MODER_MODER1: u32 = GPIO_MODER_MODER1_MSK;
pub const GPIO_MODER_MODER1_0: u32 = 0x1u32 << GPIO_MODER_MODER1_POS;
pub const GPIO_MODER_MODER1_1: u32 = 0x2u32 << GPIO_MODER_MODER1_POS;
pub const GPIO_MODER_MODER2_POS: u32 = 4u32;
pub const GPIO_MODER_MODER2_MSK: u32 = 0x3u32 << GPIO_MODER_MODER2_POS;
pub const GPIO_MODER_MODER2: u32 = GPIO_MODER_MODER2_MSK;
pub const GPIO_MODER_MODER2_0: u32 = 0x1u32 << GPIO_MODER_MODER2_POS;
pub const GPIO_MODER_MODER2_1: u32 = 0x2u32 << GPIO_MODER_MODER2_POS;
pub const GPIO_MODER_MODER3_POS: u32 = 6u32;
pub const GPIO_MODER_MODER3_MSK: u32 = 0x3u32 << GPIO_MODER_MODER3_POS;
pub const GPIO_MODER_MODER3: u32 = GPIO_MODER_MODER3_MSK;
pub const GPIO_MODER_MODER3_0: u32 = 0x1u32 << GPIO_MODER_MODER3_POS;
pub const GPIO_MODER_MODER3_1: u32 = 0x2u32 << GPIO_MODER_MODER3_POS;
pub const GPIO_MODER_MODER4_POS: u32 = 8u32;
pub const GPIO_MODER_MODER4_MSK: u32 = 0x3u32 << GPIO_MODER_MODER4_POS;
pub const GPIO_MODER_MODER4: u32 = GPIO_MODER_MODER4_MSK;
pub const GPIO_MODER_MODER4_0: u32 = 0x1u32 << GPIO_MODER_MODER4_POS;
pub const GPIO_MODER_MODER4_1: u32 = 0x2u32 << GPIO_MODER_MODER4_POS;
pub const GPIO_MODER_MODER5_POS: u32 = 10u32;
pub const GPIO_MODER_MODER5_MSK: u32 = 0x3u32 << GPIO_MODER_MODER5_POS;
pub const GPIO_MODER_MODER5: u32 = GPIO_MODER_MODER5_MSK;
pub const GPIO_MODER_MODER5_0: u32 = 0x1u32 << GPIO_MODER_MODER5_POS;
pub const GPIO_MODER_MODER5_1: u32 = 0x2u32 << GPIO_MODER_MODER5_POS;
pub const GPIO_MODER_MODER6_POS: u32 = 12u32;
pub const GPIO_MODER_MODER6_MSK: u32 = 0x3u32 << GPIO_MODER_MODER6_POS;
pub const GPIO_MODER_MODER6: u32 = GPIO_MODER_MODER6_MSK;
pub const GPIO_MODER_MODER6_0: u32 = 0x1u32 << GPIO_MODER_MODER6_POS;
pub const GPIO_MODER_MODER6_1: u32 = 0x2u32 << GPIO_MODER_MODER6_POS;
pub const GPIO_MODER_MODER7_POS: u32 = 14u32;
pub const GPIO_MODER_MODER7_MSK: u32 = 0x3u32 << GPIO_MODER_MODER7_POS;
pub const GPIO_MODER_MODER7: u32 = GPIO_MODER_MODER7_MSK;
pub const GPIO_MODER_MODER7_0: u32 = 0x1u32 << GPIO_MODER_MODER7_POS;
pub const GPIO_MODER_MODER7_1: u32 = 0x2u32 << GPIO_MODER_MODER7_POS;
pub const GPIO_MODER_MODER8_POS: u32 = 16u32;
pub const GPIO_MODER_MODER8_MSK: u32 = 0x3u32 << GPIO_MODER_MODER8_POS;
pub const GPIO_MODER_MODER8: u32 = GPIO_MODER_MODER8_MSK;
pub const GPIO_MODER_MODER8_0: u32 = 0x1u32 << GPIO_MODER_MODER8_POS;
pub const GPIO_MODER_MODER8_1: u32 = 0x2u32 << GPIO_MODER_MODER8_POS;
pub const GPIO_MODER_MODER9_POS: u32 = 18u32;
pub const GPIO_MODER_MODER9_MSK: u32 = 0x3u32 << GPIO_MODER_MODER9_POS;
pub const GPIO_MODER_MODER9: u32 = GPIO_MODER_MODER9_MSK;
pub const GPIO_MODER_MODER9_0: u32 = 0x1u32 << GPIO_MODER_MODER9_POS;
pub const GPIO_MODER_MODER9_1: u32 = 0x2u32 << GPIO_MODER_MODER9_POS;
pub const GPIO_MODER_MODER10_POS: u32 = 20u32;
pub const GPIO_MODER_MODER10_MSK: u32 = 0x3u32 << GPIO_MODER_MODER10_POS;
pub const GPIO_MODER_MODER10: u32 = GPIO_MODER_MODER10_MSK;
pub const GPIO_MODER_MODER10_0: u32 = 0x1u32 << GPIO_MODER_MODER10_POS;
pub const GPIO_MODER_MODER10_1: u32 = 0x2u32 << GPIO_MODER_MODER10_POS;
pub const GPIO_MODER_MODER11_POS: u32 = 22u32;
pub const GPIO_MODER_MODER11_MSK: u32 = 0x3u32 << GPIO_MODER_MODER11_POS;
pub const GPIO_MODER_MODER11: u32 = GPIO_MODER_MODER11_MSK;
pub const GPIO_MODER_MODER11_0: u32 = 0x1u32 << GPIO_MODER_MODER11_POS;
pub const GPIO_MODER_MODER11_1: u32 = 0x2u32 << GPIO_MODER_MODER11_POS;
pub const GPIO_MODER_MODER12_POS: u32 = 24u32;
pub const GPIO_MODER_MODER12_MSK: u32 = 0x3u32 << GPIO_MODER_MODER12_POS;
pub const GPIO_MODER_MODER12: u32 = GPIO_MODER_MODER12_MSK;
pub const GPIO_MODER_MODER12_0: u32 = 0x1u32 << GPIO_MODER_MODER12_POS;
pub const GPIO_MODER_MODER12_1: u32 = 0x2u32 << GPIO_MODER_MODER12_POS;
pub const GPIO_MODER_MODER13_POS: u32 = 26u32;
pub const GPIO_MODER_MODER13_MSK: u32 = 0x3u32 << GPIO_MODER_MODER13_POS;
pub const GPIO_MODER_MODER13: u32 = GPIO_MODER_MODER13_MSK;
pub const GPIO_MODER_MODER13_0: u32 = 0x1u32 << GPIO_MODER_MODER13_POS;
pub const GPIO_MODER_MODER13_1: u32 = 0x2u32 << GPIO_MODER_MODER13_POS;
pub const GPIO_MODER_MODER14_POS: u32 = 28u32;
pub const GPIO_MODER_MODER14_MSK: u32 = 0x3u32 << GPIO_MODER_MODER14_POS;
pub const GPIO_MODER_MODER14: u32 = GPIO_MODER_MODER14_MSK;
pub const GPIO_MODER_MODER14_0: u32 = 0x1u32 << GPIO_MODER_MODER14_POS;
pub const GPIO_MODER_MODER14_1: u32 = 0x2u32 << GPIO_MODER_MODER14_POS;
pub const GPIO_MODER_MODER15_POS: u32 = 30u32;
pub const GPIO_MODER_MODER15_MSK: u32 = 0x3u32 << GPIO_MODER_MODER15_POS;
pub const GPIO_MODER_MODER15: u32 = GPIO_MODER_MODER15_MSK;
pub const GPIO_MODER_MODER15_0: u32 = 0x1u32 << GPIO_MODER_MODER15_POS;
pub const GPIO_MODER_MODER15_1: u32 = 0x2u32 << GPIO_MODER_MODER15_POS;
pub const GPIO_OTYPER_OT_0: u32 = 0x00000001u32;
pub const GPIO_OTYPER_OT_1: u32 = 0x00000002u32;
pub const GPIO_OTYPER_OT_2: u32 = 0x00000004u32;
pub const GPIO_OTYPER_OT_3: u32 = 0x00000008u32;
pub const GPIO_OTYPER_OT_4: u32 = 0x00000010u32;
pub const GPIO_OTYPER_OT_5: u32 = 0x00000020u32;
pub const GPIO_OTYPER_OT_6: u32 = 0x00000040u32;
pub const GPIO_OTYPER_OT_7: u32 = 0x00000080u32;
pub const GPIO_OTYPER_OT_8: u32 = 0x00000100u32;
pub const GPIO_OTYPER_OT_9: u32 = 0x00000200u32;
pub const GPIO_OTYPER_OT_10: u32 = 0x00000400u32;
pub const GPIO_OTYPER_OT_11: u32 = 0x00000800u32;
pub const GPIO_OTYPER_OT_12: u32 = 0x00001000u32;
pub const GPIO_OTYPER_OT_13: u32 = 0x00002000u32;
pub const GPIO_OTYPER_OT_14: u32 = 0x00004000u32;
pub const GPIO_OTYPER_OT_15: u32 = 0x00008000u32;
pub const GPIO_OSPEEDR_OSPEEDR0_POS: u32 = 0u32;
pub const GPIO_OSPEEDR_OSPEEDR0_MSK: u32 = 0x3u32 << GPIO_OSPEEDR_OSPEEDR0_POS;
pub const GPIO_OSPEEDR_OSPEEDR0: u32 = GPIO_OSPEEDR_OSPEEDR0_MSK;
pub const GPIO_OSPEEDR_OSPEEDR0_0: u32 = 0x1u32 << GPIO_OSPEEDR_OSPEEDR0_POS;
pub const GPIO_OSPEEDR_OSPEEDR0_1: u32 = 0x2u32 << GPIO_OSPEEDR_OSPEEDR0_POS;
pub const GPIO_OSPEEDR_OSPEEDR1_POS: u32 = 2u32;
pub const GPIO_OSPEEDR_OSPEEDR1_MSK: u32 = 0x3u32 << GPIO_OSPEEDR_OSPEEDR1_POS;
pub const GPIO_OSPEEDR_OSPEEDR1: u32 = GPIO_OSPEEDR_OSPEEDR1_MSK;
pub const GPIO_OSPEEDR_OSPEEDR1_0: u32 = 0x1u32 << GPIO_OSPEEDR_OSPEEDR1_POS;
pub const GPIO_OSPEEDR_OSPEEDR1_1: u32 = 0x2u32 << GPIO_OSPEEDR_OSPEEDR1_POS;
pub const GPIO_OSPEEDR_OSPEEDR2_POS: u32 = 4u32;
pub const GPIO_OSPEEDR_OSPEEDR2_MSK: u32 = 0x3u32 << GPIO_OSPEEDR_OSPEEDR2_POS;
pub const GPIO_OSPEEDR_OSPEEDR2: u32 = GPIO_OSPEEDR_OSPEEDR2_MSK;
pub const GPIO_OSPEEDR_OSPEEDR2_0: u32 = 0x1u32 << GPIO_OSPEEDR_OSPEEDR2_POS;
pub const GPIO_OSPEEDR_OSPEEDR2_1: u32 = 0x2u32 << GPIO_OSPEEDR_OSPEEDR2_POS;
pub const GPIO_OSPEEDR_OSPEEDR3_POS: u32 = 6u32;
pub const GPIO_OSPEEDR_OSPEEDR3_MSK: u32 = 0x3u32 << GPIO_OSPEEDR_OSPEEDR3_POS;
pub const GPIO_OSPEEDR_OSPEEDR3: u32 = GPIO_OSPEEDR_OSPEEDR3_MSK;
pub const GPIO_OSPEEDR_OSPEEDR3_0: u32 = 0x1u32 << GPIO_OSPEEDR_OSPEEDR3_POS;
pub const GPIO_OSPEEDR_OSPEEDR3_1: u32 = 0x2u32 << GPIO_OSPEEDR_OSPEEDR3_POS;
pub const GPIO_OSPEEDR_OSPEEDR4_POS: u32 = 8u32;
pub const GPIO_OSPEEDR_OSPEEDR4_MSK: u32 = 0x3u32 << GPIO_OSPEEDR_OSPEEDR4_POS;
pub const GPIO_OSPEEDR_OSPEEDR4: u32 = GPIO_OSPEEDR_OSPEEDR4_MSK;
pub const GPIO_OSPEEDR_OSPEEDR4_0: u32 = 0x1u32 << GPIO_OSPEEDR_OSPEEDR4_POS;
pub const GPIO_OSPEEDR_OSPEEDR4_1: u32 = 0x2u32 << GPIO_OSPEEDR_OSPEEDR4_POS;
pub const GPIO_OSPEEDR_OSPEEDR5_POS: u32 = 10u32;
pub const GPIO_OSPEEDR_OSPEEDR5_MSK: u32 = 0x3u32 << GPIO_OSPEEDR_OSPEEDR5_POS;
pub const GPIO_OSPEEDR_OSPEEDR5: u32 = GPIO_OSPEEDR_OSPEEDR5_MSK;
pub const GPIO_OSPEEDR_OSPEEDR5_0: u32 = 0x1u32 << GPIO_OSPEEDR_OSPEEDR5_POS;
pub const GPIO_OSPEEDR_OSPEEDR5_1: u32 = 0x2u32 << GPIO_OSPEEDR_OSPEEDR5_POS;
pub const GPIO_OSPEEDR_OSPEEDR6_POS: u32 = 12u32;
pub const GPIO_OSPEEDR_OSPEEDR6_MSK: u32 = 0x3u32 << GPIO_OSPEEDR_OSPEEDR6_POS;
pub const GPIO_OSPEEDR_OSPEEDR6: u32 = GPIO_OSPEEDR_OSPEEDR6_MSK;
pub const GPIO_OSPEEDR_OSPEEDR6_0: u32 = 0x1u32 << GPIO_OSPEEDR_OSPEEDR6_POS;
pub const GPIO_OSPEEDR_OSPEEDR6_1: u32 = 0x2u32 << GPIO_OSPEEDR_OSPEEDR6_POS;
pub const GPIO_OSPEEDR_OSPEEDR7_POS: u32 = 14u32;
pub const GPIO_OSPEEDR_OSPEEDR7_MSK: u32 = 0x3u32 << GPIO_OSPEEDR_OSPEEDR7_POS;
pub const GPIO_OSPEEDR_OSPEEDR7: u32 = GPIO_OSPEEDR_OSPEEDR7_MSK;
pub const GPIO_OSPEEDR_OSPEEDR7_0: u32 = 0x1u32 << GPIO_OSPEEDR_OSPEEDR7_POS;
pub const GPIO_OSPEEDR_OSPEEDR7_1: u32 = 0x2u32 << GPIO_OSPEEDR_OSPEEDR7_POS;
pub const GPIO_OSPEEDR_OSPEEDR8_POS: u32 = 16u32;
pub const GPIO_OSPEEDR_OSPEEDR8_MSK: u32 = 0x3u32 << GPIO_OSPEEDR_OSPEEDR8_POS;
pub const GPIO_OSPEEDR_OSPEEDR8: u32 = GPIO_OSPEEDR_OSPEEDR8_MSK;
pub const GPIO_OSPEEDR_OSPEEDR8_0: u32 = 0x1u32 << GPIO_OSPEEDR_OSPEEDR8_POS;
pub const GPIO_OSPEEDR_OSPEEDR8_1: u32 = 0x2u32 << GPIO_OSPEEDR_OSPEEDR8_POS;
pub const GPIO_OSPEEDR_OSPEEDR9_POS: u32 = 18u32;
pub const GPIO_OSPEEDR_OSPEEDR9_MSK: u32 = 0x3u32 << GPIO_OSPEEDR_OSPEEDR9_POS;
pub const GPIO_OSPEEDR_OSPEEDR9: u32 = GPIO_OSPEEDR_OSPEEDR9_MSK;
pub const GPIO_OSPEEDR_OSPEEDR9_0: u32 = 0x1u32 << GPIO_OSPEEDR_OSPEEDR9_POS;
pub const GPIO_OSPEEDR_OSPEEDR9_1: u32 = 0x2u32 << GPIO_OSPEEDR_OSPEEDR9_POS;
pub const GPIO_OSPEEDR_OSPEEDR10_POS: u32 = 20u32;
pub const GPIO_OSPEEDR_OSPEEDR10_MSK: u32 = 0x3u32 << GPIO_OSPEEDR_OSPEEDR10_POS;
pub const GPIO_OSPEEDR_OSPEEDR10: u32 = GPIO_OSPEEDR_OSPEEDR10_MSK;
pub const GPIO_OSPEEDR_OSPEEDR10_0: u32 = 0x1u32 << GPIO_OSPEEDR_OSPEEDR10_POS;
pub const GPIO_OSPEEDR_OSPEEDR10_1: u32 = 0x2u32 << GPIO_OSPEEDR_OSPEEDR10_POS;
pub const GPIO_OSPEEDR_OSPEEDR11_POS: u32 = 22u32;
pub const GPIO_OSPEEDR_OSPEEDR11_MSK: u32 = 0x3u32 << GPIO_OSPEEDR_OSPEEDR11_POS;
pub const GPIO_OSPEEDR_OSPEEDR11: u32 = GPIO_OSPEEDR_OSPEEDR11_MSK;
pub const GPIO_OSPEEDR_OSPEEDR11_0: u32 = 0x1u32 << GPIO_OSPEEDR_OSPEEDR11_POS;
pub const GPIO_OSPEEDR_OSPEEDR11_1: u32 = 0x2u32 << GPIO_OSPEEDR_OSPEEDR11_POS;
pub const GPIO_OSPEEDR_OSPEEDR12_POS: u32 = 24u32;
pub const GPIO_OSPEEDR_OSPEEDR12_MSK: u32 = 0x3u32 << GPIO_OSPEEDR_OSPEEDR12_POS;
pub const GPIO_OSPEEDR_OSPEEDR12: u32 = GPIO_OSPEEDR_OSPEEDR12_MSK;
pub const GPIO_OSPEEDR_OSPEEDR12_0: u32 = 0x1u32 << GPIO_OSPEEDR_OSPEEDR12_POS;
pub const GPIO_OSPEEDR_OSPEEDR12_1: u32 = 0x2u32 << GPIO_OSPEEDR_OSPEEDR12_POS;
pub const GPIO_OSPEEDR_OSPEEDR13_POS: u32 = 26u32;
pub const GPIO_OSPEEDR_OSPEEDR13_MSK: u32 = 0x3u32 << GPIO_OSPEEDR_OSPEEDR13_POS;
pub const GPIO_OSPEEDR_OSPEEDR13: u32 = GPIO_OSPEEDR_OSPEEDR13_MSK;
pub const GPIO_OSPEEDR_OSPEEDR13_0: u32 = 0x1u32 << GPIO_OSPEEDR_OSPEEDR13_POS;
pub const GPIO_OSPEEDR_OSPEEDR13_1: u32 = 0x2u32 << GPIO_OSPEEDR_OSPEEDR13_POS;
pub const GPIO_OSPEEDR_OSPEEDR14_POS: u32 = 28u32;
pub const GPIO_OSPEEDR_OSPEEDR14_MSK: u32 = 0x3u32 << GPIO_OSPEEDR_OSPEEDR14_POS;
pub const GPIO_OSPEEDR_OSPEEDR14: u32 = GPIO_OSPEEDR_OSPEEDR14_MSK;
pub const GPIO_OSPEEDR_OSPEEDR14_0: u32 = 0x1u32 << GPIO_OSPEEDR_OSPEEDR14_POS;
pub const GPIO_OSPEEDR_OSPEEDR14_1: u32 = 0x2u32 << GPIO_OSPEEDR_OSPEEDR14_POS;
pub const GPIO_OSPEEDR_OSPEEDR15_POS: u32 = 30u32;
pub const GPIO_OSPEEDR_OSPEEDR15_MSK: u32 = 0x3u32 << GPIO_OSPEEDR_OSPEEDR15_POS;
pub const GPIO_OSPEEDR_OSPEEDR15: u32 = GPIO_OSPEEDR_OSPEEDR15_MSK;
pub const GPIO_OSPEEDR_OSPEEDR15_0: u32 = 0x1u32 << GPIO_OSPEEDR_OSPEEDR15_POS;
pub const GPIO_OSPEEDR_OSPEEDR15_1: u32 = 0x2u32 << GPIO_OSPEEDR_OSPEEDR15_POS;
pub const GPIO_OSPEEDER_OSPEEDR0: u32 = GPIO_OSPEEDR_OSPEEDR0;
pub const GPIO_OSPEEDER_OSPEEDR0_0: u32 = GPIO_OSPEEDR_OSPEEDR0_0;
pub const GPIO_OSPEEDER_OSPEEDR0_1: u32 = GPIO_OSPEEDR_OSPEEDR0_1;
pub const GPIO_OSPEEDER_OSPEEDR1: u32 = GPIO_OSPEEDR_OSPEEDR1;
pub const GPIO_OSPEEDER_OSPEEDR1_0: u32 = GPIO_OSPEEDR_OSPEEDR1_0;
pub const GPIO_OSPEEDER_OSPEEDR1_1: u32 = GPIO_OSPEEDR_OSPEEDR1_1;
pub const GPIO_OSPEEDER_OSPEEDR2: u32 = GPIO_OSPEEDR_OSPEEDR2;
pub const GPIO_OSPEEDER_OSPEEDR2_0: u32 = GPIO_OSPEEDR_OSPEEDR2_0;
pub const GPIO_OSPEEDER_OSPEEDR2_1: u32 = GPIO_OSPEEDR_OSPEEDR2_1;
pub const GPIO_OSPEEDER_OSPEEDR3: u32 = GPIO_OSPEEDR_OSPEEDR3;
pub const GPIO_OSPEEDER_OSPEEDR3_0: u32 = GPIO_OSPEEDR_OSPEEDR3_0;
pub const GPIO_OSPEEDER_OSPEEDR3_1: u32 = GPIO_OSPEEDR_OSPEEDR3_1;
pub const GPIO_OSPEEDER_OSPEEDR4: u32 = GPIO_OSPEEDR_OSPEEDR4;
pub const GPIO_OSPEEDER_OSPEEDR4_0: u32 = GPIO_OSPEEDR_OSPEEDR4_0;
pub const GPIO_OSPEEDER_OSPEEDR4_1: u32 = GPIO_OSPEEDR_OSPEEDR4_1;
pub const GPIO_OSPEEDER_OSPEEDR5: u32 = GPIO_OSPEEDR_OSPEEDR5;
pub const GPIO_OSPEEDER_OSPEEDR5_0: u32 = GPIO_OSPEEDR_OSPEEDR5_0;
pub const GPIO_OSPEEDER_OSPEEDR5_1: u32 = GPIO_OSPEEDR_OSPEEDR5_1;
pub const GPIO_OSPEEDER_OSPEEDR6: u32 = GPIO_OSPEEDR_OSPEEDR6;
pub const GPIO_OSPEEDER_OSPEEDR6_0: u32 = GPIO_OSPEEDR_OSPEEDR6_0;
pub const GPIO_OSPEEDER_OSPEEDR6_1: u32 = GPIO_OSPEEDR_OSPEEDR6_1;
pub const GPIO_OSPEEDER_OSPEEDR7: u32 = GPIO_OSPEEDR_OSPEEDR7;
pub const GPIO_OSPEEDER_OSPEEDR7_0: u32 = GPIO_OSPEEDR_OSPEEDR7_0;
pub const GPIO_OSPEEDER_OSPEEDR7_1: u32 = GPIO_OSPEEDR_OSPEEDR7_1;
pub const GPIO_OSPEEDER_OSPEEDR8: u32 = GPIO_OSPEEDR_OSPEEDR8;
pub const GPIO_OSPEEDER_OSPEEDR8_0: u32 = GPIO_OSPEEDR_OSPEEDR8_0;
pub const GPIO_OSPEEDER_OSPEEDR8_1: u32 = GPIO_OSPEEDR_OSPEEDR8_1;
pub const GPIO_OSPEEDER_OSPEEDR9: u32 = GPIO_OSPEEDR_OSPEEDR9;
pub const GPIO_OSPEEDER_OSPEEDR9_0: u32 = GPIO_OSPEEDR_OSPEEDR9_0;
pub const GPIO_OSPEEDER_OSPEEDR9_1: u32 = GPIO_OSPEEDR_OSPEEDR9_1;
pub const GPIO_OSPEEDER_OSPEEDR10: u32 = GPIO_OSPEEDR_OSPEEDR10;
pub const GPIO_OSPEEDER_OSPEEDR10_0: u32 = GPIO_OSPEEDR_OSPEEDR10_0;
pub const GPIO_OSPEEDER_OSPEEDR10_1: u32 = GPIO_OSPEEDR_OSPEEDR10_1;
pub const GPIO_OSPEEDER_OSPEEDR11: u32 = GPIO_OSPEEDR_OSPEEDR11;
pub const GPIO_OSPEEDER_OSPEEDR11_0: u32 = GPIO_OSPEEDR_OSPEEDR11_0;
pub const GPIO_OSPEEDER_OSPEEDR11_1: u32 = GPIO_OSPEEDR_OSPEEDR11_1;
pub const GPIO_OSPEEDER_OSPEEDR12: u32 = GPIO_OSPEEDR_OSPEEDR12;
pub const GPIO_OSPEEDER_OSPEEDR12_0: u32 = GPIO_OSPEEDR_OSPEEDR12_0;
pub const GPIO_OSPEEDER_OSPEEDR12_1: u32 = GPIO_OSPEEDR_OSPEEDR12_1;
pub const GPIO_OSPEEDER_OSPEEDR13: u32 = GPIO_OSPEEDR_OSPEEDR13;
pub const GPIO_OSPEEDER_OSPEEDR13_0: u32 = GPIO_OSPEEDR_OSPEEDR13_0;
pub const GPIO_OSPEEDER_OSPEEDR13_1: u32 = GPIO_OSPEEDR_OSPEEDR13_1;
pub const GPIO_OSPEEDER_OSPEEDR14: u32 = GPIO_OSPEEDR_OSPEEDR14;
pub const GPIO_OSPEEDER_OSPEEDR14_0: u32 = GPIO_OSPEEDR_OSPEEDR14_0;
pub const GPIO_OSPEEDER_OSPEEDR14_1: u32 = GPIO_OSPEEDR_OSPEEDR14_1;
pub const GPIO_OSPEEDER_OSPEEDR15: u32 = GPIO_OSPEEDR_OSPEEDR15;
pub const GPIO_OSPEEDER_OSPEEDR15_0: u32 = GPIO_OSPEEDR_OSPEEDR15_0;
pub const GPIO_OSPEEDER_OSPEEDR15_1: u32 = GPIO_OSPEEDR_OSPEEDR15_1;
pub const GPIO_PUPDR_PUPDR0_POS: u32 = 0u32;
pub const GPIO_PUPDR_PUPDR0_MSK: u32 = 0x3u32 << GPIO_PUPDR_PUPDR0_POS;
pub const GPIO_PUPDR_PUPDR0: u32 = GPIO_PUPDR_PUPDR0_MSK;
pub const GPIO_PUPDR_PUPDR0_0: u32 = 0x1u32 << GPIO_PUPDR_PUPDR0_POS;
pub const GPIO_PUPDR_PUPDR0_1: u32 = 0x2u32 << GPIO_PUPDR_PUPDR0_POS;
pub const GPIO_PUPDR_PUPDR1_POS: u32 = 2u32;
pub const GPIO_PUPDR_PUPDR1_MSK: u32 = 0x3u32 << GPIO_PUPDR_PUPDR1_POS;
pub const GPIO_PUPDR_PUPDR1: u32 = GPIO_PUPDR_PUPDR1_MSK;
pub const GPIO_PUPDR_PUPDR1_0: u32 = 0x1u32 << GPIO_PUPDR_PUPDR1_POS;
pub const GPIO_PUPDR_PUPDR1_1: u32 = 0x2u32 << GPIO_PUPDR_PUPDR1_POS;
pub const GPIO_PUPDR_PUPDR2_POS: u32 = 4u32;
pub const GPIO_PUPDR_PUPDR2_MSK: u32 = 0x3u32 << GPIO_PUPDR_PUPDR2_POS;
pub const GPIO_PUPDR_PUPDR2: u32 = GPIO_PUPDR_PUPDR2_MSK;
pub const GPIO_PUPDR_PUPDR2_0: u32 = 0x1u32 << GPIO_PUPDR_PUPDR2_POS;
pub const GPIO_PUPDR_PUPDR2_1: u32 = 0x2u32 << GPIO_PUPDR_PUPDR2_POS;
pub const GPIO_PUPDR_PUPDR3_POS: u32 = 6u32;
pub const GPIO_PUPDR_PUPDR3_MSK: u32 = 0x3u32 << GPIO_PUPDR_PUPDR3_POS;
pub const GPIO_PUPDR_PUPDR3: u32 = GPIO_PUPDR_PUPDR3_MSK;
pub const GPIO_PUPDR_PUPDR3_0: u32 = 0x1u32 << GPIO_PUPDR_PUPDR3_POS;
pub const GPIO_PUPDR_PUPDR3_1: u32 = 0x2u32 << GPIO_PUPDR_PUPDR3_POS;
pub const GPIO_PUPDR_PUPDR4_POS: u32 = 8u32;
pub const GPIO_PUPDR_PUPDR4_MSK: u32 = 0x3u32 << GPIO_PUPDR_PUPDR4_POS;
pub const GPIO_PUPDR_PUPDR4: u32 = GPIO_PUPDR_PUPDR4_MSK;
pub const GPIO_PUPDR_PUPDR4_0: u32 = 0x1u32 << GPIO_PUPDR_PUPDR4_POS;
pub const GPIO_PUPDR_PUPDR4_1: u32 = 0x2u32 << GPIO_PUPDR_PUPDR4_POS;
pub const GPIO_PUPDR_PUPDR5_POS: u32 = 10u32;
pub const GPIO_PUPDR_PUPDR5_MSK: u32 = 0x3u32 << GPIO_PUPDR_PUPDR5_POS;
pub const GPIO_PUPDR_PUPDR5: u32 = GPIO_PUPDR_PUPDR5_MSK;
pub const GPIO_PUPDR_PUPDR5_0: u32 = 0x1u32 << GPIO_PUPDR_PUPDR5_POS;
pub const GPIO_PUPDR_PUPDR5_1: u32 = 0x2u32 << GPIO_PUPDR_PUPDR5_POS;
pub const GPIO_PUPDR_PUPDR6_POS: u32 = 12u32;
pub const GPIO_PUPDR_PUPDR6_MSK: u32 = 0x3u32 << GPIO_PUPDR_PUPDR6_POS;
pub const GPIO_PUPDR_PUPDR6: u32 = GPIO_PUPDR_PUPDR6_MSK;
pub const GPIO_PUPDR_PUPDR6_0: u32 = 0x1u32 << GPIO_PUPDR_PUPDR6_POS;
pub const GPIO_PUPDR_PUPDR6_1: u32 = 0x2u32 << GPIO_PUPDR_PUPDR6_POS;
pub const GPIO_PUPDR_PUPDR7_POS: u32 = 14u32;
pub const GPIO_PUPDR_PUPDR7_MSK: u32 = 0x3u32 << GPIO_PUPDR_PUPDR7_POS;
pub const GPIO_PUPDR_PUPDR7: u32 = GPIO_PUPDR_PUPDR7_MSK;
pub const GPIO_PUPDR_PUPDR7_0: u32 = 0x1u32 << GPIO_PUPDR_PUPDR7_POS;
pub const GPIO_PUPDR_PUPDR7_1: u32 = 0x2u32 << GPIO_PUPDR_PUPDR7_POS;
pub const GPIO_PUPDR_PUPDR8_POS: u32 = 16u32;
pub const GPIO_PUPDR_PUPDR8_MSK: u32 = 0x3u32 << GPIO_PUPDR_PUPDR8_POS;
pub const GPIO_PUPDR_PUPDR8: u32 = GPIO_PUPDR_PUPDR8_MSK;
pub const GPIO_PUPDR_PUPDR8_0: u32 = 0x1u32 << GPIO_PUPDR_PUPDR8_POS;
pub const GPIO_PUPDR_PUPDR8_1: u32 = 0x2u32 << GPIO_PUPDR_PUPDR8_POS;
pub const GPIO_PUPDR_PUPDR9_POS: u32 = 18u32;
pub const GPIO_PUPDR_PUPDR9_MSK: u32 = 0x3u32 << GPIO_PUPDR_PUPDR9_POS;
pub const GPIO_PUPDR_PUPDR9: u32 = GPIO_PUPDR_PUPDR9_MSK;
pub const GPIO_PUPDR_PUPDR9_0: u32 = 0x1u32 << GPIO_PUPDR_PUPDR9_POS;
pub const GPIO_PUPDR_PUPDR9_1: u32 = 0x2u32 << GPIO_PUPDR_PUPDR9_POS;
pub const GPIO_PUPDR_PUPDR10_POS: u32 = 20u32;
pub const GPIO_PUPDR_PUPDR10_MSK: u32 = 0x3u32 << GPIO_PUPDR_PUPDR10_POS;
pub const GPIO_PUPDR_PUPDR10: u32 = GPIO_PUPDR_PUPDR10_MSK;
pub const GPIO_PUPDR_PUPDR10_0: u32 = 0x1u32 << GPIO_PUPDR_PUPDR10_POS;
pub const GPIO_PUPDR_PUPDR10_1: u32 = 0x2u32 << GPIO_PUPDR_PUPDR10_POS;
pub const GPIO_PUPDR_PUPDR11_POS: u32 = 22u32;
pub const GPIO_PUPDR_PUPDR11_MSK: u32 = 0x3u32 << GPIO_PUPDR_PUPDR11_POS;
pub const GPIO_PUPDR_PUPDR11: u32 = GPIO_PUPDR_PUPDR11_MSK;
pub const GPIO_PUPDR_PUPDR11_0: u32 = 0x1u32 << GPIO_PUPDR_PUPDR11_POS;
pub const GPIO_PUPDR_PUPDR11_1: u32 = 0x2u32 << GPIO_PUPDR_PUPDR11_POS;
pub const GPIO_PUPDR_PUPDR12_POS: u32 = 24u32;
pub const GPIO_PUPDR_PUPDR12_MSK: u32 = 0x3u32 << GPIO_PUPDR_PUPDR12_POS;
pub const GPIO_PUPDR_PUPDR12: u32 = GPIO_PUPDR_PUPDR12_MSK;
pub const GPIO_PUPDR_PUPDR12_0: u32 = 0x1u32 << GPIO_PUPDR_PUPDR12_POS;
pub const GPIO_PUPDR_PUPDR12_1: u32 = 0x2u32 << GPIO_PUPDR_PUPDR12_POS;
pub const GPIO_PUPDR_PUPDR13_POS: u32 = 26u32;
pub const GPIO_PUPDR_PUPDR13_MSK: u32 = 0x3u32 << GPIO_PUPDR_PUPDR13_POS;
pub const GPIO_PUPDR_PUPDR13: u32 = GPIO_PUPDR_PUPDR13_MSK;
pub const GPIO_PUPDR_PUPDR13_0: u32 = 0x1u32 << GPIO_PUPDR_PUPDR13_POS;
pub const GPIO_PUPDR_PUPDR13_1: u32 = 0x2u32 << GPIO_PUPDR_PUPDR13_POS;
pub const GPIO_PUPDR_PUPDR14_POS: u32 = 28u32;
pub const GPIO_PUPDR_PUPDR14_MSK: u32 = 0x3u32 << GPIO_PUPDR_PUPDR14_POS;
pub const GPIO_PUPDR_PUPDR14: u32 = GPIO_PUPDR_PUPDR14_MSK;
pub const GPIO_PUPDR_PUPDR14_0: u32 = 0x1u32 << GPIO_PUPDR_PUPDR14_POS;
pub const GPIO_PUPDR_PUPDR14_1: u32 = 0x2u32 << GPIO_PUPDR_PUPDR14_POS;
pub const GPIO_PUPDR_PUPDR15_POS: u32 = 30u32;
pub const GPIO_PUPDR_PUPDR15_MSK: u32 = 0x3u32 << GPIO_PUPDR_PUPDR15_POS;
pub const GPIO_PUPDR_PUPDR15: u32 = GPIO_PUPDR_PUPDR15_MSK;
pub const GPIO_PUPDR_PUPDR15_0: u32 = 0x1u32 << GPIO_PUPDR_PUPDR15_POS;
pub const GPIO_PUPDR_PUPDR15_1: u32 = 0x2u32 << GPIO_PUPDR_PUPDR15_POS;
pub const GPIO_IDR_0: u32 = 0x00000001u32;
pub const GPIO_IDR_1: u32 = 0x00000002u32;
pub const GPIO_IDR_2: u32 = 0x00000004u32;
pub const GPIO_IDR_3: u32 = 0x00000008u32;
pub const GPIO_IDR_4: u32 = 0x00000010u32;
pub const GPIO_IDR_5: u32 = 0x00000020u32;
pub const GPIO_IDR_6: u32 = 0x00000040u32;
pub const GPIO_IDR_7: u32 = 0x00000080u32;
pub const GPIO_IDR_8: u32 = 0x00000100u32;
pub const GPIO_IDR_9: u32 = 0x00000200u32;
pub const GPIO_IDR_10: u32 = 0x00000400u32;
pub const GPIO_IDR_11: u32 = 0x00000800u32;
pub const GPIO_IDR_12: u32 = 0x00001000u32;
pub const GPIO_IDR_13: u32 = 0x00002000u32;
pub const GPIO_IDR_14: u32 = 0x00004000u32;
pub const GPIO_IDR_15: u32 = 0x00008000u32;
pub const GPIO_ODR_0: u32 = 0x00000001u32;
pub const GPIO_ODR_1: u32 = 0x00000002u32;
pub const GPIO_ODR_2: u32 = 0x00000004u32;
pub const GPIO_ODR_3: u32 = 0x00000008u32;
pub const GPIO_ODR_4: u32 = 0x00000010u32;
pub const GPIO_ODR_5: u32 = 0x00000020u32;
pub const GPIO_ODR_6: u32 = 0x00000040u32;
pub const GPIO_ODR_7: u32 = 0x00000080u32;
pub const GPIO_ODR_8: u32 = 0x00000100u32;
pub const GPIO_ODR_9: u32 = 0x00000200u32;
pub const GPIO_ODR_10: u32 = 0x00000400u32;
pub const GPIO_ODR_11: u32 = 0x00000800u32;
pub const GPIO_ODR_12: u32 = 0x00001000u32;
pub const GPIO_ODR_13: u32 = 0x00002000u32;
pub const GPIO_ODR_14: u32 = 0x00004000u32;
pub const GPIO_ODR_15: u32 = 0x00008000u32;
pub const GPIO_BSRR_BS_0: u32 = 0x00000001u32;
pub const GPIO_BSRR_BS_1: u32 = 0x00000002u32;
pub const GPIO_BSRR_BS_2: u32 = 0x00000004u32;
pub const GPIO_BSRR_BS_3: u32 = 0x00000008u32;
pub const GPIO_BSRR_BS_4: u32 = 0x00000010u32;
pub const GPIO_BSRR_BS_5: u32 = 0x00000020u32;
pub const GPIO_BSRR_BS_6: u32 = 0x00000040u32;
pub const GPIO_BSRR_BS_7: u32 = 0x00000080u32;
pub const GPIO_BSRR_BS_8: u32 = 0x00000100u32;
pub const GPIO_BSRR_BS_9: u32 = 0x00000200u32;
pub const GPIO_BSRR_BS_10: u32 = 0x00000400u32;
pub const GPIO_BSRR_BS_11: u32 = 0x00000800u32;
pub const GPIO_BSRR_BS_12: u32 = 0x00001000u32;
pub const GPIO_BSRR_BS_13: u32 = 0x00002000u32;
pub const GPIO_BSRR_BS_14: u32 = 0x00004000u32;
pub const GPIO_BSRR_BS_15: u32 = 0x00008000u32;
pub const GPIO_BSRR_BR_0: u32 = 0x00010000u32;
pub const GPIO_BSRR_BR_1: u32 = 0x00020000u32;
pub const GPIO_BSRR_BR_2: u32 = 0x00040000u32;
pub const GPIO_BSRR_BR_3: u32 = 0x00080000u32;
pub const GPIO_BSRR_BR_4: u32 = 0x00100000u32;
pub const GPIO_BSRR_BR_5: u32 = 0x00200000u32;
pub const GPIO_BSRR_BR_6: u32 = 0x00400000u32;
pub const GPIO_BSRR_BR_7: u32 = 0x00800000u32;
pub const GPIO_BSRR_BR_8: u32 = 0x01000000u32;
pub const GPIO_BSRR_BR_9: u32 = 0x02000000u32;
pub const GPIO_BSRR_BR_10: u32 = 0x04000000u32;
pub const GPIO_BSRR_BR_11: u32 = 0x08000000u32;
pub const GPIO_BSRR_BR_12: u32 = 0x10000000u32;
pub const GPIO_BSRR_BR_13: u32 = 0x20000000u32;
pub const GPIO_BSRR_BR_14: u32 = 0x40000000u32;
pub const GPIO_BSRR_BR_15: u32 = 0x80000000u32;
pub const GPIO_LCKR_LCK0_POS: u32 = 0u32;
pub const GPIO_LCKR_LCK0_MSK: u32 = 0x1u32 << GPIO_LCKR_LCK0_POS;
pub const GPIO_LCKR_LCK0: u32 = GPIO_LCKR_LCK0_MSK;
pub const GPIO_LCKR_LCK1_POS: u32 = 1u32;
pub const GPIO_LCKR_LCK1_MSK: u32 = 0x1u32 << GPIO_LCKR_LCK1_POS;
pub const GPIO_LCKR_LCK1: u32 = GPIO_LCKR_LCK1_MSK;
pub const GPIO_LCKR_LCK2_POS: u32 = 2u32;
pub const GPIO_LCKR_LCK2_MSK: u32 = 0x1u32 << GPIO_LCKR_LCK2_POS;
pub const GPIO_LCKR_LCK2: u32 = GPIO_LCKR_LCK2_MSK;
pub const GPIO_LCKR_LCK3_POS: u32 = 3u32;
pub const GPIO_LCKR_LCK3_MSK: u32 = 0x1u32 << GPIO_LCKR_LCK3_POS;
pub const GPIO_LCKR_LCK3: u32 = GPIO_LCKR_LCK3_MSK;
pub const GPIO_LCKR_LCK4_POS: u32 = 4u32;
pub const GPIO_LCKR_LCK4_MSK: u32 = 0x1u32 << GPIO_LCKR_LCK4_POS;
pub const GPIO_LCKR_LCK4: u32 = GPIO_LCKR_LCK4_MSK;
pub const GPIO_LCKR_LCK5_POS: u32 = 5u32;
pub const GPIO_LCKR_LCK5_MSK: u32 = 0x1u32 << GPIO_LCKR_LCK5_POS;
pub const GPIO_LCKR_LCK5: u32 = GPIO_LCKR_LCK5_MSK;
pub const GPIO_LCKR_LCK6_POS: u32 = 6u32;
pub const GPIO_LCKR_LCK6_MSK: u32 = 0x1u32 << GPIO_LCKR_LCK6_POS;
pub const GPIO_LCKR_LCK6: u32 = GPIO_LCKR_LCK6_MSK;
pub const GPIO_LCKR_LCK7_POS: u32 = 7u32;
pub const GPIO_LCKR_LCK7_MSK: u32 = 0x1u32 << GPIO_LCKR_LCK7_POS;
pub const GPIO_LCKR_LCK7: u32 = GPIO_LCKR_LCK7_MSK;
pub const GPIO_LCKR_LCK8_POS: u32 = 8u32;
pub const GPIO_LCKR_LCK8_MSK: u32 = 0x1u32 << GPIO_LCKR_LCK8_POS;
pub const GPIO_LCKR_LCK8: u32 = GPIO_LCKR_LCK8_MSK;
pub const GPIO_LCKR_LCK9_POS: u32 = 9u32;
pub const GPIO_LCKR_LCK9_MSK: u32 = 0x1u32 << GPIO_LCKR_LCK9_POS;
pub const GPIO_LCKR_LCK9: u32 = GPIO_LCKR_LCK9_MSK;
pub const GPIO_LCKR_LCK10_POS: u32 = 10u32;
pub const GPIO_LCKR_LCK10_MSK: u32 = 0x1u32 << GPIO_LCKR_LCK10_POS;
pub const GPIO_LCKR_LCK10: u32 = GPIO_LCKR_LCK10_MSK;
pub const GPIO_LCKR_LCK11_POS: u32 = 11u32;
pub const GPIO_LCKR_LCK11_MSK: u32 = 0x1u32 << GPIO_LCKR_LCK11_POS;
pub const GPIO_LCKR_LCK11: u32 = GPIO_LCKR_LCK11_MSK;
pub const GPIO_LCKR_LCK12_POS: u32 = 12u32;
pub const GPIO_LCKR_LCK12_MSK: u32 = 0x1u32 << GPIO_LCKR_LCK12_POS;
pub const GPIO_LCKR_LCK12: u32 = GPIO_LCKR_LCK12_MSK;
pub const GPIO_LCKR_LCK13_POS: u32 = 13u32;
pub const GPIO_LCKR_LCK13_MSK: u32 = 0x1u32 << GPIO_LCKR_LCK13_POS;
pub const GPIO_LCKR_LCK13: u32 = GPIO_LCKR_LCK13_MSK;
pub const GPIO_LCKR_LCK14_POS: u32 = 14u32;
pub const GPIO_LCKR_LCK14_MSK: u32 = 0x1u32 << GPIO_LCKR_LCK14_POS;
pub const GPIO_LCKR_LCK14: u32 = GPIO_LCKR_LCK14_MSK;
pub const GPIO_LCKR_LCK15_POS: u32 = 15u32;
pub const GPIO_LCKR_LCK15_MSK: u32 = 0x1u32 << GPIO_LCKR_LCK15_POS;
pub const GPIO_LCKR_LCK15: u32 = GPIO_LCKR_LCK15_MSK;
pub const GPIO_LCKR_LCKK_POS: u32 = 16u32;
pub const GPIO_LCKR_LCKK_MSK: u32 = 0x1u32 << GPIO_LCKR_LCKK_POS;
pub const GPIO_LCKR_LCKK: u32 = GPIO_LCKR_LCKK_MSK;
pub const GPIO_AFRL_AFSEL0_POS: u32 = 0u32;
pub const GPIO_AFRL_AFSEL0_MSK: u32 = 0xFu32 << GPIO_AFRL_AFSEL0_POS;
pub const GPIO_AFRL_AFSEL0: u32 = GPIO_AFRL_AFSEL0_MSK;
pub const GPIO_AFRL_AFSEL1_POS: u32 = 4u32;
pub const GPIO_AFRL_AFSEL1_MSK: u32 = 0xFu32 << GPIO_AFRL_AFSEL1_POS;
pub const GPIO_AFRL_AFSEL1: u32 = GPIO_AFRL_AFSEL1_MSK;
pub const GPIO_AFRL_AFSEL2_POS: u32 = 8u32;
pub const GPIO_AFRL_AFSEL2_MSK: u32 = 0xFu32 << GPIO_AFRL_AFSEL2_POS;
pub const GPIO_AFRL_AFSEL2: u32 = GPIO_AFRL_AFSEL2_MSK;
pub const GPIO_AFRL_AFSEL3_POS: u32 = 12u32;
pub const GPIO_AFRL_AFSEL3_MSK: u32 = 0xFu32 << GPIO_AFRL_AFSEL3_POS;
pub const GPIO_AFRL_AFSEL3: u32 = GPIO_AFRL_AFSEL3_MSK;
pub const GPIO_AFRL_AFSEL4_POS: u32 = 16u32;
pub const GPIO_AFRL_AFSEL4_MSK: u32 = 0xFu32 << GPIO_AFRL_AFSEL4_POS;
pub const GPIO_AFRL_AFSEL4: u32 = GPIO_AFRL_AFSEL4_MSK;
pub const GPIO_AFRL_AFSEL5_POS: u32 = 20u32;
pub const GPIO_AFRL_AFSEL5_MSK: u32 = 0xFu32 << GPIO_AFRL_AFSEL5_POS;
pub const GPIO_AFRL_AFSEL5: u32 = GPIO_AFRL_AFSEL5_MSK;
pub const GPIO_AFRL_AFSEL6_POS: u32 = 24u32;
pub const GPIO_AFRL_AFSEL6_MSK: u32 = 0xFu32 << GPIO_AFRL_AFSEL6_POS;
pub const GPIO_AFRL_AFSEL6: u32 = GPIO_AFRL_AFSEL6_MSK;
pub const GPIO_AFRL_AFSEL7_POS: u32 = 28u32;
pub const GPIO_AFRL_AFSEL7_MSK: u32 = 0xFu32 << GPIO_AFRL_AFSEL7_POS;
pub const GPIO_AFRL_AFSEL7: u32 = GPIO_AFRL_AFSEL7_MSK;
pub const GPIO_AFRL_AFRL0_POS: u32 = GPIO_AFRL_AFSEL0_POS;
pub const GPIO_AFRL_AFRL0_MSK: u32 = GPIO_AFRL_AFSEL0_MSK;
pub const GPIO_AFRL_AFRL0: u32 = GPIO_AFRL_AFSEL0;
pub const GPIO_AFRL_AFRL1_POS: u32 = GPIO_AFRL_AFSEL1_POS;
pub const GPIO_AFRL_AFRL1_MSK: u32 = GPIO_AFRL_AFSEL1_MSK;
pub const GPIO_AFRL_AFRL1: u32 = GPIO_AFRL_AFSEL1;
pub const GPIO_AFRL_AFRL2_POS: u32 = GPIO_AFRL_AFSEL2_POS;
pub const GPIO_AFRL_AFRL2_MSK: u32 = GPIO_AFRL_AFSEL2_MSK;
pub const GPIO_AFRL_AFRL2: u32 = GPIO_AFRL_AFSEL2;
pub const GPIO_AFRL_AFRL3_POS: u32 = GPIO_AFRL_AFSEL3_POS;
pub const GPIO_AFRL_AFRL3_MSK: u32 = GPIO_AFRL_AFSEL3_MSK;
pub const GPIO_AFRL_AFRL3: u32 = GPIO_AFRL_AFSEL3;
pub const GPIO_AFRL_AFRL4_POS: u32 = GPIO_AFRL_AFSEL4_POS;
pub const GPIO_AFRL_AFRL4_MSK: u32 = GPIO_AFRL_AFSEL4_MSK;
pub const GPIO_AFRL_AFRL4: u32 = GPIO_AFRL_AFSEL4;
pub const GPIO_AFRL_AFRL5_POS: u32 = GPIO_AFRL_AFSEL5_POS;
pub const GPIO_AFRL_AFRL5_MSK: u32 = GPIO_AFRL_AFSEL5_MSK;
pub const GPIO_AFRL_AFRL5: u32 = GPIO_AFRL_AFSEL5;
pub const GPIO_AFRL_AFRL6_POS: u32 = GPIO_AFRL_AFSEL6_POS;
pub const GPIO_AFRL_AFRL6_MSK: u32 = GPIO_AFRL_AFSEL6_MSK;
pub const GPIO_AFRL_AFRL6: u32 = GPIO_AFRL_AFSEL6;
pub const GPIO_AFRL_AFRL7_POS: u32 = GPIO_AFRL_AFSEL7_POS;
pub const GPIO_AFRL_AFRL7_MSK: u32 = GPIO_AFRL_AFSEL7_MSK;
pub const GPIO_AFRL_AFRL7: u32 = GPIO_AFRL_AFSEL7;
pub const GPIO_AFRH_AFSEL8_POS: u32 = 0u32;
pub const GPIO_AFRH_AFSEL8_MSK: u32 = 0xFu32 << GPIO_AFRH_AFSEL8_POS;
pub const GPIO_AFRH_AFSEL8: u32 = GPIO_AFRH_AFSEL8_MSK;
pub const GPIO_AFRH_AFSEL9_POS: u32 = 4u32;
pub const GPIO_AFRH_AFSEL9_MSK: u32 = 0xFu32 << GPIO_AFRH_AFSEL9_POS;
pub const GPIO_AFRH_AFSEL9: u32 = GPIO_AFRH_AFSEL9_MSK;
pub const GPIO_AFRH_AFSEL10_POS: u32 = 8u32;
pub const GPIO_AFRH_AFSEL10_MSK: u32 = 0xFu32 << GPIO_AFRH_AFSEL10_POS;
pub const GPIO_AFRH_AFSEL10: u32 = GPIO_AFRH_AFSEL10_MSK;
pub const GPIO_AFRH_AFSEL11_POS: u32 = 12u32;
pub const GPIO_AFRH_AFSEL11_MSK: u32 = 0xFu32 << GPIO_AFRH_AFSEL11_POS;
pub const GPIO_AFRH_AFSEL11: u32 = GPIO_AFRH_AFSEL11_MSK;
pub const GPIO_AFRH_AFSEL12_POS: u32 = 16u32;
pub const GPIO_AFRH_AFSEL12_MSK: u32 = 0xFu32 << GPIO_AFRH_AFSEL12_POS;
pub const GPIO_AFRH_AFSEL12: u32 = GPIO_AFRH_AFSEL12_MSK;
pub const GPIO_AFRH_AFSEL13_POS: u32 = 20u32;
pub const GPIO_AFRH_AFSEL13_MSK: u32 = 0xFu32 << GPIO_AFRH_AFSEL13_POS;
pub const GPIO_AFRH_AFSEL13: u32 = GPIO_AFRH_AFSEL13_MSK;
pub const GPIO_AFRH_AFSEL14_POS: u32 = 24u32;
pub const GPIO_AFRH_AFSEL14_MSK: u32 = 0xFu32 << GPIO_AFRH_AFSEL14_POS;
pub const GPIO_AFRH_AFSEL14: u32 = GPIO_AFRH_AFSEL14_MSK;
pub const GPIO_AFRH_AFSEL15_POS: u32 = 28u32;
pub const GPIO_AFRH_AFSEL15_MSK: u32 = 0xFu32 << GPIO_AFRH_AFSEL15_POS;
pub const GPIO_AFRH_AFSEL15: u32 = GPIO_AFRH_AFSEL15_MSK;
pub const GPIO_AFRH_AFRH0_POS: u32 = GPIO_AFRH_AFSEL8_POS;
pub const GPIO_AFRH_AFRH0_MSK: u32 = GPIO_AFRH_AFSEL8_MSK;
pub const GPIO_AFRH_AFRH0: u32 = GPIO_AFRH_AFSEL8;
pub const GPIO_AFRH_AFRH1_POS: u32 = GPIO_AFRH_AFSEL9_POS;
pub const GPIO_AFRH_AFRH1_MSK: u32 = GPIO_AFRH_AFSEL9_MSK;
pub const GPIO_AFRH_AFRH1: u32 = GPIO_AFRH_AFSEL9;
pub const GPIO_AFRH_AFRH2_POS: u32 = GPIO_AFRH_AFSEL10_POS;
pub const GPIO_AFRH_AFRH2_MSK: u32 = GPIO_AFRH_AFSEL10_MSK;
pub const GPIO_AFRH_AFRH2: u32 = GPIO_AFRH_AFSEL10;
pub const GPIO_AFRH_AFRH3_POS: u32 = GPIO_AFRH_AFSEL11_POS;
pub const GPIO_AFRH_AFRH3_MSK: u32 = GPIO_AFRH_AFSEL11_MSK;
pub const GPIO_AFRH_AFRH3: u32 = GPIO_AFRH_AFSEL11;
pub const GPIO_AFRH_AFRH4_POS: u32 = GPIO_AFRH_AFSEL12_POS;
pub const GPIO_AFRH_AFRH4_MSK: u32 = GPIO_AFRH_AFSEL12_MSK;
pub const GPIO_AFRH_AFRH4: u32 = GPIO_AFRH_AFSEL12;
pub const GPIO_AFRH_AFRH5_POS: u32 = GPIO_AFRH_AFSEL13_POS;
pub const GPIO_AFRH_AFRH5_MSK: u32 = GPIO_AFRH_AFSEL13_MSK;
pub const GPIO_AFRH_AFRH5: u32 = GPIO_AFRH_AFSEL13;
pub const GPIO_AFRH_AFRH6_POS: u32 = GPIO_AFRH_AFSEL14_POS;
pub const GPIO_AFRH_AFRH6_MSK: u32 = GPIO_AFRH_AFSEL14_MSK;
pub const GPIO_AFRH_AFRH6: u32 = GPIO_AFRH_AFSEL14;
pub const GPIO_AFRH_AFRH7_POS: u32 = GPIO_AFRH_AFSEL15_POS;
pub const GPIO_AFRH_AFRH7_MSK: u32 = GPIO_AFRH_AFSEL15_MSK;
pub const GPIO_AFRH_AFRH7: u32 = GPIO_AFRH_AFSEL15;
pub const GPIO_BRR_BR_0: u32 = 0x00000001u32;
pub const GPIO_BRR_BR_1: u32 = 0x00000002u32;
pub const GPIO_BRR_BR_2: u32 = 0x00000004u32;
pub const GPIO_BRR_BR_3: u32 = 0x00000008u32;
pub const GPIO_BRR_BR_4: u32 = 0x00000010u32;
pub const GPIO_BRR_BR_5: u32 = 0x00000020u32;
pub const GPIO_BRR_BR_6: u32 = 0x00000040u32;
pub const GPIO_BRR_BR_7: u32 = 0x00000080u32;
pub const GPIO_BRR_BR_8: u32 = 0x00000100u32;
pub const GPIO_BRR_BR_9: u32 = 0x00000200u32;
pub const GPIO_BRR_BR_10: u32 = 0x00000400u32;
pub const GPIO_BRR_BR_11: u32 = 0x00000800u32;
pub const GPIO_BRR_BR_12: u32 = 0x00001000u32;
pub const GPIO_BRR_BR_13: u32 = 0x00002000u32;
pub const GPIO_BRR_BR_14: u32 = 0x00004000u32;
pub const GPIO_BRR_BR_15: u32 = 0x00008000u32;
pub const I2C_CR1_PE_POS: u32 = 0u32;
pub const I2C_CR1_PE_MSK: u32 = 0x1u32 << I2C_CR1_PE_POS;
pub const I2C_CR1_PE: u32 = I2C_CR1_PE_MSK;
pub const I2C_CR1_TXIE_POS: u32 = 1u32;
pub const I2C_CR1_TXIE_MSK: u32 = 0x1u32 << I2C_CR1_TXIE_POS;
pub const I2C_CR1_TXIE: u32 = I2C_CR1_TXIE_MSK;
pub const I2C_CR1_RXIE_POS: u32 = 2u32;
pub const I2C_CR1_RXIE_MSK: u32 = 0x1u32 << I2C_CR1_RXIE_POS;
pub const I2C_CR1_RXIE: u32 = I2C_CR1_RXIE_MSK;
pub const I2C_CR1_ADDRIE_POS: u32 = 3u32;
pub const I2C_CR1_ADDRIE_MSK: u32 = 0x1u32 << I2C_CR1_ADDRIE_POS;
pub const I2C_CR1_ADDRIE: u32 = I2C_CR1_ADDRIE_MSK;
pub const I2C_CR1_NACKIE_POS: u32 = 4u32;
pub const I2C_CR1_NACKIE_MSK: u32 = 0x1u32 << I2C_CR1_NACKIE_POS;
pub const I2C_CR1_NACKIE: u32 = I2C_CR1_NACKIE_MSK;
pub const I2C_CR1_STOPIE_POS: u32 = 5u32;
pub const I2C_CR1_STOPIE_MSK: u32 = 0x1u32 << I2C_CR1_STOPIE_POS;
pub const I2C_CR1_STOPIE: u32 = I2C_CR1_STOPIE_MSK;
pub const I2C_CR1_TCIE_POS: u32 = 6u32;
pub const I2C_CR1_TCIE_MSK: u32 = 0x1u32 << I2C_CR1_TCIE_POS;
pub const I2C_CR1_TCIE: u32 = I2C_CR1_TCIE_MSK;
pub const I2C_CR1_ERRIE_POS: u32 = 7u32;
pub const I2C_CR1_ERRIE_MSK: u32 = 0x1u32 << I2C_CR1_ERRIE_POS;
pub const I2C_CR1_ERRIE: u32 = I2C_CR1_ERRIE_MSK;
pub const I2C_CR1_DNF_POS: u32 = 8u32;
pub const I2C_CR1_DNF_MSK: u32 = 0xFu32 << I2C_CR1_DNF_POS;
pub const I2C_CR1_DNF: u32 = I2C_CR1_DNF_MSK;
pub const I2C_CR1_ANFOFF_POS: u32 = 12u32;
pub const I2C_CR1_ANFOFF_MSK: u32 = 0x1u32 << I2C_CR1_ANFOFF_POS;
pub const I2C_CR1_ANFOFF: u32 = I2C_CR1_ANFOFF_MSK;
pub const I2C_CR1_SWRST_POS: u32 = 13u32;
pub const I2C_CR1_SWRST_MSK: u32 = 0x1u32 << I2C_CR1_SWRST_POS;
pub const I2C_CR1_SWRST: u32 = I2C_CR1_SWRST_MSK;
pub const I2C_CR1_TXDMAEN_POS: u32 = 14u32;
pub const I2C_CR1_TXDMAEN_MSK: u32 = 0x1u32 << I2C_CR1_TXDMAEN_POS;
pub const I2C_CR1_TXDMAEN: u32 = I2C_CR1_TXDMAEN_MSK;
pub const I2C_CR1_RXDMAEN_POS: u32 = 15u32;
pub const I2C_CR1_RXDMAEN_MSK: u32 = 0x1u32 << I2C_CR1_RXDMAEN_POS;
pub const I2C_CR1_RXDMAEN: u32 = I2C_CR1_RXDMAEN_MSK;
pub const I2C_CR1_SBC_POS: u32 = 16u32;
pub const I2C_CR1_SBC_MSK: u32 = 0x1u32 << I2C_CR1_SBC_POS;
pub const I2C_CR1_SBC: u32 = I2C_CR1_SBC_MSK;
pub const I2C_CR1_NOSTRETCH_POS: u32 = 17u32;
pub const I2C_CR1_NOSTRETCH_MSK: u32 = 0x1u32 << I2C_CR1_NOSTRETCH_POS;
pub const I2C_CR1_NOSTRETCH: u32 = I2C_CR1_NOSTRETCH_MSK;
pub const I2C_CR1_GCEN_POS: u32 = 19u32;
pub const I2C_CR1_GCEN_MSK: u32 = 0x1u32 << I2C_CR1_GCEN_POS;
pub const I2C_CR1_GCEN: u32 = I2C_CR1_GCEN_MSK;
pub const I2C_CR1_SMBHEN_POS: u32 = 20u32;
pub const I2C_CR1_SMBHEN_MSK: u32 = 0x1u32 << I2C_CR1_SMBHEN_POS;
pub const I2C_CR1_SMBHEN: u32 = I2C_CR1_SMBHEN_MSK;
pub const I2C_CR1_SMBDEN_POS: u32 = 21u32;
pub const I2C_CR1_SMBDEN_MSK: u32 = 0x1u32 << I2C_CR1_SMBDEN_POS;
pub const I2C_CR1_SMBDEN: u32 = I2C_CR1_SMBDEN_MSK;
pub const I2C_CR1_ALERTEN_POS: u32 = 22u32;
pub const I2C_CR1_ALERTEN_MSK: u32 = 0x1u32 << I2C_CR1_ALERTEN_POS;
pub const I2C_CR1_ALERTEN: u32 = I2C_CR1_ALERTEN_MSK;
pub const I2C_CR1_PECEN_POS: u32 = 23u32;
pub const I2C_CR1_PECEN_MSK: u32 = 0x1u32 << I2C_CR1_PECEN_POS;
pub const I2C_CR1_PECEN: u32 = I2C_CR1_PECEN_MSK;
pub const I2C_CR2_SADD_POS: u32 = 0u32;
pub const I2C_CR2_SADD_MSK: u32 = 0x3FFu32 << I2C_CR2_SADD_POS;
pub const I2C_CR2_SADD: u32 = I2C_CR2_SADD_MSK;
pub const I2C_CR2_RD_WRN_POS: u32 = 10u32;
pub const I2C_CR2_RD_WRN_MSK: u32 = 0x1u32 << I2C_CR2_RD_WRN_POS;
pub const I2C_CR2_RD_WRN: u32 = I2C_CR2_RD_WRN_MSK;
pub const I2C_CR2_ADD10_POS: u32 = 11u32;
pub const I2C_CR2_ADD10_MSK: u32 = 0x1u32 << I2C_CR2_ADD10_POS;
pub const I2C_CR2_ADD10: u32 = I2C_CR2_ADD10_MSK;
pub const I2C_CR2_HEAD10R_POS: u32 = 12u32;
pub const I2C_CR2_HEAD10R_MSK: u32 = 0x1u32 << I2C_CR2_HEAD10R_POS;
pub const I2C_CR2_HEAD10R: u32 = I2C_CR2_HEAD10R_MSK;
pub const I2C_CR2_START_POS: u32 = 13u32;
pub const I2C_CR2_START_MSK: u32 = 0x1u32 << I2C_CR2_START_POS;
pub const I2C_CR2_START: u32 = I2C_CR2_START_MSK;
pub const I2C_CR2_STOP_POS: u32 = 14u32;
pub const I2C_CR2_STOP_MSK: u32 = 0x1u32 << I2C_CR2_STOP_POS;
pub const I2C_CR2_STOP: u32 = I2C_CR2_STOP_MSK;
pub const I2C_CR2_NACK_POS: u32 = 15u32;
pub const I2C_CR2_NACK_MSK: u32 = 0x1u32 << I2C_CR2_NACK_POS;
pub const I2C_CR2_NACK: u32 = I2C_CR2_NACK_MSK;
pub const I2C_CR2_NBYTES_POS: u32 = 16u32;
pub const I2C_CR2_NBYTES_MSK: u32 = 0xFFu32 << I2C_CR2_NBYTES_POS;
pub const I2C_CR2_NBYTES: u32 = I2C_CR2_NBYTES_MSK;
pub const I2C_CR2_RELOAD_POS: u32 = 24u32;
pub const I2C_CR2_RELOAD_MSK: u32 = 0x1u32 << I2C_CR2_RELOAD_POS;
pub const I2C_CR2_RELOAD: u32 = I2C_CR2_RELOAD_MSK;
pub const I2C_CR2_AUTOEND_POS: u32 = 25u32;
pub const I2C_CR2_AUTOEND_MSK: u32 = 0x1u32 << I2C_CR2_AUTOEND_POS;
pub const I2C_CR2_AUTOEND: u32 = I2C_CR2_AUTOEND_MSK;
pub const I2C_CR2_PECBYTE_POS: u32 = 26u32;
pub const I2C_CR2_PECBYTE_MSK: u32 = 0x1u32 << I2C_CR2_PECBYTE_POS;
pub const I2C_CR2_PECBYTE: u32 = I2C_CR2_PECBYTE_MSK;
pub const I2C_OAR1_OA1_POS: u32 = 0u32;
pub const I2C_OAR1_OA1_MSK: u32 = 0x3FFu32 << I2C_OAR1_OA1_POS;
pub const I2C_OAR1_OA1: u32 = I2C_OAR1_OA1_MSK;
pub const I2C_OAR1_OA1MODE_POS: u32 = 10u32;
pub const I2C_OAR1_OA1MODE_MSK: u32 = 0x1u32 << I2C_OAR1_OA1MODE_POS;
pub const I2C_OAR1_OA1MODE: u32 = I2C_OAR1_OA1MODE_MSK;
pub const I2C_OAR1_OA1EN_POS: u32 = 15u32;
pub const I2C_OAR1_OA1EN_MSK: u32 = 0x1u32 << I2C_OAR1_OA1EN_POS;
pub const I2C_OAR1_OA1EN: u32 = I2C_OAR1_OA1EN_MSK;
pub const I2C_OAR2_OA2_POS: u32 = 1u32;
pub const I2C_OAR2_OA2_MSK: u32 = 0x7Fu32 << I2C_OAR2_OA2_POS;
pub const I2C_OAR2_OA2: u32 = I2C_OAR2_OA2_MSK;
pub const I2C_OAR2_OA2MSK_POS: u32 = 8u32;
pub const I2C_OAR2_OA2MSK_MSK: u32 = 0x7u32 << I2C_OAR2_OA2MSK_POS;
pub const I2C_OAR2_OA2MSK: u32 = I2C_OAR2_OA2MSK_MSK;
pub const I2C_OAR2_OA2NOMASK: u32 = 0x00000000u32;
pub const I2C_OAR2_OA2MASK01_POS: u32 = 8u32;
pub const I2C_OAR2_OA2MASK01_MSK: u32 = 0x1u32 << I2C_OAR2_OA2MASK01_POS;
pub const I2C_OAR2_OA2MASK01: u32 = I2C_OAR2_OA2MASK01_MSK;
pub const I2C_OAR2_OA2MASK02_POS: u32 = 9u32;
pub const I2C_OAR2_OA2MASK02_MSK: u32 = 0x1u32 << I2C_OAR2_OA2MASK02_POS;
pub const I2C_OAR2_OA2MASK02: u32 = I2C_OAR2_OA2MASK02_MSK;
pub const I2C_OAR2_OA2MASK03_POS: u32 = 8u32;
pub const I2C_OAR2_OA2MASK03_MSK: u32 = 0x3u32 << I2C_OAR2_OA2MASK03_POS;
pub const I2C_OAR2_OA2MASK03: u32 = I2C_OAR2_OA2MASK03_MSK;
pub const I2C_OAR2_OA2MASK04_POS: u32 = 10u32;
pub const I2C_OAR2_OA2MASK04_MSK: u32 = 0x1u32 << I2C_OAR2_OA2MASK04_POS;
pub const I2C_OAR2_OA2MASK04: u32 = I2C_OAR2_OA2MASK04_MSK;
pub const I2C_OAR2_OA2MASK05_POS: u32 = 8u32;
pub const I2C_OAR2_OA2MASK05_MSK: u32 = 0x5u32 << I2C_OAR2_OA2MASK05_POS;
pub const I2C_OAR2_OA2MASK05: u32 = I2C_OAR2_OA2MASK05_MSK;
pub const I2C_OAR2_OA2MASK06_POS: u32 = 9u32;
pub const I2C_OAR2_OA2MASK06_MSK: u32 = 0x3u32 << I2C_OAR2_OA2MASK06_POS;
pub const I2C_OAR2_OA2MASK06: u32 = I2C_OAR2_OA2MASK06_MSK;
pub const I2C_OAR2_OA2MASK07_POS: u32 = 8u32;
pub const I2C_OAR2_OA2MASK07_MSK: u32 = 0x7u32 << I2C_OAR2_OA2MASK07_POS;
pub const I2C_OAR2_OA2MASK07: u32 = I2C_OAR2_OA2MASK07_MSK;
pub const I2C_OAR2_OA2EN_POS: u32 = 15u32;
pub const I2C_OAR2_OA2EN_MSK: u32 = 0x1u32 << I2C_OAR2_OA2EN_POS;
pub const I2C_OAR2_OA2EN: u32 = I2C_OAR2_OA2EN_MSK;
pub const I2C_TIMINGR_SCLL_POS: u32 = 0u32;
pub const I2C_TIMINGR_SCLL_MSK: u32 = 0xFFu32 << I2C_TIMINGR_SCLL_POS;
pub const I2C_TIMINGR_SCLL: u32 = I2C_TIMINGR_SCLL_MSK;
pub const I2C_TIMINGR_SCLH_POS: u32 = 8u32;
pub const I2C_TIMINGR_SCLH_MSK: u32 = 0xFFu32 << I2C_TIMINGR_SCLH_POS;
pub const I2C_TIMINGR_SCLH: u32 = I2C_TIMINGR_SCLH_MSK;
pub const I2C_TIMINGR_SDADEL_POS: u32 = 16u32;
pub const I2C_TIMINGR_SDADEL_MSK: u32 = 0xFu32 << I2C_TIMINGR_SDADEL_POS;
pub const I2C_TIMINGR_SDADEL: u32 = I2C_TIMINGR_SDADEL_MSK;
pub const I2C_TIMINGR_SCLDEL_POS: u32 = 20u32;
pub const I2C_TIMINGR_SCLDEL_MSK: u32 = 0xFu32 << I2C_TIMINGR_SCLDEL_POS;
pub const I2C_TIMINGR_SCLDEL: u32 = I2C_TIMINGR_SCLDEL_MSK;
pub const I2C_TIMINGR_PRESC_POS: u32 = 28u32;
pub const I2C_TIMINGR_PRESC_MSK: u32 = 0xFu32 << I2C_TIMINGR_PRESC_POS;
pub const I2C_TIMINGR_PRESC: u32 = I2C_TIMINGR_PRESC_MSK;
pub const I2C_TIMEOUTR_TIMEOUTA_POS: u32 = 0u32;
pub const I2C_TIMEOUTR_TIMEOUTA_MSK: u32 = 0xFFFu32 << I2C_TIMEOUTR_TIMEOUTA_POS;
pub const I2C_TIMEOUTR_TIMEOUTA: u32 = I2C_TIMEOUTR_TIMEOUTA_MSK;
pub const I2C_TIMEOUTR_TIDLE_POS: u32 = 12u32;
pub const I2C_TIMEOUTR_TIDLE_MSK: u32 = 0x1u32 << I2C_TIMEOUTR_TIDLE_POS;
pub const I2C_TIMEOUTR_TIDLE: u32 = I2C_TIMEOUTR_TIDLE_MSK;
pub const I2C_TIMEOUTR_TIMOUTEN_POS: u32 = 15u32;
pub const I2C_TIMEOUTR_TIMOUTEN_MSK: u32 = 0x1u32 << I2C_TIMEOUTR_TIMOUTEN_POS;
pub const I2C_TIMEOUTR_TIMOUTEN: u32 = I2C_TIMEOUTR_TIMOUTEN_MSK;
pub const I2C_TIMEOUTR_TIMEOUTB_POS: u32 = 16u32;
pub const I2C_TIMEOUTR_TIMEOUTB_MSK: u32 = 0xFFFu32 << I2C_TIMEOUTR_TIMEOUTB_POS;
pub const I2C_TIMEOUTR_TIMEOUTB: u32 = I2C_TIMEOUTR_TIMEOUTB_MSK;
pub const I2C_TIMEOUTR_TEXTEN_POS: u32 = 31u32;
pub const I2C_TIMEOUTR_TEXTEN_MSK: u32 = 0x1u32 << I2C_TIMEOUTR_TEXTEN_POS;
pub const I2C_TIMEOUTR_TEXTEN: u32 = I2C_TIMEOUTR_TEXTEN_MSK;
pub const I2C_ISR_TXE_POS: u32 = 0u32;
pub const I2C_ISR_TXE_MSK: u32 = 0x1u32 << I2C_ISR_TXE_POS;
pub const I2C_ISR_TXE: u32 = I2C_ISR_TXE_MSK;
pub const I2C_ISR_RXNE_POS: u32 = 2u32;
pub const I2C_ISR_RXNE_MSK: u32 = 0x1u32 << I2C_ISR_RXNE_POS;
pub const I2C_ISR_RXNE: u32 = I2C_ISR_RXNE_MSK;
pub const I2C_ISR_ADDR_POS: u32 = 3u32;
pub const I2C_ISR_ADDR_MSK: u32 = 0x1u32 << I2C_ISR_ADDR_POS;
pub const I2C_ISR_ADDR: u32 = I2C_ISR_ADDR_MSK;
pub const I2C_ISR_NACKF_POS: u32 = 4u32;
pub const I2C_ISR_NACKF_MSK: u32 = 0x1u32 << I2C_ISR_NACKF_POS;
pub const I2C_ISR_NACKF: u32 = I2C_ISR_NACKF_MSK;
pub const I2C_ISR_STOPF_POS: u32 = 5u32;
pub const I2C_ISR_STOPF_MSK: u32 = 0x1u32 << I2C_ISR_STOPF_POS;
pub const I2C_ISR_STOPF: u32 = I2C_ISR_STOPF_MSK;
pub const I2C_ISR_TC_POS: u32 = 6u32;
pub const I2C_ISR_TC_MSK: u32 = 0x1u32 << I2C_ISR_TC_POS;
pub const I2C_ISR_TC: u32 = I2C_ISR_TC_MSK;
pub const I2C_ISR_TCR_POS: u32 = 7u32;
pub const I2C_ISR_TCR_MSK: u32 = 0x1u32 << I2C_ISR_TCR_POS;
pub const I2C_ISR_TCR: u32 = I2C_ISR_TCR_MSK;
pub const I2C_ISR_BERR_POS: u32 = 8u32;
pub const I2C_ISR_BERR_MSK: u32 = 0x1u32 << I2C_ISR_BERR_POS;
pub const I2C_ISR_BERR: u32 = I2C_ISR_BERR_MSK;
pub const I2C_ISR_ARLO_POS: u32 = 9u32;
pub const I2C_ISR_ARLO_MSK: u32 = 0x1u32 << I2C_ISR_ARLO_POS;
pub const I2C_ISR_ARLO: u32 = I2C_ISR_ARLO_MSK;
pub const I2C_ISR_OVR_POS: u32 = 10u32;
pub const I2C_ISR_OVR_MSK: u32 = 0x1u32 << I2C_ISR_OVR_POS;
pub const I2C_ISR_OVR: u32 = I2C_ISR_OVR_MSK;
pub const I2C_ISR_PECERR_POS: u32 = 11u32;
pub const I2C_ISR_PECERR_MSK: u32 = 0x1u32 << I2C_ISR_PECERR_POS;
pub const I2C_ISR_PECERR: u32 = I2C_ISR_PECERR_MSK;
pub const I2C_ISR_TIMEOUT_POS: u32 = 12u32;
pub const I2C_ISR_TIMEOUT_MSK: u32 = 0x1u32 << I2C_ISR_TIMEOUT_POS;
pub const I2C_ISR_TIMEOUT: u32 = I2C_ISR_TIMEOUT_MSK;
pub const I2C_ISR_ALERT_POS: u32 = 13u32;
pub const I2C_ISR_ALERT_MSK: u32 = 0x1u32 << I2C_ISR_ALERT_POS;
pub const I2C_ISR_ALERT: u32 = I2C_ISR_ALERT_MSK;
pub const I2C_ISR_BUSY_POS: u32 = 15u32;
pub const I2C_ISR_BUSY_MSK: u32 = 0x1u32 << I2C_ISR_BUSY_POS;
pub const I2C_ISR_BUSY: u32 = I2C_ISR_BUSY_MSK;
pub const I2C_ISR_DIR_POS: u32 = 16u32;
pub const I2C_ISR_DIR_MSK: u32 = 0x1u32 << I2C_ISR_DIR_POS;
pub const I2C_ISR_DIR: u32 = I2C_ISR_DIR_MSK;
pub const I2C_ISR_ADDCODE_POS: u32 = 17u32;
pub const I2C_ISR_ADDCODE_MSK: u32 = 0x7Fu32 << I2C_ISR_ADDCODE_POS;
pub const I2C_ISR_ADDCODE: u32 = I2C_ISR_ADDCODE_MSK;
pub const I2C_ICR_ADDRCF_POS: u32 = 3u32;
pub const I2C_ICR_ADDRCF_MSK: u32 = 0x1u32 << I2C_ICR_ADDRCF_POS;
pub const I2C_ICR_ADDRCF: u32 = I2C_ICR_ADDRCF_MSK;
pub const I2C_ICR_NACKCF_POS: u32 = 4u32;
pub const I2C_ICR_NACKCF_MSK: u32 = 0x1u32 << I2C_ICR_NACKCF_POS;
pub const I2C_ICR_NACKCF: u32 = I2C_ICR_NACKCF_MSK;
pub const I2C_ICR_STOPCF_POS: u32 = 5u32;
pub const I2C_ICR_STOPCF_MSK: u32 = 0x1u32 << I2C_ICR_STOPCF_POS;
pub const I2C_ICR_STOPCF: u32 = I2C_ICR_STOPCF_MSK;
pub const I2C_ICR_BERRCF_POS: u32 = 8u32;
pub const I2C_ICR_BERRCF_MSK: u32 = 0x1u32 << I2C_ICR_BERRCF_POS;
pub const I2C_ICR_BERRCF: u32 = I2C_ICR_BERRCF_MSK;
pub const I2C_ICR_ARLOCF_POS: u32 = 9u32;
pub const I2C_ICR_ARLOCF_MSK: u32 = 0x1u32 << I2C_ICR_ARLOCF_POS;
pub const I2C_ICR_ARLOCF: u32 = I2C_ICR_ARLOCF_MSK;
pub const I2C_ICR_OVRCF_POS: u32 = 10u32;
pub const I2C_ICR_OVRCF_MSK: u32 = 0x1u32 << I2C_ICR_OVRCF_POS;
pub const I2C_ICR_OVRCF: u32 = I2C_ICR_OVRCF_MSK;
pub const I2C_ICR_PECCF_POS: u32 = 11u32;
pub const I2C_ICR_PECCF_MSK: u32 = 0x1u32 << I2C_ICR_PECCF_POS;
pub const I2C_ICR_PECCF: u32 = I2C_ICR_PECCF_MSK;
pub const I2C_ICR_TIMOUTCF_POS: u32 = 12u32;
pub const I2C_ICR_TIMOUTCF_MSK: u32 = 0x1u32 << I2C_ICR_TIMOUTCF_POS;
pub const I2C_ICR_TIMOUTCF: u32 = I2C_ICR_TIMOUTCF_MSK;
pub const I2C_ICR_ALERTCF_POS: u32 = 13u32;
pub const I2C_ICR_ALERTCF_MSK: u32 = 0x1u32 << I2C_ICR_ALERTCF_POS;
pub const I2C_ICR_ALERTCF: u32 = I2C_ICR_ALERTCF_MSK;
pub const I2C_PECR_PEC_POS: u32 = 0u32;
pub const I2C_PECR_PEC_MSK: u32 = 0xFFu32 << I2C_PECR_PEC_POS;
pub const I2C_PECR_PEC: u32 = I2C_PECR_PEC_MSK;
pub const I2C_RXDR_RXDATA_POS: u32 = 0u32;
pub const I2C_RXDR_RXDATA_MSK: u32 = 0xFFu32 << I2C_RXDR_RXDATA_POS;
pub const I2C_RXDR_RXDATA: u32 = I2C_RXDR_RXDATA_MSK;
pub const I2C_TXDR_TXDATA_POS: u32 = 0u32;
pub const I2C_TXDR_TXDATA_MSK: u32 = 0xFFu32 << I2C_TXDR_TXDATA_POS;
pub const I2C_TXDR_TXDATA: u32 = I2C_TXDR_TXDATA_MSK;
pub const IWDG_KR_KEY_POS: u32 = 0u32;
pub const IWDG_KR_KEY_MSK: u32 = 0xFFFFu32 << IWDG_KR_KEY_POS;
pub const IWDG_KR_KEY: u32 = IWDG_KR_KEY_MSK;
pub const IWDG_PR_PR_POS: u32 = 0u32;
pub const IWDG_PR_PR_MSK: u32 = 0x7u32 << IWDG_PR_PR_POS;
pub const IWDG_PR_PR: u32 = IWDG_PR_PR_MSK;
pub const IWDG_PR_PR_0: u32 = 0x1u32 << IWDG_PR_PR_POS;
pub const IWDG_PR_PR_1: u32 = 0x2u32 << IWDG_PR_PR_POS;
pub const IWDG_PR_PR_2: u32 = 0x4u32 << IWDG_PR_PR_POS;
pub const IWDG_RLR_RL_POS: u32 = 0u32;
pub const IWDG_RLR_RL_MSK: u32 = 0xFFFu32 << IWDG_RLR_RL_POS;
pub const IWDG_RLR_RL: u32 = IWDG_RLR_RL_MSK;
pub const IWDG_SR_PVU_POS: u32 = 0u32;
pub const IWDG_SR_PVU_MSK: u32 = 0x1u32 << IWDG_SR_PVU_POS;
pub const IWDG_SR_PVU: u32 = IWDG_SR_PVU_MSK;
pub const IWDG_SR_RVU_POS: u32 = 1u32;
pub const IWDG_SR_RVU_MSK: u32 = 0x1u32 << IWDG_SR_RVU_POS;
pub const IWDG_SR_RVU: u32 = IWDG_SR_RVU_MSK;
pub const IWDG_SR_WVU_POS: u32 = 2u32;
pub const IWDG_SR_WVU_MSK: u32 = 0x1u32 << IWDG_SR_WVU_POS;
pub const IWDG_SR_WVU: u32 = IWDG_SR_WVU_MSK;
pub const IWDG_WINR_WIN_POS: u32 = 0u32;
pub const IWDG_WINR_WIN_MSK: u32 = 0xFFFu32 << IWDG_WINR_WIN_POS;
pub const IWDG_WINR_WIN: u32 = IWDG_WINR_WIN_MSK;
pub const PWR_CR_LPDS_POS: u32 = 0u32;
pub const PWR_CR_LPDS_MSK: u32 = 0x1u32 << PWR_CR_LPDS_POS;
pub const PWR_CR_LPDS: u32 = PWR_CR_LPDS_MSK;
pub const PWR_CR_PDDS_POS: u32 = 1u32;
pub const PWR_CR_PDDS_MSK: u32 = 0x1u32 << PWR_CR_PDDS_POS;
pub const PWR_CR_PDDS: u32 = PWR_CR_PDDS_MSK;
pub const PWR_CR_CWUF_POS: u32 = 2u32;
pub const PWR_CR_CWUF_MSK: u32 = 0x1u32 << PWR_CR_CWUF_POS;
pub const PWR_CR_CWUF: u32 = PWR_CR_CWUF_MSK;
pub const PWR_CR_CSBF_POS: u32 = 3u32;
pub const PWR_CR_CSBF_MSK: u32 = 0x1u32 << PWR_CR_CSBF_POS;
pub const PWR_CR_CSBF: u32 = PWR_CR_CSBF_MSK;
pub const PWR_CR_DBP_POS: u32 = 8u32;
pub const PWR_CR_DBP_MSK: u32 = 0x1u32 << PWR_CR_DBP_POS;
pub const PWR_CR_DBP: u32 = PWR_CR_DBP_MSK;
pub const PWR_CSR_WUF_POS: u32 = 0u32;
pub const PWR_CSR_WUF_MSK: u32 = 0x1u32 << PWR_CSR_WUF_POS;
pub const PWR_CSR_WUF: u32 = PWR_CSR_WUF_MSK;
pub const PWR_CSR_SBF_POS: u32 = 1u32;
pub const PWR_CSR_SBF_MSK: u32 = 0x1u32 << PWR_CSR_SBF_POS;
pub const PWR_CSR_SBF: u32 = PWR_CSR_SBF_MSK;
pub const PWR_CSR_EWUP1_POS: u32 = 8u32;
pub const PWR_CSR_EWUP1_MSK: u32 = 0x1u32 << PWR_CSR_EWUP1_POS;
pub const PWR_CSR_EWUP1: u32 = PWR_CSR_EWUP1_MSK;
pub const PWR_CSR_EWUP2_POS: u32 = 9u32;
pub const PWR_CSR_EWUP2_MSK: u32 = 0x1u32 << PWR_CSR_EWUP2_POS;
pub const PWR_CSR_EWUP2: u32 = PWR_CSR_EWUP2_MSK;
pub const RCC_CR_HSION_POS: u32 = 0u32;
pub const RCC_CR_HSION_MSK: u32 = 0x1u32 << RCC_CR_HSION_POS;
pub const RCC_CR_HSION: u32 = RCC_CR_HSION_MSK;
pub const RCC_CR_HSIRDY_POS: u32 = 1u32;
pub const RCC_CR_HSIRDY_MSK: u32 = 0x1u32 << RCC_CR_HSIRDY_POS;
pub const RCC_CR_HSIRDY: u32 = RCC_CR_HSIRDY_MSK;
pub const RCC_CR_HSITRIM_POS: u32 = 3u32;
pub const RCC_CR_HSITRIM_MSK: u32 = 0x1Fu32 << RCC_CR_HSITRIM_POS;
pub const RCC_CR_HSITRIM: u32 = RCC_CR_HSITRIM_MSK;
pub const RCC_CR_HSITRIM_0: u32 = 0x01u32 << RCC_CR_HSITRIM_POS;
pub const RCC_CR_HSITRIM_1: u32 = 0x02u32 << RCC_CR_HSITRIM_POS;
pub const RCC_CR_HSITRIM_2: u32 = 0x04u32 << RCC_CR_HSITRIM_POS;
pub const RCC_CR_HSITRIM_3: u32 = 0x08u32 << RCC_CR_HSITRIM_POS;
pub const RCC_CR_HSITRIM_4: u32 = 0x10u32 << RCC_CR_HSITRIM_POS;
pub const RCC_CR_HSICAL_POS: u32 = 8u32;
pub const RCC_CR_HSICAL_MSK: u32 = 0xFFu32 << RCC_CR_HSICAL_POS;
pub const RCC_CR_HSICAL: u32 = RCC_CR_HSICAL_MSK;
pub const RCC_CR_HSICAL_0: u32 = 0x01u32 << RCC_CR_HSICAL_POS;
pub const RCC_CR_HSICAL_1: u32 = 0x02u32 << RCC_CR_HSICAL_POS;
pub const RCC_CR_HSICAL_2: u32 = 0x04u32 << RCC_CR_HSICAL_POS;
pub const RCC_CR_HSICAL_3: u32 = 0x08u32 << RCC_CR_HSICAL_POS;
pub const RCC_CR_HSICAL_4: u32 = 0x10u32 << RCC_CR_HSICAL_POS;
pub const RCC_CR_HSICAL_5: u32 = 0x20u32 << RCC_CR_HSICAL_POS;
pub const RCC_CR_HSICAL_6: u32 = 0x40u32 << RCC_CR_HSICAL_POS;
pub const RCC_CR_HSICAL_7: u32 = 0x80u32 << RCC_CR_HSICAL_POS;
pub const RCC_CR_HSEON_POS: u32 = 16u32;
pub const RCC_CR_HSEON_MSK: u32 = 0x1u32 << RCC_CR_HSEON_POS;
pub const RCC_CR_HSEON: u32 = RCC_CR_HSEON_MSK;
pub const RCC_CR_HSERDY_POS: u32 = 17u32;
pub const RCC_CR_HSERDY_MSK: u32 = 0x1u32 << RCC_CR_HSERDY_POS;
pub const RCC_CR_HSERDY: u32 = RCC_CR_HSERDY_MSK;
pub const RCC_CR_HSEBYP_POS: u32 = 18u32;
pub const RCC_CR_HSEBYP_MSK: u32 = 0x1u32 << RCC_CR_HSEBYP_POS;
pub const RCC_CR_HSEBYP: u32 = RCC_CR_HSEBYP_MSK;
pub const RCC_CR_CSSON_POS: u32 = 19u32;
pub const RCC_CR_CSSON_MSK: u32 = 0x1u32 << RCC_CR_CSSON_POS;
pub const RCC_CR_CSSON: u32 = RCC_CR_CSSON_MSK;
pub const RCC_CR_PLLON_POS: u32 = 24u32;
pub const RCC_CR_PLLON_MSK: u32 = 0x1u32 << RCC_CR_PLLON_POS;
pub const RCC_CR_PLLON: u32 = RCC_CR_PLLON_MSK;
pub const RCC_CR_PLLRDY_POS: u32 = 25u32;
pub const RCC_CR_PLLRDY_MSK: u32 = 0x1u32 << RCC_CR_PLLRDY_POS;
pub const RCC_CR_PLLRDY: u32 = RCC_CR_PLLRDY_MSK;
pub const RCC_CFGR_SW_POS: u32 = 0u32;
pub const RCC_CFGR_SW_MSK: u32 = 0x3u32 << RCC_CFGR_SW_POS;
pub const RCC_CFGR_SW: u32 = RCC_CFGR_SW_MSK;
pub const RCC_CFGR_SW_0: u32 = 0x1u32 << RCC_CFGR_SW_POS;
pub const RCC_CFGR_SW_1: u32 = 0x2u32 << RCC_CFGR_SW_POS;
pub const RCC_CFGR_SW_HSI: u32 = 0x00000000u32;
pub const RCC_CFGR_SW_HSE: u32 = 0x00000001u32;
pub const RCC_CFGR_SW_PLL: u32 = 0x00000002u32;
pub const RCC_CFGR_SWS_POS: u32 = 2u32;
pub const RCC_CFGR_SWS_MSK: u32 = 0x3u32 << RCC_CFGR_SWS_POS;
pub const RCC_CFGR_SWS: u32 = RCC_CFGR_SWS_MSK;
pub const RCC_CFGR_SWS_0: u32 = 0x1u32 << RCC_CFGR_SWS_POS;
pub const RCC_CFGR_SWS_1: u32 = 0x2u32 << RCC_CFGR_SWS_POS;
pub const RCC_CFGR_SWS_HSI: u32 = 0x00000000u32;
pub const RCC_CFGR_SWS_HSE: u32 = 0x00000004u32;
pub const RCC_CFGR_SWS_PLL: u32 = 0x00000008u32;
pub const RCC_CFGR_HPRE_POS: u32 = 4u32;
pub const RCC_CFGR_HPRE_MSK: u32 = 0xFu32 << RCC_CFGR_HPRE_POS;
pub const RCC_CFGR_HPRE: u32 = RCC_CFGR_HPRE_MSK;
pub const RCC_CFGR_HPRE_0: u32 = 0x1u32 << RCC_CFGR_HPRE_POS;
pub const RCC_CFGR_HPRE_1: u32 = 0x2u32 << RCC_CFGR_HPRE_POS;
pub const RCC_CFGR_HPRE_2: u32 = 0x4u32 << RCC_CFGR_HPRE_POS;
pub const RCC_CFGR_HPRE_3: u32 = 0x8u32 << RCC_CFGR_HPRE_POS;
pub const RCC_CFGR_HPRE_DIV1: u32 = 0x00000000u32;
pub const RCC_CFGR_HPRE_DIV2: u32 = 0x00000080u32;
pub const RCC_CFGR_HPRE_DIV4: u32 = 0x00000090u32;
pub const RCC_CFGR_HPRE_DIV8: u32 = 0x000000A0u32;
pub const RCC_CFGR_HPRE_DIV16: u32 = 0x000000B0u32;
pub const RCC_CFGR_HPRE_DIV64: u32 = 0x000000C0u32;
pub const RCC_CFGR_HPRE_DIV128: u32 = 0x000000D0u32;
pub const RCC_CFGR_HPRE_DIV256: u32 = 0x000000E0u32;
pub const RCC_CFGR_HPRE_DIV512: u32 = 0x000000F0u32;
pub const RCC_CFGR_PPRE_POS: u32 = 8u32;
pub const RCC_CFGR_PPRE_MSK: u32 = 0x7u32 << RCC_CFGR_PPRE_POS;
pub const RCC_CFGR_PPRE: u32 = RCC_CFGR_PPRE_MSK;
pub const RCC_CFGR_PPRE_0: u32 = 0x1u32 << RCC_CFGR_PPRE_POS;
pub const RCC_CFGR_PPRE_1: u32 = 0x2u32 << RCC_CFGR_PPRE_POS;
pub const RCC_CFGR_PPRE_2: u32 = 0x4u32 << RCC_CFGR_PPRE_POS;
pub const RCC_CFGR_PPRE_DIV1: u32 = 0x00000000u32;
pub const RCC_CFGR_PPRE_DIV2_POS: u32 = 10u32;
pub const RCC_CFGR_PPRE_DIV2_MSK: u32 = 0x1u32 << RCC_CFGR_PPRE_DIV2_POS;
pub const RCC_CFGR_PPRE_DIV2: u32 = RCC_CFGR_PPRE_DIV2_MSK;
pub const RCC_CFGR_PPRE_DIV4_POS: u32 = 8u32;
pub const RCC_CFGR_PPRE_DIV4_MSK: u32 = 0x5u32 << RCC_CFGR_PPRE_DIV4_POS;
pub const RCC_CFGR_PPRE_DIV4: u32 = RCC_CFGR_PPRE_DIV4_MSK;
pub const RCC_CFGR_PPRE_DIV8_POS: u32 = 9u32;
pub const RCC_CFGR_PPRE_DIV8_MSK: u32 = 0x3u32 << RCC_CFGR_PPRE_DIV8_POS;
pub const RCC_CFGR_PPRE_DIV8: u32 = RCC_CFGR_PPRE_DIV8_MSK;
pub const RCC_CFGR_PPRE_DIV16_POS: u32 = 8u32;
pub const RCC_CFGR_PPRE_DIV16_MSK: u32 = 0x7u32 << RCC_CFGR_PPRE_DIV16_POS;
pub const RCC_CFGR_PPRE_DIV16: u32 = RCC_CFGR_PPRE_DIV16_MSK;
pub const RCC_CFGR_ADCPRE_POS: u32 = 14u32;
pub const RCC_CFGR_ADCPRE_MSK: u32 = 0x1u32 << RCC_CFGR_ADCPRE_POS;
pub const RCC_CFGR_ADCPRE: u32 = RCC_CFGR_ADCPRE_MSK;
pub const RCC_CFGR_ADCPRE_DIV2: u32 = 0x00000000u32;
pub const RCC_CFGR_ADCPRE_DIV4: u32 = 0x00004000u32;
pub const RCC_CFGR_PLLSRC_POS: u32 = 16u32;
pub const RCC_CFGR_PLLSRC_MSK: u32 = 0x1u32 << RCC_CFGR_PLLSRC_POS;
pub const RCC_CFGR_PLLSRC: u32 = RCC_CFGR_PLLSRC_MSK;
pub const RCC_CFGR_PLLSRC_HSI_DIV2: u32 = 0x00000000u32;
pub const RCC_CFGR_PLLSRC_HSE_PREDIV: u32 = 0x00010000u32;
pub const RCC_CFGR_PLLXTPRE_POS: u32 = 17u32;
pub const RCC_CFGR_PLLXTPRE_MSK: u32 = 0x1u32 << RCC_CFGR_PLLXTPRE_POS;
pub const RCC_CFGR_PLLXTPRE: u32 = RCC_CFGR_PLLXTPRE_MSK;
pub const RCC_CFGR_PLLXTPRE_HSE_PREDIV_DIV1: u32 = 0x00000000u32;
pub const RCC_CFGR_PLLXTPRE_HSE_PREDIV_DIV2: u32 = 0x00020000u32;
pub const RCC_CFGR_PLLMUL_POS: u32 = 18u32;
pub const RCC_CFGR_PLLMUL_MSK: u32 = 0xFu32 << RCC_CFGR_PLLMUL_POS;
pub const RCC_CFGR_PLLMUL: u32 = RCC_CFGR_PLLMUL_MSK;
pub const RCC_CFGR_PLLMUL_0: u32 = 0x1u32 << RCC_CFGR_PLLMUL_POS;
pub const RCC_CFGR_PLLMUL_1: u32 = 0x2u32 << RCC_CFGR_PLLMUL_POS;
pub const RCC_CFGR_PLLMUL_2: u32 = 0x4u32 << RCC_CFGR_PLLMUL_POS;
pub const RCC_CFGR_PLLMUL_3: u32 = 0x8u32 << RCC_CFGR_PLLMUL_POS;
pub const RCC_CFGR_PLLMUL2: u32 = 0x00000000u32;
pub const RCC_CFGR_PLLMUL3: u32 = 0x00040000u32;
pub const RCC_CFGR_PLLMUL4: u32 = 0x00080000u32;
pub const RCC_CFGR_PLLMUL5: u32 = 0x000C0000u32;
pub const RCC_CFGR_PLLMUL6: u32 = 0x00100000u32;
pub const RCC_CFGR_PLLMUL7: u32 = 0x00140000u32;
pub const RCC_CFGR_PLLMUL8: u32 = 0x00180000u32;
pub const RCC_CFGR_PLLMUL9: u32 = 0x001C0000u32;
pub const RCC_CFGR_PLLMUL10: u32 = 0x00200000u32;
pub const RCC_CFGR_PLLMUL11: u32 = 0x00240000u32;
pub const RCC_CFGR_PLLMUL12: u32 = 0x00280000u32;
pub const RCC_CFGR_PLLMUL13: u32 = 0x002C0000u32;
pub const RCC_CFGR_PLLMUL14: u32 = 0x00300000u32;
pub const RCC_CFGR_PLLMUL15: u32 = 0x00340000u32;
pub const RCC_CFGR_PLLMUL16: u32 = 0x00380000u32;
pub const RCC_CFGR_MCO_POS: u32 = 24u32;
pub const RCC_CFGR_MCO_MSK: u32 = 0xFu32 << RCC_CFGR_MCO_POS;
pub const RCC_CFGR_MCO: u32 = RCC_CFGR_MCO_MSK;
pub const RCC_CFGR_MCO_0: u32 = 0x1u32 << RCC_CFGR_MCO_POS;
pub const RCC_CFGR_MCO_1: u32 = 0x2u32 << RCC_CFGR_MCO_POS;
pub const RCC_CFGR_MCO_2: u32 = 0x4u32 << RCC_CFGR_MCO_POS;
pub const RCC_CFGR_MCO_NOCLOCK: u32 = 0x00000000u32;
pub const RCC_CFGR_MCO_HSI14: u32 = 0x01000000u32;
pub const RCC_CFGR_MCO_LSI: u32 = 0x02000000u32;
pub const RCC_CFGR_MCO_LSE: u32 = 0x03000000u32;
pub const RCC_CFGR_MCO_SYSCLK: u32 = 0x04000000u32;
pub const RCC_CFGR_MCO_HSI: u32 = 0x05000000u32;
pub const RCC_CFGR_MCO_HSE: u32 = 0x06000000u32;
pub const RCC_CFGR_MCO_PLL: u32 = 0x07000000u32;
pub const RCC_CFGR_MCOPRE_POS: u32 = 28u32;
pub const RCC_CFGR_MCOPRE_MSK: u32 = 0x7u32 << RCC_CFGR_MCOPRE_POS;
pub const RCC_CFGR_MCOPRE: u32 = RCC_CFGR_MCOPRE_MSK;
pub const RCC_CFGR_MCOPRE_DIV1: u32 = 0x00000000u32;
pub const RCC_CFGR_MCOPRE_DIV2: u32 = 0x10000000u32;
pub const RCC_CFGR_MCOPRE_DIV4: u32 = 0x20000000u32;
pub const RCC_CFGR_MCOPRE_DIV8: u32 = 0x30000000u32;
pub const RCC_CFGR_MCOPRE_DIV16: u32 = 0x40000000u32;
pub const RCC_CFGR_MCOPRE_DIV32: u32 = 0x50000000u32;
pub const RCC_CFGR_MCOPRE_DIV64: u32 = 0x60000000u32;
pub const RCC_CFGR_MCOPRE_DIV128: u32 = 0x70000000u32;
pub const RCC_CFGR_PLLNODIV_POS: u32 = 31u32;
pub const RCC_CFGR_PLLNODIV_MSK: u32 = 0x1u32 << RCC_CFGR_PLLNODIV_POS;
pub const RCC_CFGR_PLLNODIV: u32 = RCC_CFGR_PLLNODIV_MSK;
pub const RCC_CFGR_MCOSEL: u32 = RCC_CFGR_MCO;
pub const RCC_CFGR_MCOSEL_0: u32 = RCC_CFGR_MCO_0;
pub const RCC_CFGR_MCOSEL_1: u32 = RCC_CFGR_MCO_1;
pub const RCC_CFGR_MCOSEL_2: u32 = RCC_CFGR_MCO_2;
pub const RCC_CFGR_MCOSEL_NOCLOCK: u32 = RCC_CFGR_MCO_NOCLOCK;
pub const RCC_CFGR_MCOSEL_HSI14: u32 = RCC_CFGR_MCO_HSI14;
pub const RCC_CFGR_MCOSEL_LSI: u32 = RCC_CFGR_MCO_LSI;
pub const RCC_CFGR_MCOSEL_LSE: u32 = RCC_CFGR_MCO_LSE;
pub const RCC_CFGR_MCOSEL_SYSCLK: u32 = RCC_CFGR_MCO_SYSCLK;
pub const RCC_CFGR_MCOSEL_HSI: u32 = RCC_CFGR_MCO_HSI;
pub const RCC_CFGR_MCOSEL_HSE: u32 = RCC_CFGR_MCO_HSE;
pub const RCC_CFGR_MCOSEL_PLL_DIV2: u32 = RCC_CFGR_MCO_PLL;
pub const RCC_CIR_LSIRDYF_POS: u32 = 0u32;
pub const RCC_CIR_LSIRDYF_MSK: u32 = 0x1u32 << RCC_CIR_LSIRDYF_POS;
pub const RCC_CIR_LSIRDYF: u32 = RCC_CIR_LSIRDYF_MSK;
pub const RCC_CIR_LSERDYF_POS: u32 = 1u32;
pub const RCC_CIR_LSERDYF_MSK: u32 = 0x1u32 << RCC_CIR_LSERDYF_POS;
pub const RCC_CIR_LSERDYF: u32 = RCC_CIR_LSERDYF_MSK;
pub const RCC_CIR_HSIRDYF_POS: u32 = 2u32;
pub const RCC_CIR_HSIRDYF_MSK: u32 = 0x1u32 << RCC_CIR_HSIRDYF_POS;
pub const RCC_CIR_HSIRDYF: u32 = RCC_CIR_HSIRDYF_MSK;
pub const RCC_CIR_HSERDYF_POS: u32 = 3u32;
pub const RCC_CIR_HSERDYF_MSK: u32 = 0x1u32 << RCC_CIR_HSERDYF_POS;
pub const RCC_CIR_HSERDYF: u32 = RCC_CIR_HSERDYF_MSK;
pub const RCC_CIR_PLLRDYF_POS: u32 = 4u32;
pub const RCC_CIR_PLLRDYF_MSK: u32 = 0x1u32 << RCC_CIR_PLLRDYF_POS;
pub const RCC_CIR_PLLRDYF: u32 = RCC_CIR_PLLRDYF_MSK;
pub const RCC_CIR_HSI14RDYF_POS: u32 = 5u32;
pub const RCC_CIR_HSI14RDYF_MSK: u32 = 0x1u32 << RCC_CIR_HSI14RDYF_POS;
pub const RCC_CIR_HSI14RDYF: u32 = RCC_CIR_HSI14RDYF_MSK;
pub const RCC_CIR_CSSF_POS: u32 = 7u32;
pub const RCC_CIR_CSSF_MSK: u32 = 0x1u32 << RCC_CIR_CSSF_POS;
pub const RCC_CIR_CSSF: u32 = RCC_CIR_CSSF_MSK;
pub const RCC_CIR_LSIRDYIE_POS: u32 = 8u32;
pub const RCC_CIR_LSIRDYIE_MSK: u32 = 0x1u32 << RCC_CIR_LSIRDYIE_POS;
pub const RCC_CIR_LSIRDYIE: u32 = RCC_CIR_LSIRDYIE_MSK;
pub const RCC_CIR_LSERDYIE_POS: u32 = 9u32;
pub const RCC_CIR_LSERDYIE_MSK: u32 = 0x1u32 << RCC_CIR_LSERDYIE_POS;
pub const RCC_CIR_LSERDYIE: u32 = RCC_CIR_LSERDYIE_MSK;
pub const RCC_CIR_HSIRDYIE_POS: u32 = 10u32;
pub const RCC_CIR_HSIRDYIE_MSK: u32 = 0x1u32 << RCC_CIR_HSIRDYIE_POS;
pub const RCC_CIR_HSIRDYIE: u32 = RCC_CIR_HSIRDYIE_MSK;
pub const RCC_CIR_HSERDYIE_POS: u32 = 11u32;
pub const RCC_CIR_HSERDYIE_MSK: u32 = 0x1u32 << RCC_CIR_HSERDYIE_POS;
pub const RCC_CIR_HSERDYIE: u32 = RCC_CIR_HSERDYIE_MSK;
pub const RCC_CIR_PLLRDYIE_POS: u32 = 12u32;
pub const RCC_CIR_PLLRDYIE_MSK: u32 = 0x1u32 << RCC_CIR_PLLRDYIE_POS;
pub const RCC_CIR_PLLRDYIE: u32 = RCC_CIR_PLLRDYIE_MSK;
pub const RCC_CIR_HSI14RDYIE_POS: u32 = 13u32;
pub const RCC_CIR_HSI14RDYIE_MSK: u32 = 0x1u32 << RCC_CIR_HSI14RDYIE_POS;
pub const RCC_CIR_HSI14RDYIE: u32 = RCC_CIR_HSI14RDYIE_MSK;
pub const RCC_CIR_LSIRDYC_POS: u32 = 16u32;
pub const RCC_CIR_LSIRDYC_MSK: u32 = 0x1u32 << RCC_CIR_LSIRDYC_POS;
pub const RCC_CIR_LSIRDYC: u32 = RCC_CIR_LSIRDYC_MSK;
pub const RCC_CIR_LSERDYC_POS: u32 = 17u32;
pub const RCC_CIR_LSERDYC_MSK: u32 = 0x1u32 << RCC_CIR_LSERDYC_POS;
pub const RCC_CIR_LSERDYC: u32 = RCC_CIR_LSERDYC_MSK;
pub const RCC_CIR_HSIRDYC_POS: u32 = 18u32;
pub const RCC_CIR_HSIRDYC_MSK: u32 = 0x1u32 << RCC_CIR_HSIRDYC_POS;
pub const RCC_CIR_HSIRDYC: u32 = RCC_CIR_HSIRDYC_MSK;
pub const RCC_CIR_HSERDYC_POS: u32 = 19u32;
pub const RCC_CIR_HSERDYC_MSK: u32 = 0x1u32 << RCC_CIR_HSERDYC_POS;
pub const RCC_CIR_HSERDYC: u32 = RCC_CIR_HSERDYC_MSK;
pub const RCC_CIR_PLLRDYC_POS: u32 = 20u32;
pub const RCC_CIR_PLLRDYC_MSK: u32 = 0x1u32 << RCC_CIR_PLLRDYC_POS;
pub const RCC_CIR_PLLRDYC: u32 = RCC_CIR_PLLRDYC_MSK;
pub const RCC_CIR_HSI14RDYC_POS: u32 = 21u32;
pub const RCC_CIR_HSI14RDYC_MSK: u32 = 0x1u32 << RCC_CIR_HSI14RDYC_POS;
pub const RCC_CIR_HSI14RDYC: u32 = RCC_CIR_HSI14RDYC_MSK;
pub const RCC_CIR_CSSC_POS: u32 = 23u32;
pub const RCC_CIR_CSSC_MSK: u32 = 0x1u32 << RCC_CIR_CSSC_POS;
pub const RCC_CIR_CSSC: u32 = RCC_CIR_CSSC_MSK;
pub const RCC_APB2RSTR_SYSCFGRST_POS: u32 = 0u32;
pub const RCC_APB2RSTR_SYSCFGRST_MSK: u32 = 0x1u32 << RCC_APB2RSTR_SYSCFGRST_POS;
pub const RCC_APB2RSTR_SYSCFGRST: u32 = RCC_APB2RSTR_SYSCFGRST_MSK;
pub const RCC_APB2RSTR_ADCRST_POS: u32 = 9u32;
pub const RCC_APB2RSTR_ADCRST_MSK: u32 = 0x1u32 << RCC_APB2RSTR_ADCRST_POS;
pub const RCC_APB2RSTR_ADCRST: u32 = RCC_APB2RSTR_ADCRST_MSK;
pub const RCC_APB2RSTR_TIM1RST_POS: u32 = 11u32;
pub const RCC_APB2RSTR_TIM1RST_MSK: u32 = 0x1u32 << RCC_APB2RSTR_TIM1RST_POS;
pub const RCC_APB2RSTR_TIM1RST: u32 = RCC_APB2RSTR_TIM1RST_MSK;
pub const RCC_APB2RSTR_SPI1RST_POS: u32 = 12u32;
pub const RCC_APB2RSTR_SPI1RST_MSK: u32 = 0x1u32 << RCC_APB2RSTR_SPI1RST_POS;
pub const RCC_APB2RSTR_SPI1RST: u32 = RCC_APB2RSTR_SPI1RST_MSK;
pub const RCC_APB2RSTR_USART1RST_POS: u32 = 14u32;
pub const RCC_APB2RSTR_USART1RST_MSK: u32 = 0x1u32 << RCC_APB2RSTR_USART1RST_POS;
pub const RCC_APB2RSTR_USART1RST: u32 = RCC_APB2RSTR_USART1RST_MSK;
pub const RCC_APB2RSTR_TIM16RST_POS: u32 = 17u32;
pub const RCC_APB2RSTR_TIM16RST_MSK: u32 = 0x1u32 << RCC_APB2RSTR_TIM16RST_POS;
pub const RCC_APB2RSTR_TIM16RST: u32 = RCC_APB2RSTR_TIM16RST_MSK;
pub const RCC_APB2RSTR_TIM17RST_POS: u32 = 18u32;
pub const RCC_APB2RSTR_TIM17RST_MSK: u32 = 0x1u32 << RCC_APB2RSTR_TIM17RST_POS;
pub const RCC_APB2RSTR_TIM17RST: u32 = RCC_APB2RSTR_TIM17RST_MSK;
pub const RCC_APB2RSTR_DBGMCURST_POS: u32 = 22u32;
pub const RCC_APB2RSTR_DBGMCURST_MSK: u32 = 0x1u32 << RCC_APB2RSTR_DBGMCURST_POS;
pub const RCC_APB2RSTR_DBGMCURST: u32 = RCC_APB2RSTR_DBGMCURST_MSK;
pub const RCC_APB2RSTR_ADC1RST: u32 = RCC_APB2RSTR_ADCRST;
pub const RCC_APB1RSTR_TIM3RST_POS: u32 = 1u32;
pub const RCC_APB1RSTR_TIM3RST_MSK: u32 = 0x1u32 << RCC_APB1RSTR_TIM3RST_POS;
pub const RCC_APB1RSTR_TIM3RST: u32 = RCC_APB1RSTR_TIM3RST_MSK;
pub const RCC_APB1RSTR_TIM14RST_POS: u32 = 8u32;
pub const RCC_APB1RSTR_TIM14RST_MSK: u32 = 0x1u32 << RCC_APB1RSTR_TIM14RST_POS;
pub const RCC_APB1RSTR_TIM14RST: u32 = RCC_APB1RSTR_TIM14RST_MSK;
pub const RCC_APB1RSTR_WWDGRST_POS: u32 = 11u32;
pub const RCC_APB1RSTR_WWDGRST_MSK: u32 = 0x1u32 << RCC_APB1RSTR_WWDGRST_POS;
pub const RCC_APB1RSTR_WWDGRST: u32 = RCC_APB1RSTR_WWDGRST_MSK;
pub const RCC_APB1RSTR_I2C1RST_POS: u32 = 21u32;
pub const RCC_APB1RSTR_I2C1RST_MSK: u32 = 0x1u32 << RCC_APB1RSTR_I2C1RST_POS;
pub const RCC_APB1RSTR_I2C1RST: u32 = RCC_APB1RSTR_I2C1RST_MSK;
pub const RCC_APB1RSTR_PWRRST_POS: u32 = 28u32;
pub const RCC_APB1RSTR_PWRRST_MSK: u32 = 0x1u32 << RCC_APB1RSTR_PWRRST_POS;
pub const RCC_APB1RSTR_PWRRST: u32 = RCC_APB1RSTR_PWRRST_MSK;
pub const RCC_AHBENR_DMAEN_POS: u32 = 0u32;
pub const RCC_AHBENR_DMAEN_MSK: u32 = 0x1u32 << RCC_AHBENR_DMAEN_POS;
pub const RCC_AHBENR_DMAEN: u32 = RCC_AHBENR_DMAEN_MSK;
pub const RCC_AHBENR_SRAMEN_POS: u32 = 2u32;
pub const RCC_AHBENR_SRAMEN_MSK: u32 = 0x1u32 << RCC_AHBENR_SRAMEN_POS;
pub const RCC_AHBENR_SRAMEN: u32 = RCC_AHBENR_SRAMEN_MSK;
pub const RCC_AHBENR_FLITFEN_POS: u32 = 4u32;
pub const RCC_AHBENR_FLITFEN_MSK: u32 = 0x1u32 << RCC_AHBENR_FLITFEN_POS;
pub const RCC_AHBENR_FLITFEN: u32 = RCC_AHBENR_FLITFEN_MSK;
pub const RCC_AHBENR_CRCEN_POS: u32 = 6u32;
pub const RCC_AHBENR_CRCEN_MSK: u32 = 0x1u32 << RCC_AHBENR_CRCEN_POS;
pub const RCC_AHBENR_CRCEN: u32 = RCC_AHBENR_CRCEN_MSK;
pub const RCC_AHBENR_GPIOAEN_POS: u32 = 17u32;
pub const RCC_AHBENR_GPIOAEN_MSK: u32 = 0x1u32 << RCC_AHBENR_GPIOAEN_POS;
pub const RCC_AHBENR_GPIOAEN: u32 = RCC_AHBENR_GPIOAEN_MSK;
pub const RCC_AHBENR_GPIOBEN_POS: u32 = 18u32;
pub const RCC_AHBENR_GPIOBEN_MSK: u32 = 0x1u32 << RCC_AHBENR_GPIOBEN_POS;
pub const RCC_AHBENR_GPIOBEN: u32 = RCC_AHBENR_GPIOBEN_MSK;
pub const RCC_AHBENR_GPIOCEN_POS: u32 = 19u32;
pub const RCC_AHBENR_GPIOCEN_MSK: u32 = 0x1u32 << RCC_AHBENR_GPIOCEN_POS;
pub const RCC_AHBENR_GPIOCEN: u32 = RCC_AHBENR_GPIOCEN_MSK;
pub const RCC_AHBENR_GPIODEN_POS: u32 = 20u32;
pub const RCC_AHBENR_GPIODEN_MSK: u32 = 0x1u32 << RCC_AHBENR_GPIODEN_POS;
pub const RCC_AHBENR_GPIODEN: u32 = RCC_AHBENR_GPIODEN_MSK;
pub const RCC_AHBENR_GPIOFEN_POS: u32 = 22u32;
pub const RCC_AHBENR_GPIOFEN_MSK: u32 = 0x1u32 << RCC_AHBENR_GPIOFEN_POS;
pub const RCC_AHBENR_GPIOFEN: u32 = RCC_AHBENR_GPIOFEN_MSK;
pub const RCC_AHBENR_DMA1EN: u32 = RCC_AHBENR_DMAEN;
pub const RCC_APB2ENR_SYSCFGCOMPEN_POS: u32 = 0u32;
pub const RCC_APB2ENR_SYSCFGCOMPEN_MSK: u32 = 0x1u32 << RCC_APB2ENR_SYSCFGCOMPEN_POS;
pub const RCC_APB2ENR_SYSCFGCOMPEN: u32 = RCC_APB2ENR_SYSCFGCOMPEN_MSK;
pub const RCC_APB2ENR_ADCEN_POS: u32 = 9u32;
pub const RCC_APB2ENR_ADCEN_MSK: u32 = 0x1u32 << RCC_APB2ENR_ADCEN_POS;
pub const RCC_APB2ENR_ADCEN: u32 = RCC_APB2ENR_ADCEN_MSK;
pub const RCC_APB2ENR_TIM1EN_POS: u32 = 11u32;
pub const RCC_APB2ENR_TIM1EN_MSK: u32 = 0x1u32 << RCC_APB2ENR_TIM1EN_POS;
pub const RCC_APB2ENR_TIM1EN: u32 = RCC_APB2ENR_TIM1EN_MSK;
pub const RCC_APB2ENR_SPI1EN_POS: u32 = 12u32;
pub const RCC_APB2ENR_SPI1EN_MSK: u32 = 0x1u32 << RCC_APB2ENR_SPI1EN_POS;
pub const RCC_APB2ENR_SPI1EN: u32 = RCC_APB2ENR_SPI1EN_MSK;
pub const RCC_APB2ENR_USART1EN_POS: u32 = 14u32;
pub const RCC_APB2ENR_USART1EN_MSK: u32 = 0x1u32 << RCC_APB2ENR_USART1EN_POS;
pub const RCC_APB2ENR_USART1EN: u32 = RCC_APB2ENR_USART1EN_MSK;
pub const RCC_APB2ENR_TIM16EN_POS: u32 = 17u32;
pub const RCC_APB2ENR_TIM16EN_MSK: u32 = 0x1u32 << RCC_APB2ENR_TIM16EN_POS;
pub const RCC_APB2ENR_TIM16EN: u32 = RCC_APB2ENR_TIM16EN_MSK;
pub const RCC_APB2ENR_TIM17EN_POS: u32 = 18u32;
pub const RCC_APB2ENR_TIM17EN_MSK: u32 = 0x1u32 << RCC_APB2ENR_TIM17EN_POS;
pub const RCC_APB2ENR_TIM17EN: u32 = RCC_APB2ENR_TIM17EN_MSK;
pub const RCC_APB2ENR_DBGMCUEN_POS: u32 = 22u32;
pub const RCC_APB2ENR_DBGMCUEN_MSK: u32 = 0x1u32 << RCC_APB2ENR_DBGMCUEN_POS;
pub const RCC_APB2ENR_DBGMCUEN: u32 = RCC_APB2ENR_DBGMCUEN_MSK;
pub const RCC_APB2ENR_SYSCFGEN: u32 = RCC_APB2ENR_SYSCFGCOMPEN;
pub const RCC_APB2ENR_ADC1EN: u32 = RCC_APB2ENR_ADCEN;
pub const RCC_APB1ENR_TIM3EN_POS: u32 = 1u32;
pub const RCC_APB1ENR_TIM3EN_MSK: u32 = 0x1u32 << RCC_APB1ENR_TIM3EN_POS;
pub const RCC_APB1ENR_TIM3EN: u32 = RCC_APB1ENR_TIM3EN_MSK;
pub const RCC_APB1ENR_TIM14EN_POS: u32 = 8u32;
pub const RCC_APB1ENR_TIM14EN_MSK: u32 = 0x1u32 << RCC_APB1ENR_TIM14EN_POS;
pub const RCC_APB1ENR_TIM14EN: u32 = RCC_APB1ENR_TIM14EN_MSK;
pub const RCC_APB1ENR_WWDGEN_POS: u32 = 11u32;
pub const RCC_APB1ENR_WWDGEN_MSK: u32 = 0x1u32 << RCC_APB1ENR_WWDGEN_POS;
pub const RCC_APB1ENR_WWDGEN: u32 = RCC_APB1ENR_WWDGEN_MSK;
pub const RCC_APB1ENR_I2C1EN_POS: u32 = 21u32;
pub const RCC_APB1ENR_I2C1EN_MSK: u32 = 0x1u32 << RCC_APB1ENR_I2C1EN_POS;
pub const RCC_APB1ENR_I2C1EN: u32 = RCC_APB1ENR_I2C1EN_MSK;
pub const RCC_APB1ENR_PWREN_POS: u32 = 28u32;
pub const RCC_APB1ENR_PWREN_MSK: u32 = 0x1u32 << RCC_APB1ENR_PWREN_POS;
pub const RCC_APB1ENR_PWREN: u32 = RCC_APB1ENR_PWREN_MSK;
pub const RCC_BDCR_LSEON_POS: u32 = 0u32;
pub const RCC_BDCR_LSEON_MSK: u32 = 0x1u32 << RCC_BDCR_LSEON_POS;
pub const RCC_BDCR_LSEON: u32 = RCC_BDCR_LSEON_MSK;
pub const RCC_BDCR_LSERDY_POS: u32 = 1u32;
pub const RCC_BDCR_LSERDY_MSK: u32 = 0x1u32 << RCC_BDCR_LSERDY_POS;
pub const RCC_BDCR_LSERDY: u32 = RCC_BDCR_LSERDY_MSK;
pub const RCC_BDCR_LSEBYP_POS: u32 = 2u32;
pub const RCC_BDCR_LSEBYP_MSK: u32 = 0x1u32 << RCC_BDCR_LSEBYP_POS;
pub const RCC_BDCR_LSEBYP: u32 = RCC_BDCR_LSEBYP_MSK;
pub const RCC_BDCR_LSEDRV_POS: u32 = 3u32;
pub const RCC_BDCR_LSEDRV_MSK: u32 = 0x3u32 << RCC_BDCR_LSEDRV_POS;
pub const RCC_BDCR_LSEDRV: u32 = RCC_BDCR_LSEDRV_MSK;
pub const RCC_BDCR_LSEDRV_0: u32 = 0x1u32 << RCC_BDCR_LSEDRV_POS;
pub const RCC_BDCR_LSEDRV_1: u32 = 0x2u32 << RCC_BDCR_LSEDRV_POS;
pub const RCC_BDCR_RTCSEL_POS: u32 = 8u32;
pub const RCC_BDCR_RTCSEL_MSK: u32 = 0x3u32 << RCC_BDCR_RTCSEL_POS;
pub const RCC_BDCR_RTCSEL: u32 = RCC_BDCR_RTCSEL_MSK;
pub const RCC_BDCR_RTCSEL_0: u32 = 0x1u32 << RCC_BDCR_RTCSEL_POS;
pub const RCC_BDCR_RTCSEL_1: u32 = 0x2u32 << RCC_BDCR_RTCSEL_POS;
pub const RCC_BDCR_RTCSEL_NOCLOCK: u32 = 0x00000000u32;
pub const RCC_BDCR_RTCSEL_LSE: u32 = 0x00000100u32;
pub const RCC_BDCR_RTCSEL_LSI: u32 = 0x00000200u32;
pub const RCC_BDCR_RTCSEL_HSE: u32 = 0x00000300u32;
pub const RCC_BDCR_RTCEN_POS: u32 = 15u32;
pub const RCC_BDCR_RTCEN_MSK: u32 = 0x1u32 << RCC_BDCR_RTCEN_POS;
pub const RCC_BDCR_RTCEN: u32 = RCC_BDCR_RTCEN_MSK;
pub const RCC_BDCR_BDRST_POS: u32 = 16u32;
pub const RCC_BDCR_BDRST_MSK: u32 = 0x1u32 << RCC_BDCR_BDRST_POS;
pub const RCC_BDCR_BDRST: u32 = RCC_BDCR_BDRST_MSK;
pub const RCC_CSR_LSION_POS: u32 = 0u32;
pub const RCC_CSR_LSION_MSK: u32 = 0x1u32 << RCC_CSR_LSION_POS;
pub const RCC_CSR_LSION: u32 = RCC_CSR_LSION_MSK;
pub const RCC_CSR_LSIRDY_POS: u32 = 1u32;
pub const RCC_CSR_LSIRDY_MSK: u32 = 0x1u32 << RCC_CSR_LSIRDY_POS;
pub const RCC_CSR_LSIRDY: u32 = RCC_CSR_LSIRDY_MSK;
pub const RCC_CSR_V18PWRRSTF_POS: u32 = 23u32;
pub const RCC_CSR_V18PWRRSTF_MSK: u32 = 0x1u32 << RCC_CSR_V18PWRRSTF_POS;
pub const RCC_CSR_V18PWRRSTF: u32 = RCC_CSR_V18PWRRSTF_MSK;
pub const RCC_CSR_RMVF_POS: u32 = 24u32;
pub const RCC_CSR_RMVF_MSK: u32 = 0x1u32 << RCC_CSR_RMVF_POS;
pub const RCC_CSR_RMVF: u32 = RCC_CSR_RMVF_MSK;
pub const RCC_CSR_OBLRSTF_POS: u32 = 25u32;
pub const RCC_CSR_OBLRSTF_MSK: u32 = 0x1u32 << RCC_CSR_OBLRSTF_POS;
pub const RCC_CSR_OBLRSTF: u32 = RCC_CSR_OBLRSTF_MSK;
pub const RCC_CSR_PINRSTF_POS: u32 = 26u32;
pub const RCC_CSR_PINRSTF_MSK: u32 = 0x1u32 << RCC_CSR_PINRSTF_POS;
pub const RCC_CSR_PINRSTF: u32 = RCC_CSR_PINRSTF_MSK;
pub const RCC_CSR_PORRSTF_POS: u32 = 27u32;
pub const RCC_CSR_PORRSTF_MSK: u32 = 0x1u32 << RCC_CSR_PORRSTF_POS;
pub const RCC_CSR_PORRSTF: u32 = RCC_CSR_PORRSTF_MSK;
pub const RCC_CSR_SFTRSTF_POS: u32 = 28u32;
pub const RCC_CSR_SFTRSTF_MSK: u32 = 0x1u32 << RCC_CSR_SFTRSTF_POS;
pub const RCC_CSR_SFTRSTF: u32 = RCC_CSR_SFTRSTF_MSK;
pub const RCC_CSR_IWDGRSTF_POS: u32 = 29u32;
pub const RCC_CSR_IWDGRSTF_MSK: u32 = 0x1u32 << RCC_CSR_IWDGRSTF_POS;
pub const RCC_CSR_IWDGRSTF: u32 = RCC_CSR_IWDGRSTF_MSK;
pub const RCC_CSR_WWDGRSTF_POS: u32 = 30u32;
pub const RCC_CSR_WWDGRSTF_MSK: u32 = 0x1u32 << RCC_CSR_WWDGRSTF_POS;
pub const RCC_CSR_WWDGRSTF: u32 = RCC_CSR_WWDGRSTF_MSK;
pub const RCC_CSR_LPWRRSTF_POS: u32 = 31u32;
pub const RCC_CSR_LPWRRSTF_MSK: u32 = 0x1u32 << RCC_CSR_LPWRRSTF_POS;
pub const RCC_CSR_LPWRRSTF: u32 = RCC_CSR_LPWRRSTF_MSK;
pub const RCC_CSR_OBL: u32 = RCC_CSR_OBLRSTF;
pub const RCC_AHBRSTR_GPIOARST_POS: u32 = 17u32;
pub const RCC_AHBRSTR_GPIOARST_MSK: u32 = 0x1u32 << RCC_AHBRSTR_GPIOARST_POS;
pub const RCC_AHBRSTR_GPIOARST: u32 = RCC_AHBRSTR_GPIOARST_MSK;
pub const RCC_AHBRSTR_GPIOBRST_POS: u32 = 18u32;
pub const RCC_AHBRSTR_GPIOBRST_MSK: u32 = 0x1u32 << RCC_AHBRSTR_GPIOBRST_POS;
pub const RCC_AHBRSTR_GPIOBRST: u32 = RCC_AHBRSTR_GPIOBRST_MSK;
pub const RCC_AHBRSTR_GPIOCRST_POS: u32 = 19u32;
pub const RCC_AHBRSTR_GPIOCRST_MSK: u32 = 0x1u32 << RCC_AHBRSTR_GPIOCRST_POS;
pub const RCC_AHBRSTR_GPIOCRST: u32 = RCC_AHBRSTR_GPIOCRST_MSK;
pub const RCC_AHBRSTR_GPIODRST_POS: u32 = 20u32;
pub const RCC_AHBRSTR_GPIODRST_MSK: u32 = 0x1u32 << RCC_AHBRSTR_GPIODRST_POS;
pub const RCC_AHBRSTR_GPIODRST: u32 = RCC_AHBRSTR_GPIODRST_MSK;
pub const RCC_AHBRSTR_GPIOFRST_POS: u32 = 22u32;
pub const RCC_AHBRSTR_GPIOFRST_MSK: u32 = 0x1u32 << RCC_AHBRSTR_GPIOFRST_POS;
pub const RCC_AHBRSTR_GPIOFRST: u32 = RCC_AHBRSTR_GPIOFRST_MSK;
pub const RCC_CFGR2_PREDIV_POS: u32 = 0u32;
pub const RCC_CFGR2_PREDIV_MSK: u32 = 0xFu32 << RCC_CFGR2_PREDIV_POS;
pub const RCC_CFGR2_PREDIV: u32 = RCC_CFGR2_PREDIV_MSK;
pub const RCC_CFGR2_PREDIV_0: u32 = 0x1u32 << RCC_CFGR2_PREDIV_POS;
pub const RCC_CFGR2_PREDIV_1: u32 = 0x2u32 << RCC_CFGR2_PREDIV_POS;
pub const RCC_CFGR2_PREDIV_2: u32 = 0x4u32 << RCC_CFGR2_PREDIV_POS;
pub const RCC_CFGR2_PREDIV_3: u32 = 0x8u32 << RCC_CFGR2_PREDIV_POS;
pub const RCC_CFGR2_PREDIV_DIV1: u32 = 0x00000000u32;
pub const RCC_CFGR2_PREDIV_DIV2: u32 = 0x00000001u32;
pub const RCC_CFGR2_PREDIV_DIV3: u32 = 0x00000002u32;
pub const RCC_CFGR2_PREDIV_DIV4: u32 = 0x00000003u32;
pub const RCC_CFGR2_PREDIV_DIV5: u32 = 0x00000004u32;
pub const RCC_CFGR2_PREDIV_DIV6: u32 = 0x00000005u32;
pub const RCC_CFGR2_PREDIV_DIV7: u32 = 0x00000006u32;
pub const RCC_CFGR2_PREDIV_DIV8: u32 = 0x00000007u32;
pub const RCC_CFGR2_PREDIV_DIV9: u32 = 0x00000008u32;
pub const RCC_CFGR2_PREDIV_DIV10: u32 = 0x00000009u32;
pub const RCC_CFGR2_PREDIV_DIV11: u32 = 0x0000000Au32;
pub const RCC_CFGR2_PREDIV_DIV12: u32 = 0x0000000Bu32;
pub const RCC_CFGR2_PREDIV_DIV13: u32 = 0x0000000Cu32;
pub const RCC_CFGR2_PREDIV_DIV14: u32 = 0x0000000Du32;
pub const RCC_CFGR2_PREDIV_DIV15: u32 = 0x0000000Eu32;
pub const RCC_CFGR2_PREDIV_DIV16: u32 = 0x0000000Fu32;
pub const RCC_CFGR3_USART1SW_POS: u32 = 0u32;
pub const RCC_CFGR3_USART1SW_MSK: u32 = 0x3u32 << RCC_CFGR3_USART1SW_POS;
pub const RCC_CFGR3_USART1SW: u32 = RCC_CFGR3_USART1SW_MSK;
pub const RCC_CFGR3_USART1SW_0: u32 = 0x1u32 << RCC_CFGR3_USART1SW_POS;
pub const RCC_CFGR3_USART1SW_1: u32 = 0x2u32 << RCC_CFGR3_USART1SW_POS;
pub const RCC_CFGR3_USART1SW_PCLK: u32 = 0x00000000u32;
pub const RCC_CFGR3_USART1SW_SYSCLK: u32 = 0x00000001u32;
pub const RCC_CFGR3_USART1SW_LSE: u32 = 0x00000002u32;
pub const RCC_CFGR3_USART1SW_HSI: u32 = 0x00000003u32;
pub const RCC_CFGR3_I2C1SW_POS: u32 = 4u32;
pub const RCC_CFGR3_I2C1SW_MSK: u32 = 0x1u32 << RCC_CFGR3_I2C1SW_POS;
pub const RCC_CFGR3_I2C1SW: u32 = RCC_CFGR3_I2C1SW_MSK;
pub const RCC_CFGR3_I2C1SW_HSI: u32 = 0x00000000u32;
pub const RCC_CFGR3_I2C1SW_SYSCLK_POS: u32 = 4u32;
pub const RCC_CFGR3_I2C1SW_SYSCLK_MSK: u32 = 0x1u32 << RCC_CFGR3_I2C1SW_SYSCLK_POS;
pub const RCC_CFGR3_I2C1SW_SYSCLK: u32 = RCC_CFGR3_I2C1SW_SYSCLK_MSK;
pub const RCC_CR2_HSI14ON_POS: u32 = 0u32;
pub const RCC_CR2_HSI14ON_MSK: u32 = 0x1u32 << RCC_CR2_HSI14ON_POS;
pub const RCC_CR2_HSI14ON: u32 = RCC_CR2_HSI14ON_MSK;
pub const RCC_CR2_HSI14RDY_POS: u32 = 1u32;
pub const RCC_CR2_HSI14RDY_MSK: u32 = 0x1u32 << RCC_CR2_HSI14RDY_POS;
pub const RCC_CR2_HSI14RDY: u32 = RCC_CR2_HSI14RDY_MSK;
pub const RCC_CR2_HSI14TRIM_POS: u32 = 3u32;
pub const RCC_CR2_HSI14TRIM_MSK: u32 = 0x1Fu32 << RCC_CR2_HSI14TRIM_POS;
pub const RCC_CR2_HSI14TRIM: u32 = RCC_CR2_HSI14TRIM_MSK;
pub const RCC_CR2_HSI14CAL_POS: u32 = 8u32;
pub const RCC_CR2_HSI14CAL_MSK: u32 = 0xFFu32 << RCC_CR2_HSI14CAL_POS;
pub const RCC_CR2_HSI14CAL: u32 = RCC_CR2_HSI14CAL_MSK;
pub const RTC_TR_PM_POS: u32 = 22u32;
pub const RTC_TR_PM_MSK: u32 = 0x1u32 << RTC_TR_PM_POS;
pub const RTC_TR_PM: u32 = RTC_TR_PM_MSK;
pub const RTC_TR_HT_POS: u32 = 20u32;
pub const RTC_TR_HT_MSK: u32 = 0x3u32 << RTC_TR_HT_POS;
pub const RTC_TR_HT: u32 = RTC_TR_HT_MSK;
pub const RTC_TR_HT_0: u32 = 0x1u32 << RTC_TR_HT_POS;
pub const RTC_TR_HT_1: u32 = 0x2u32 << RTC_TR_HT_POS;
pub const RTC_TR_HU_POS: u32 = 16u32;
pub const RTC_TR_HU_MSK: u32 = 0xFu32 << RTC_TR_HU_POS;
pub const RTC_TR_HU: u32 = RTC_TR_HU_MSK;
pub const RTC_TR_HU_0: u32 = 0x1u32 << RTC_TR_HU_POS;
pub const RTC_TR_HU_1: u32 = 0x2u32 << RTC_TR_HU_POS;
pub const RTC_TR_HU_2: u32 = 0x4u32 << RTC_TR_HU_POS;
pub const RTC_TR_HU_3: u32 = 0x8u32 << RTC_TR_HU_POS;
pub const RTC_TR_MNT_POS: u32 = 12u32;
pub const RTC_TR_MNT_MSK: u32 = 0x7u32 << RTC_TR_MNT_POS;
pub const RTC_TR_MNT: u32 = RTC_TR_MNT_MSK;
pub const RTC_TR_MNT_0: u32 = 0x1u32 << RTC_TR_MNT_POS;
pub const RTC_TR_MNT_1: u32 = 0x2u32 << RTC_TR_MNT_POS;
pub const RTC_TR_MNT_2: u32 = 0x4u32 << RTC_TR_MNT_POS;
pub const RTC_TR_MNU_POS: u32 = 8u32;
pub const RTC_TR_MNU_MSK: u32 = 0xFu32 << RTC_TR_MNU_POS;
pub const RTC_TR_MNU: u32 = RTC_TR_MNU_MSK;
pub const RTC_TR_MNU_0: u32 = 0x1u32 << RTC_TR_MNU_POS;
pub const RTC_TR_MNU_1: u32 = 0x2u32 << RTC_TR_MNU_POS;
pub const RTC_TR_MNU_2: u32 = 0x4u32 << RTC_TR_MNU_POS;
pub const RTC_TR_MNU_3: u32 = 0x8u32 << RTC_TR_MNU_POS;
pub const RTC_TR_ST_POS: u32 = 4u32;
pub const RTC_TR_ST_MSK: u32 = 0x7u32 << RTC_TR_ST_POS;
pub const RTC_TR_ST: u32 = RTC_TR_ST_MSK;
pub const RTC_TR_ST_0: u32 = 0x1u32 << RTC_TR_ST_POS;
pub const RTC_TR_ST_1: u32 = 0x2u32 << RTC_TR_ST_POS;
pub const RTC_TR_ST_2: u32 = 0x4u32 << RTC_TR_ST_POS;
pub const RTC_TR_SU_POS: u32 = 0u32;
pub const RTC_TR_SU_MSK: u32 = 0xFu32 << RTC_TR_SU_POS;
pub const RTC_TR_SU: u32 = RTC_TR_SU_MSK;
pub const RTC_TR_SU_0: u32 = 0x1u32 << RTC_TR_SU_POS;
pub const RTC_TR_SU_1: u32 = 0x2u32 << RTC_TR_SU_POS;
pub const RTC_TR_SU_2: u32 = 0x4u32 << RTC_TR_SU_POS;
pub const RTC_TR_SU_3: u32 = 0x8u32 << RTC_TR_SU_POS;
pub const RTC_DR_YT_POS: u32 = 20u32;
pub const RTC_DR_YT_MSK: u32 = 0xFu32 << RTC_DR_YT_POS;
pub const RTC_DR_YT: u32 = RTC_DR_YT_MSK;
pub const RTC_DR_YT_0: u32 = 0x1u32 << RTC_DR_YT_POS;
pub const RTC_DR_YT_1: u32 = 0x2u32 << RTC_DR_YT_POS;
pub const RTC_DR_YT_2: u32 = 0x4u32 << RTC_DR_YT_POS;
pub const RTC_DR_YT_3: u32 = 0x8u32 << RTC_DR_YT_POS;
pub const RTC_DR_YU_POS: u32 = 16u32;
pub const RTC_DR_YU_MSK: u32 = 0xFu32 << RTC_DR_YU_POS;
pub const RTC_DR_YU: u32 = RTC_DR_YU_MSK;
pub const RTC_DR_YU_0: u32 = 0x1u32 << RTC_DR_YU_POS;
pub const RTC_DR_YU_1: u32 = 0x2u32 << RTC_DR_YU_POS;
pub const RTC_DR_YU_2: u32 = 0x4u32 << RTC_DR_YU_POS;
pub const RTC_DR_YU_3: u32 = 0x8u32 << RTC_DR_YU_POS;
pub const RTC_DR_WDU_POS: u32 = 13u32;
pub const RTC_DR_WDU_MSK: u32 = 0x7u32 << RTC_DR_WDU_POS;
pub const RTC_DR_WDU: u32 = RTC_DR_WDU_MSK;
pub const RTC_DR_WDU_0: u32 = 0x1u32 << RTC_DR_WDU_POS;
pub const RTC_DR_WDU_1: u32 = 0x2u32 << RTC_DR_WDU_POS;
pub const RTC_DR_WDU_2: u32 = 0x4u32 << RTC_DR_WDU_POS;
pub const RTC_DR_MT_POS: u32 = 12u32;
pub const RTC_DR_MT_MSK: u32 = 0x1u32 << RTC_DR_MT_POS;
pub const RTC_DR_MT: u32 = RTC_DR_MT_MSK;
pub const RTC_DR_MU_POS: u32 = 8u32;
pub const RTC_DR_MU_MSK: u32 = 0xFu32 << RTC_DR_MU_POS;
pub const RTC_DR_MU: u32 = RTC_DR_MU_MSK;
pub const RTC_DR_MU_0: u32 = 0x1u32 << RTC_DR_MU_POS;
pub const RTC_DR_MU_1: u32 = 0x2u32 << RTC_DR_MU_POS;
pub const RTC_DR_MU_2: u32 = 0x4u32 << RTC_DR_MU_POS;
pub const RTC_DR_MU_3: u32 = 0x8u32 << RTC_DR_MU_POS;
pub const RTC_DR_DT_POS: u32 = 4u32;
pub const RTC_DR_DT_MSK: u32 = 0x3u32 << RTC_DR_DT_POS;
pub const RTC_DR_DT: u32 = RTC_DR_DT_MSK;
pub const RTC_DR_DT_0: u32 = 0x1u32 << RTC_DR_DT_POS;
pub const RTC_DR_DT_1: u32 = 0x2u32 << RTC_DR_DT_POS;
pub const RTC_DR_DU_POS: u32 = 0u32;
pub const RTC_DR_DU_MSK: u32 = 0xFu32 << RTC_DR_DU_POS;
pub const RTC_DR_DU: u32 = RTC_DR_DU_MSK;
pub const RTC_DR_DU_0: u32 = 0x1u32 << RTC_DR_DU_POS;
pub const RTC_DR_DU_1: u32 = 0x2u32 << RTC_DR_DU_POS;
pub const RTC_DR_DU_2: u32 = 0x4u32 << RTC_DR_DU_POS;
pub const RTC_DR_DU_3: u32 = 0x8u32 << RTC_DR_DU_POS;
pub const RTC_CR_COE_POS: u32 = 23u32;
pub const RTC_CR_COE_MSK: u32 = 0x1u32 << RTC_CR_COE_POS;
pub const RTC_CR_COE: u32 = RTC_CR_COE_MSK;
pub const RTC_CR_OSEL_POS: u32 = 21u32;
pub const RTC_CR_OSEL_MSK: u32 = 0x3u32 << RTC_CR_OSEL_POS;
pub const RTC_CR_OSEL: u32 = RTC_CR_OSEL_MSK;
pub const RTC_CR_OSEL_0: u32 = 0x1u32 << RTC_CR_OSEL_POS;
pub const RTC_CR_OSEL_1: u32 = 0x2u32 << RTC_CR_OSEL_POS;
pub const RTC_CR_POL_POS: u32 = 20u32;
pub const RTC_CR_POL_MSK: u32 = 0x1u32 << RTC_CR_POL_POS;
pub const RTC_CR_POL: u32 = RTC_CR_POL_MSK;
pub const RTC_CR_COSEL_POS: u32 = 19u32;
pub const RTC_CR_COSEL_MSK: u32 = 0x1u32 << RTC_CR_COSEL_POS;
pub const RTC_CR_COSEL: u32 = RTC_CR_COSEL_MSK;
pub const RTC_CR_BKP_POS: u32 = 18u32;
pub const RTC_CR_BKP_MSK: u32 = 0x1u32 << RTC_CR_BKP_POS;
pub const RTC_CR_BKP: u32 = RTC_CR_BKP_MSK;
pub const RTC_CR_SUB1H_POS: u32 = 17u32;
pub const RTC_CR_SUB1H_MSK: u32 = 0x1u32 << RTC_CR_SUB1H_POS;
pub const RTC_CR_SUB1H: u32 = RTC_CR_SUB1H_MSK;
pub const RTC_CR_ADD1H_POS: u32 = 16u32;
pub const RTC_CR_ADD1H_MSK: u32 = 0x1u32 << RTC_CR_ADD1H_POS;
pub const RTC_CR_ADD1H: u32 = RTC_CR_ADD1H_MSK;
pub const RTC_CR_TSIE_POS: u32 = 15u32;
pub const RTC_CR_TSIE_MSK: u32 = 0x1u32 << RTC_CR_TSIE_POS;
pub const RTC_CR_TSIE: u32 = RTC_CR_TSIE_MSK;
pub const RTC_CR_ALRAIE_POS: u32 = 12u32;
pub const RTC_CR_ALRAIE_MSK: u32 = 0x1u32 << RTC_CR_ALRAIE_POS;
pub const RTC_CR_ALRAIE: u32 = RTC_CR_ALRAIE_MSK;
pub const RTC_CR_TSE_POS: u32 = 11u32;
pub const RTC_CR_TSE_MSK: u32 = 0x1u32 << RTC_CR_TSE_POS;
pub const RTC_CR_TSE: u32 = RTC_CR_TSE_MSK;
pub const RTC_CR_ALRAE_POS: u32 = 8u32;
pub const RTC_CR_ALRAE_MSK: u32 = 0x1u32 << RTC_CR_ALRAE_POS;
pub const RTC_CR_ALRAE: u32 = RTC_CR_ALRAE_MSK;
pub const RTC_CR_FMT_POS: u32 = 6u32;
pub const RTC_CR_FMT_MSK: u32 = 0x1u32 << RTC_CR_FMT_POS;
pub const RTC_CR_FMT: u32 = RTC_CR_FMT_MSK;
pub const RTC_CR_BYPSHAD_POS: u32 = 5u32;
pub const RTC_CR_BYPSHAD_MSK: u32 = 0x1u32 << RTC_CR_BYPSHAD_POS;
pub const RTC_CR_BYPSHAD: u32 = RTC_CR_BYPSHAD_MSK;
pub const RTC_CR_REFCKON_POS: u32 = 4u32;
pub const RTC_CR_REFCKON_MSK: u32 = 0x1u32 << RTC_CR_REFCKON_POS;
pub const RTC_CR_REFCKON: u32 = RTC_CR_REFCKON_MSK;
pub const RTC_CR_TSEDGE_POS: u32 = 3u32;
pub const RTC_CR_TSEDGE_MSK: u32 = 0x1u32 << RTC_CR_TSEDGE_POS;
pub const RTC_CR_TSEDGE: u32 = RTC_CR_TSEDGE_MSK;
pub const RTC_CR_BCK_POS: u32 = RTC_CR_BKP_POS;
pub const RTC_CR_BCK_MSK: u32 = RTC_CR_BKP_MSK;
pub const RTC_CR_BCK: u32 = RTC_CR_BKP;
pub const RTC_ISR_RECALPF_POS: u32 = 16u32;
pub const RTC_ISR_RECALPF_MSK: u32 = 0x1u32 << RTC_ISR_RECALPF_POS;
pub const RTC_ISR_RECALPF: u32 = RTC_ISR_RECALPF_MSK;
pub const RTC_ISR_TAMP2F_POS: u32 = 14u32;
pub const RTC_ISR_TAMP2F_MSK: u32 = 0x1u32 << RTC_ISR_TAMP2F_POS;
pub const RTC_ISR_TAMP2F: u32 = RTC_ISR_TAMP2F_MSK;
pub const RTC_ISR_TAMP1F_POS: u32 = 13u32;
pub const RTC_ISR_TAMP1F_MSK: u32 = 0x1u32 << RTC_ISR_TAMP1F_POS;
pub const RTC_ISR_TAMP1F: u32 = RTC_ISR_TAMP1F_MSK;
pub const RTC_ISR_TSOVF_POS: u32 = 12u32;
pub const RTC_ISR_TSOVF_MSK: u32 = 0x1u32 << RTC_ISR_TSOVF_POS;
pub const RTC_ISR_TSOVF: u32 = RTC_ISR_TSOVF_MSK;
pub const RTC_ISR_TSF_POS: u32 = 11u32;
pub const RTC_ISR_TSF_MSK: u32 = 0x1u32 << RTC_ISR_TSF_POS;
pub const RTC_ISR_TSF: u32 = RTC_ISR_TSF_MSK;
pub const RTC_ISR_ALRAF_POS: u32 = 8u32;
pub const RTC_ISR_ALRAF_MSK: u32 = 0x1u32 << RTC_ISR_ALRAF_POS;
pub const RTC_ISR_ALRAF: u32 = RTC_ISR_ALRAF_MSK;
pub const RTC_ISR_INIT_POS: u32 = 7u32;
pub const RTC_ISR_INIT_MSK: u32 = 0x1u32 << RTC_ISR_INIT_POS;
pub const RTC_ISR_INIT: u32 = RTC_ISR_INIT_MSK;
pub const RTC_ISR_INITF_POS: u32 = 6u32;
pub const RTC_ISR_INITF_MSK: u32 = 0x1u32 << RTC_ISR_INITF_POS;
pub const RTC_ISR_INITF: u32 = RTC_ISR_INITF_MSK;
pub const RTC_ISR_RSF_POS: u32 = 5u32;
pub const RTC_ISR_RSF_MSK: u32 = 0x1u32 << RTC_ISR_RSF_POS;
pub const RTC_ISR_RSF: u32 = RTC_ISR_RSF_MSK;
pub const RTC_ISR_INITS_POS: u32 = 4u32;
pub const RTC_ISR_INITS_MSK: u32 = 0x1u32 << RTC_ISR_INITS_POS;
pub const RTC_ISR_INITS: u32 = RTC_ISR_INITS_MSK;
pub const RTC_ISR_SHPF_POS: u32 = 3u32;
pub const RTC_ISR_SHPF_MSK: u32 = 0x1u32 << RTC_ISR_SHPF_POS;
pub const RTC_ISR_SHPF: u32 = RTC_ISR_SHPF_MSK;
pub const RTC_ISR_ALRAWF_POS: u32 = 0u32;
pub const RTC_ISR_ALRAWF_MSK: u32 = 0x1u32 << RTC_ISR_ALRAWF_POS;
pub const RTC_ISR_ALRAWF: u32 = RTC_ISR_ALRAWF_MSK;
pub const RTC_PRER_PREDIV_A_POS: u32 = 16u32;
pub const RTC_PRER_PREDIV_A_MSK: u32 = 0x7Fu32 << RTC_PRER_PREDIV_A_POS;
pub const RTC_PRER_PREDIV_A: u32 = RTC_PRER_PREDIV_A_MSK;
pub const RTC_PRER_PREDIV_S_POS: u32 = 0u32;
pub const RTC_PRER_PREDIV_S_MSK: u32 = 0x7FFFu32 << RTC_PRER_PREDIV_S_POS;
pub const RTC_PRER_PREDIV_S: u32 = RTC_PRER_PREDIV_S_MSK;
pub const RTC_ALRMAR_MSK4_POS: u32 = 31u32;
pub const RTC_ALRMAR_MSK4_MSK: u32 = 0x1u32 << RTC_ALRMAR_MSK4_POS;
pub const RTC_ALRMAR_MSK4: u32 = RTC_ALRMAR_MSK4_MSK;
pub const RTC_ALRMAR_WDSEL_POS: u32 = 30u32;
pub const RTC_ALRMAR_WDSEL_MSK: u32 = 0x1u32 << RTC_ALRMAR_WDSEL_POS;
pub const RTC_ALRMAR_WDSEL: u32 = RTC_ALRMAR_WDSEL_MSK;
pub const RTC_ALRMAR_DT_POS: u32 = 28u32;
pub const RTC_ALRMAR_DT_MSK: u32 = 0x3u32 << RTC_ALRMAR_DT_POS;
pub const RTC_ALRMAR_DT: u32 = RTC_ALRMAR_DT_MSK;
pub const RTC_ALRMAR_DT_0: u32 = 0x1u32 << RTC_ALRMAR_DT_POS;
pub const RTC_ALRMAR_DT_1: u32 = 0x2u32 << RTC_ALRMAR_DT_POS;
pub const RTC_ALRMAR_DU_POS: u32 = 24u32;
pub const RTC_ALRMAR_DU_MSK: u32 = 0xFu32 << RTC_ALRMAR_DU_POS;
pub const RTC_ALRMAR_DU: u32 = RTC_ALRMAR_DU_MSK;
pub const RTC_ALRMAR_DU_0: u32 = 0x1u32 << RTC_ALRMAR_DU_POS;
pub const RTC_ALRMAR_DU_1: u32 = 0x2u32 << RTC_ALRMAR_DU_POS;
pub const RTC_ALRMAR_DU_2: u32 = 0x4u32 << RTC_ALRMAR_DU_POS;
pub const RTC_ALRMAR_DU_3: u32 = 0x8u32 << RTC_ALRMAR_DU_POS;
pub const RTC_ALRMAR_MSK3_POS: u32 = 23u32;
pub const RTC_ALRMAR_MSK3_MSK: u32 = 0x1u32 << RTC_ALRMAR_MSK3_POS;
pub const RTC_ALRMAR_MSK3: u32 = RTC_ALRMAR_MSK3_MSK;
pub const RTC_ALRMAR_PM_POS: u32 = 22u32;
pub const RTC_ALRMAR_PM_MSK: u32 = 0x1u32 << RTC_ALRMAR_PM_POS;
pub const RTC_ALRMAR_PM: u32 = RTC_ALRMAR_PM_MSK;
pub const RTC_ALRMAR_HT_POS: u32 = 20u32;
pub const RTC_ALRMAR_HT_MSK: u32 = 0x3u32 << RTC_ALRMAR_HT_POS;
pub const RTC_ALRMAR_HT: u32 = RTC_ALRMAR_HT_MSK;
pub const RTC_ALRMAR_HT_0: u32 = 0x1u32 << RTC_ALRMAR_HT_POS;
pub const RTC_ALRMAR_HT_1: u32 = 0x2u32 << RTC_ALRMAR_HT_POS;
pub const RTC_ALRMAR_HU_POS: u32 = 16u32;
pub const RTC_ALRMAR_HU_MSK: u32 = 0xFu32 << RTC_ALRMAR_HU_POS;
pub const RTC_ALRMAR_HU: u32 = RTC_ALRMAR_HU_MSK;
pub const RTC_ALRMAR_HU_0: u32 = 0x1u32 << RTC_ALRMAR_HU_POS;
pub const RTC_ALRMAR_HU_1: u32 = 0x2u32 << RTC_ALRMAR_HU_POS;
pub const RTC_ALRMAR_HU_2: u32 = 0x4u32 << RTC_ALRMAR_HU_POS;
pub const RTC_ALRMAR_HU_3: u32 = 0x8u32 << RTC_ALRMAR_HU_POS;
pub const RTC_ALRMAR_MSK2_POS: u32 = 15u32;
pub const RTC_ALRMAR_MSK2_MSK: u32 = 0x1u32 << RTC_ALRMAR_MSK2_POS;
pub const RTC_ALRMAR_MSK2: u32 = RTC_ALRMAR_MSK2_MSK;
pub const RTC_ALRMAR_MNT_POS: u32 = 12u32;
pub const RTC_ALRMAR_MNT_MSK: u32 = 0x7u32 << RTC_ALRMAR_MNT_POS;
pub const RTC_ALRMAR_MNT: u32 = RTC_ALRMAR_MNT_MSK;
pub const RTC_ALRMAR_MNT_0: u32 = 0x1u32 << RTC_ALRMAR_MNT_POS;
pub const RTC_ALRMAR_MNT_1: u32 = 0x2u32 << RTC_ALRMAR_MNT_POS;
pub const RTC_ALRMAR_MNT_2: u32 = 0x4u32 << RTC_ALRMAR_MNT_POS;
pub const RTC_ALRMAR_MNU_POS: u32 = 8u32;
pub const RTC_ALRMAR_MNU_MSK: u32 = 0xFu32 << RTC_ALRMAR_MNU_POS;
pub const RTC_ALRMAR_MNU: u32 = RTC_ALRMAR_MNU_MSK;
pub const RTC_ALRMAR_MNU_0: u32 = 0x1u32 << RTC_ALRMAR_MNU_POS;
pub const RTC_ALRMAR_MNU_1: u32 = 0x2u32 << RTC_ALRMAR_MNU_POS;
pub const RTC_ALRMAR_MNU_2: u32 = 0x4u32 << RTC_ALRMAR_MNU_POS;
pub const RTC_ALRMAR_MNU_3: u32 = 0x8u32 << RTC_ALRMAR_MNU_POS;
pub const RTC_ALRMAR_MSK1_POS: u32 = 7u32;
pub const RTC_ALRMAR_MSK1_MSK: u32 = 0x1u32 << RTC_ALRMAR_MSK1_POS;
pub const RTC_ALRMAR_MSK1: u32 = RTC_ALRMAR_MSK1_MSK;
pub const RTC_ALRMAR_ST_POS: u32 = 4u32;
pub const RTC_ALRMAR_ST_MSK: u32 = 0x7u32 << RTC_ALRMAR_ST_POS;
pub const RTC_ALRMAR_ST: u32 = RTC_ALRMAR_ST_MSK;
pub const RTC_ALRMAR_ST_0: u32 = 0x1u32 << RTC_ALRMAR_ST_POS;
pub const RTC_ALRMAR_ST_1: u32 = 0x2u32 << RTC_ALRMAR_ST_POS;
pub const RTC_ALRMAR_ST_2: u32 = 0x4u32 << RTC_ALRMAR_ST_POS;
pub const RTC_ALRMAR_SU_POS: u32 = 0u32;
pub const RTC_ALRMAR_SU_MSK: u32 = 0xFu32 << RTC_ALRMAR_SU_POS;
pub const RTC_ALRMAR_SU: u32 = RTC_ALRMAR_SU_MSK;
pub const RTC_ALRMAR_SU_0: u32 = 0x1u32 << RTC_ALRMAR_SU_POS;
pub const RTC_ALRMAR_SU_1: u32 = 0x2u32 << RTC_ALRMAR_SU_POS;
pub const RTC_ALRMAR_SU_2: u32 = 0x4u32 << RTC_ALRMAR_SU_POS;
pub const RTC_ALRMAR_SU_3: u32 = 0x8u32 << RTC_ALRMAR_SU_POS;
pub const RTC_WPR_KEY_POS: u32 = 0u32;
pub const RTC_WPR_KEY_MSK: u32 = 0xFFu32 << RTC_WPR_KEY_POS;
pub const RTC_WPR_KEY: u32 = RTC_WPR_KEY_MSK;
pub const RTC_SSR_SS_POS: u32 = 0u32;
pub const RTC_SSR_SS_MSK: u32 = 0xFFFFu32 << RTC_SSR_SS_POS;
pub const RTC_SSR_SS: u32 = RTC_SSR_SS_MSK;
pub const RTC_SHIFTR_SUBFS_POS: u32 = 0u32;
pub const RTC_SHIFTR_SUBFS_MSK: u32 = 0x7FFFu32 << RTC_SHIFTR_SUBFS_POS;
pub const RTC_SHIFTR_SUBFS: u32 = RTC_SHIFTR_SUBFS_MSK;
pub const RTC_SHIFTR_ADD1S_POS: u32 = 31u32;
pub const RTC_SHIFTR_ADD1S_MSK: u32 = 0x1u32 << RTC_SHIFTR_ADD1S_POS;
pub const RTC_SHIFTR_ADD1S: u32 = RTC_SHIFTR_ADD1S_MSK;
pub const RTC_TSTR_PM_POS: u32 = 22u32;
pub const RTC_TSTR_PM_MSK: u32 = 0x1u32 << RTC_TSTR_PM_POS;
pub const RTC_TSTR_PM: u32 = RTC_TSTR_PM_MSK;
pub const RTC_TSTR_HT_POS: u32 = 20u32;
pub const RTC_TSTR_HT_MSK: u32 = 0x3u32 << RTC_TSTR_HT_POS;
pub const RTC_TSTR_HT: u32 = RTC_TSTR_HT_MSK;
pub const RTC_TSTR_HT_0: u32 = 0x1u32 << RTC_TSTR_HT_POS;
pub const RTC_TSTR_HT_1: u32 = 0x2u32 << RTC_TSTR_HT_POS;
pub const RTC_TSTR_HU_POS: u32 = 16u32;
pub const RTC_TSTR_HU_MSK: u32 = 0xFu32 << RTC_TSTR_HU_POS;
pub const RTC_TSTR_HU: u32 = RTC_TSTR_HU_MSK;
pub const RTC_TSTR_HU_0: u32 = 0x1u32 << RTC_TSTR_HU_POS;
pub const RTC_TSTR_HU_1: u32 = 0x2u32 << RTC_TSTR_HU_POS;
pub const RTC_TSTR_HU_2: u32 = 0x4u32 << RTC_TSTR_HU_POS;
pub const RTC_TSTR_HU_3: u32 = 0x8u32 << RTC_TSTR_HU_POS;
pub const RTC_TSTR_MNT_POS: u32 = 12u32;
pub const RTC_TSTR_MNT_MSK: u32 = 0x7u32 << RTC_TSTR_MNT_POS;
pub const RTC_TSTR_MNT: u32 = RTC_TSTR_MNT_MSK;
pub const RTC_TSTR_MNT_0: u32 = 0x1u32 << RTC_TSTR_MNT_POS;
pub const RTC_TSTR_MNT_1: u32 = 0x2u32 << RTC_TSTR_MNT_POS;
pub const RTC_TSTR_MNT_2: u32 = 0x4u32 << RTC_TSTR_MNT_POS;
pub const RTC_TSTR_MNU_POS: u32 = 8u32;
pub const RTC_TSTR_MNU_MSK: u32 = 0xFu32 << RTC_TSTR_MNU_POS;
pub const RTC_TSTR_MNU: u32 = RTC_TSTR_MNU_MSK;
pub const RTC_TSTR_MNU_0: u32 = 0x1u32 << RTC_TSTR_MNU_POS;
pub const RTC_TSTR_MNU_1: u32 = 0x2u32 << RTC_TSTR_MNU_POS;
pub const RTC_TSTR_MNU_2: u32 = 0x4u32 << RTC_TSTR_MNU_POS;
pub const RTC_TSTR_MNU_3: u32 = 0x8u32 << RTC_TSTR_MNU_POS;
pub const RTC_TSTR_ST_POS: u32 = 4u32;
pub const RTC_TSTR_ST_MSK: u32 = 0x7u32 << RTC_TSTR_ST_POS;
pub const RTC_TSTR_ST: u32 = RTC_TSTR_ST_MSK;
pub const RTC_TSTR_ST_0: u32 = 0x1u32 << RTC_TSTR_ST_POS;
pub const RTC_TSTR_ST_1: u32 = 0x2u32 << RTC_TSTR_ST_POS;
pub const RTC_TSTR_ST_2: u32 = 0x4u32 << RTC_TSTR_ST_POS;
pub const RTC_TSTR_SU_POS: u32 = 0u32;
pub const RTC_TSTR_SU_MSK: u32 = 0xFu32 << RTC_TSTR_SU_POS;
pub const RTC_TSTR_SU: u32 = RTC_TSTR_SU_MSK;
pub const RTC_TSTR_SU_0: u32 = 0x1u32 << RTC_TSTR_SU_POS;
pub const RTC_TSTR_SU_1: u32 = 0x2u32 << RTC_TSTR_SU_POS;
pub const RTC_TSTR_SU_2: u32 = 0x4u32 << RTC_TSTR_SU_POS;
pub const RTC_TSTR_SU_3: u32 = 0x8u32 << RTC_TSTR_SU_POS;
pub const RTC_TSDR_WDU_POS: u32 = 13u32;
pub const RTC_TSDR_WDU_MSK: u32 = 0x7u32 << RTC_TSDR_WDU_POS;
pub const RTC_TSDR_WDU: u32 = RTC_TSDR_WDU_MSK;
pub const RTC_TSDR_WDU_0: u32 = 0x1u32 << RTC_TSDR_WDU_POS;
pub const RTC_TSDR_WDU_1: u32 = 0x2u32 << RTC_TSDR_WDU_POS;
pub const RTC_TSDR_WDU_2: u32 = 0x4u32 << RTC_TSDR_WDU_POS;
pub const RTC_TSDR_MT_POS: u32 = 12u32;
pub const RTC_TSDR_MT_MSK: u32 = 0x1u32 << RTC_TSDR_MT_POS;
pub const RTC_TSDR_MT: u32 = RTC_TSDR_MT_MSK;
pub const RTC_TSDR_MU_POS: u32 = 8u32;
pub const RTC_TSDR_MU_MSK: u32 = 0xFu32 << RTC_TSDR_MU_POS;
pub const RTC_TSDR_MU: u32 = RTC_TSDR_MU_MSK;
pub const RTC_TSDR_MU_0: u32 = 0x1u32 << RTC_TSDR_MU_POS;
pub const RTC_TSDR_MU_1: u32 = 0x2u32 << RTC_TSDR_MU_POS;
pub const RTC_TSDR_MU_2: u32 = 0x4u32 << RTC_TSDR_MU_POS;
pub const RTC_TSDR_MU_3: u32 = 0x8u32 << RTC_TSDR_MU_POS;
pub const RTC_TSDR_DT_POS: u32 = 4u32;
pub const RTC_TSDR_DT_MSK: u32 = 0x3u32 << RTC_TSDR_DT_POS;
pub const RTC_TSDR_DT: u32 = RTC_TSDR_DT_MSK;
pub const RTC_TSDR_DT_0: u32 = 0x1u32 << RTC_TSDR_DT_POS;
pub const RTC_TSDR_DT_1: u32 = 0x2u32 << RTC_TSDR_DT_POS;
pub const RTC_TSDR_DU_POS: u32 = 0u32;
pub const RTC_TSDR_DU_MSK: u32 = 0xFu32 << RTC_TSDR_DU_POS;
pub const RTC_TSDR_DU: u32 = RTC_TSDR_DU_MSK;
pub const RTC_TSDR_DU_0: u32 = 0x1u32 << RTC_TSDR_DU_POS;
pub const RTC_TSDR_DU_1: u32 = 0x2u32 << RTC_TSDR_DU_POS;
pub const RTC_TSDR_DU_2: u32 = 0x4u32 << RTC_TSDR_DU_POS;
pub const RTC_TSDR_DU_3: u32 = 0x8u32 << RTC_TSDR_DU_POS;
pub const RTC_TSSSR_SS_POS: u32 = 0u32;
pub const RTC_TSSSR_SS_MSK: u32 = 0xFFFFu32 << RTC_TSSSR_SS_POS;
pub const RTC_TSSSR_SS: u32 = RTC_TSSSR_SS_MSK;
pub const RTC_CALR_CALP_POS: u32 = 15u32;
pub const RTC_CALR_CALP_MSK: u32 = 0x1u32 << RTC_CALR_CALP_POS;
pub const RTC_CALR_CALP: u32 = RTC_CALR_CALP_MSK;
pub const RTC_CALR_CALW8_POS: u32 = 14u32;
pub const RTC_CALR_CALW8_MSK: u32 = 0x1u32 << RTC_CALR_CALW8_POS;
pub const RTC_CALR_CALW8: u32 = RTC_CALR_CALW8_MSK;
pub const RTC_CALR_CALW16_POS: u32 = 13u32;
pub const RTC_CALR_CALW16_MSK: u32 = 0x1u32 << RTC_CALR_CALW16_POS;
pub const RTC_CALR_CALW16: u32 = RTC_CALR_CALW16_MSK;
pub const RTC_CALR_CALM_POS: u32 = 0u32;
pub const RTC_CALR_CALM_MSK: u32 = 0x1FFu32 << RTC_CALR_CALM_POS;
pub const RTC_CALR_CALM: u32 = RTC_CALR_CALM_MSK;
pub const RTC_CALR_CALM_0: u32 = 0x001u32 << RTC_CALR_CALM_POS;
pub const RTC_CALR_CALM_1: u32 = 0x002u32 << RTC_CALR_CALM_POS;
pub const RTC_CALR_CALM_2: u32 = 0x004u32 << RTC_CALR_CALM_POS;
pub const RTC_CALR_CALM_3: u32 = 0x008u32 << RTC_CALR_CALM_POS;
pub const RTC_CALR_CALM_4: u32 = 0x010u32 << RTC_CALR_CALM_POS;
pub const RTC_CALR_CALM_5: u32 = 0x020u32 << RTC_CALR_CALM_POS;
pub const RTC_CALR_CALM_6: u32 = 0x040u32 << RTC_CALR_CALM_POS;
pub const RTC_CALR_CALM_7: u32 = 0x080u32 << RTC_CALR_CALM_POS;
pub const RTC_CALR_CALM_8: u32 = 0x100u32 << RTC_CALR_CALM_POS;
pub const RTC_TAFCR_PC15MODE_POS: u32 = 23u32;
pub const RTC_TAFCR_PC15MODE_MSK: u32 = 0x1u32 << RTC_TAFCR_PC15MODE_POS;
pub const RTC_TAFCR_PC15MODE: u32 = RTC_TAFCR_PC15MODE_MSK;
pub const RTC_TAFCR_PC15VALUE_POS: u32 = 22u32;
pub const RTC_TAFCR_PC15VALUE_MSK: u32 = 0x1u32 << RTC_TAFCR_PC15VALUE_POS;
pub const RTC_TAFCR_PC15VALUE: u32 = RTC_TAFCR_PC15VALUE_MSK;
pub const RTC_TAFCR_PC14MODE_POS: u32 = 21u32;
pub const RTC_TAFCR_PC14MODE_MSK: u32 = 0x1u32 << RTC_TAFCR_PC14MODE_POS;
pub const RTC_TAFCR_PC14MODE: u32 = RTC_TAFCR_PC14MODE_MSK;
pub const RTC_TAFCR_PC14VALUE_POS: u32 = 20u32;
pub const RTC_TAFCR_PC14VALUE_MSK: u32 = 0x1u32 << RTC_TAFCR_PC14VALUE_POS;
pub const RTC_TAFCR_PC14VALUE: u32 = RTC_TAFCR_PC14VALUE_MSK;
pub const RTC_TAFCR_PC13MODE_POS: u32 = 19u32;
pub const RTC_TAFCR_PC13MODE_MSK: u32 = 0x1u32 << RTC_TAFCR_PC13MODE_POS;
pub const RTC_TAFCR_PC13MODE: u32 = RTC_TAFCR_PC13MODE_MSK;
pub const RTC_TAFCR_PC13VALUE_POS: u32 = 18u32;
pub const RTC_TAFCR_PC13VALUE_MSK: u32 = 0x1u32 << RTC_TAFCR_PC13VALUE_POS;
pub const RTC_TAFCR_PC13VALUE: u32 = RTC_TAFCR_PC13VALUE_MSK;
pub const RTC_TAFCR_TAMPPRCH_POS: u32 = 13u32;
pub const RTC_TAFCR_TAMPPRCH_MSK: u32 = 0x3u32 << RTC_TAFCR_TAMPPRCH_POS;
pub const RTC_TAFCR_TAMPPRCH: u32 = RTC_TAFCR_TAMPPRCH_MSK;
pub const RTC_TAFCR_TAMPPRCH_0: u32 = 0x1u32 << RTC_TAFCR_TAMPPRCH_POS;
pub const RTC_TAFCR_TAMPPRCH_1: u32 = 0x2u32 << RTC_TAFCR_TAMPPRCH_POS;
pub const RTC_TAFCR_TAMPFLT_POS: u32 = 11u32;
pub const RTC_TAFCR_TAMPFLT_MSK: u32 = 0x3u32 << RTC_TAFCR_TAMPFLT_POS;
pub const RTC_TAFCR_TAMPFLT: u32 = RTC_TAFCR_TAMPFLT_MSK;
pub const RTC_TAFCR_TAMPFLT_0: u32 = 0x1u32 << RTC_TAFCR_TAMPFLT_POS;
pub const RTC_TAFCR_TAMPFLT_1: u32 = 0x2u32 << RTC_TAFCR_TAMPFLT_POS;
pub const RTC_TAFCR_TAMPFREQ_POS: u32 = 8u32;
pub const RTC_TAFCR_TAMPFREQ_MSK: u32 = 0x7u32 << RTC_TAFCR_TAMPFREQ_POS;
pub const RTC_TAFCR_TAMPFREQ: u32 = RTC_TAFCR_TAMPFREQ_MSK;
pub const RTC_TAFCR_TAMPFREQ_0: u32 = 0x1u32 << RTC_TAFCR_TAMPFREQ_POS;
pub const RTC_TAFCR_TAMPFREQ_1: u32 = 0x2u32 << RTC_TAFCR_TAMPFREQ_POS;
pub const RTC_TAFCR_TAMPFREQ_2: u32 = 0x4u32 << RTC_TAFCR_TAMPFREQ_POS;
pub const RTC_TAFCR_TAMPTS_POS: u32 = 7u32;
pub const RTC_TAFCR_TAMPTS_MSK: u32 = 0x1u32 << RTC_TAFCR_TAMPTS_POS;
pub const RTC_TAFCR_TAMPTS: u32 = RTC_TAFCR_TAMPTS_MSK;
pub const RTC_TAFCR_TAMP2TRG_POS: u32 = 4u32;
pub const RTC_TAFCR_TAMP2TRG_MSK: u32 = 0x1u32 << RTC_TAFCR_TAMP2TRG_POS;
pub const RTC_TAFCR_TAMP2TRG: u32 = RTC_TAFCR_TAMP2TRG_MSK;
pub const RTC_TAFCR_TAMP2E_POS: u32 = 3u32;
pub const RTC_TAFCR_TAMP2E_MSK: u32 = 0x1u32 << RTC_TAFCR_TAMP2E_POS;
pub const RTC_TAFCR_TAMP2E: u32 = RTC_TAFCR_TAMP2E_MSK;
pub const RTC_TAFCR_TAMPIE_POS: u32 = 2u32;
pub const RTC_TAFCR_TAMPIE_MSK: u32 = 0x1u32 << RTC_TAFCR_TAMPIE_POS;
pub const RTC_TAFCR_TAMPIE: u32 = RTC_TAFCR_TAMPIE_MSK;
pub const RTC_TAFCR_TAMP1TRG_POS: u32 = 1u32;
pub const RTC_TAFCR_TAMP1TRG_MSK: u32 = 0x1u32 << RTC_TAFCR_TAMP1TRG_POS;
pub const RTC_TAFCR_TAMP1TRG: u32 = RTC_TAFCR_TAMP1TRG_MSK;
pub const RTC_TAFCR_TAMP1E_POS: u32 = 0u32;
pub const RTC_TAFCR_TAMP1E_MSK: u32 = 0x1u32 << RTC_TAFCR_TAMP1E_POS;
pub const RTC_TAFCR_TAMP1E: u32 = RTC_TAFCR_TAMP1E_MSK;
pub const RTC_TAFCR_ALARMOUTTYPE: u32 = RTC_TAFCR_PC13VALUE;
pub const RTC_ALRMASSR_MASKSS_POS: u32 = 24u32;
pub const RTC_ALRMASSR_MASKSS_MSK: u32 = 0xFu32 << RTC_ALRMASSR_MASKSS_POS;
pub const RTC_ALRMASSR_MASKSS: u32 = RTC_ALRMASSR_MASKSS_MSK;
pub const RTC_ALRMASSR_MASKSS_0: u32 = 0x1u32 << RTC_ALRMASSR_MASKSS_POS;
pub const RTC_ALRMASSR_MASKSS_1: u32 = 0x2u32 << RTC_ALRMASSR_MASKSS_POS;
pub const RTC_ALRMASSR_MASKSS_2: u32 = 0x4u32 << RTC_ALRMASSR_MASKSS_POS;
pub const RTC_ALRMASSR_MASKSS_3: u32 = 0x8u32 << RTC_ALRMASSR_MASKSS_POS;
pub const RTC_ALRMASSR_SS_POS: u32 = 0u32;
pub const RTC_ALRMASSR_SS_MSK: u32 = 0x7FFFu32 << RTC_ALRMASSR_SS_POS;
pub const RTC_ALRMASSR_SS: u32 = RTC_ALRMASSR_SS_MSK;
pub const SPI_CR1_CPHA_POS: u32 = 0u32;
pub const SPI_CR1_CPHA_MSK: u32 = 0x1u32 << SPI_CR1_CPHA_POS;
pub const SPI_CR1_CPHA: u32 = SPI_CR1_CPHA_MSK;
pub const SPI_CR1_CPOL_POS: u32 = 1u32;
pub const SPI_CR1_CPOL_MSK: u32 = 0x1u32 << SPI_CR1_CPOL_POS;
pub const SPI_CR1_CPOL: u32 = SPI_CR1_CPOL_MSK;
pub const SPI_CR1_MSTR_POS: u32 = 2u32;
pub const SPI_CR1_MSTR_MSK: u32 = 0x1u32 << SPI_CR1_MSTR_POS;
pub const SPI_CR1_MSTR: u32 = SPI_CR1_MSTR_MSK;
pub const SPI_CR1_BR_POS: u32 = 3u32;
pub const SPI_CR1_BR_MSK: u32 = 0x7u32 << SPI_CR1_BR_POS;
pub const SPI_CR1_BR: u32 = SPI_CR1_BR_MSK;
pub const SPI_CR1_BR_0: u32 = 0x1u32 << SPI_CR1_BR_POS;
pub const SPI_CR1_BR_1: u32 = 0x2u32 << SPI_CR1_BR_POS;
pub const SPI_CR1_BR_2: u32 = 0x4u32 << SPI_CR1_BR_POS;
pub const SPI_CR1_SPE_POS: u32 = 6u32;
pub const SPI_CR1_SPE_MSK: u32 = 0x1u32 << SPI_CR1_SPE_POS;
pub const SPI_CR1_SPE: u32 = SPI_CR1_SPE_MSK;
pub const SPI_CR1_LSBFIRST_POS: u32 = 7u32;
pub const SPI_CR1_LSBFIRST_MSK: u32 = 0x1u32 << SPI_CR1_LSBFIRST_POS;
pub const SPI_CR1_LSBFIRST: u32 = SPI_CR1_LSBFIRST_MSK;
pub const SPI_CR1_SSI_POS: u32 = 8u32;
pub const SPI_CR1_SSI_MSK: u32 = 0x1u32 << SPI_CR1_SSI_POS;
pub const SPI_CR1_SSI: u32 = SPI_CR1_SSI_MSK;
pub const SPI_CR1_SSM_POS: u32 = 9u32;
pub const SPI_CR1_SSM_MSK: u32 = 0x1u32 << SPI_CR1_SSM_POS;
pub const SPI_CR1_SSM: u32 = SPI_CR1_SSM_MSK;
pub const SPI_CR1_RXONLY_POS: u32 = 10u32;
pub const SPI_CR1_RXONLY_MSK: u32 = 0x1u32 << SPI_CR1_RXONLY_POS;
pub const SPI_CR1_RXONLY: u32 = SPI_CR1_RXONLY_MSK;
pub const SPI_CR1_CRCL_POS: u32 = 11u32;
pub const SPI_CR1_CRCL_MSK: u32 = 0x1u32 << SPI_CR1_CRCL_POS;
pub const SPI_CR1_CRCL: u32 = SPI_CR1_CRCL_MSK;
pub const SPI_CR1_CRCNEXT_POS: u32 = 12u32;
pub const SPI_CR1_CRCNEXT_MSK: u32 = 0x1u32 << SPI_CR1_CRCNEXT_POS;
pub const SPI_CR1_CRCNEXT: u32 = SPI_CR1_CRCNEXT_MSK;
pub const SPI_CR1_CRCEN_POS: u32 = 13u32;
pub const SPI_CR1_CRCEN_MSK: u32 = 0x1u32 << SPI_CR1_CRCEN_POS;
pub const SPI_CR1_CRCEN: u32 = SPI_CR1_CRCEN_MSK;
pub const SPI_CR1_BIDIOE_POS: u32 = 14u32;
pub const SPI_CR1_BIDIOE_MSK: u32 = 0x1u32 << SPI_CR1_BIDIOE_POS;
pub const SPI_CR1_BIDIOE: u32 = SPI_CR1_BIDIOE_MSK;
pub const SPI_CR1_BIDIMODE_POS: u32 = 15u32;
pub const SPI_CR1_BIDIMODE_MSK: u32 = 0x1u32 << SPI_CR1_BIDIMODE_POS;
pub const SPI_CR1_BIDIMODE: u32 = SPI_CR1_BIDIMODE_MSK;
pub const SPI_CR2_RXDMAEN_POS: u32 = 0u32;
pub const SPI_CR2_RXDMAEN_MSK: u32 = 0x1u32 << SPI_CR2_RXDMAEN_POS;
pub const SPI_CR2_RXDMAEN: u32 = SPI_CR2_RXDMAEN_MSK;
pub const SPI_CR2_TXDMAEN_POS: u32 = 1u32;
pub const SPI_CR2_TXDMAEN_MSK: u32 = 0x1u32 << SPI_CR2_TXDMAEN_POS;
pub const SPI_CR2_TXDMAEN: u32 = SPI_CR2_TXDMAEN_MSK;
pub const SPI_CR2_SSOE_POS: u32 = 2u32;
pub const SPI_CR2_SSOE_MSK: u32 = 0x1u32 << SPI_CR2_SSOE_POS;
pub const SPI_CR2_SSOE: u32 = SPI_CR2_SSOE_MSK;
pub const SPI_CR2_NSSP_POS: u32 = 3u32;
pub const SPI_CR2_NSSP_MSK: u32 = 0x1u32 << SPI_CR2_NSSP_POS;
pub const SPI_CR2_NSSP: u32 = SPI_CR2_NSSP_MSK;
pub const SPI_CR2_FRF_POS: u32 = 4u32;
pub const SPI_CR2_FRF_MSK: u32 = 0x1u32 << SPI_CR2_FRF_POS;
pub const SPI_CR2_FRF: u32 = SPI_CR2_FRF_MSK;
pub const SPI_CR2_ERRIE_POS: u32 = 5u32;
pub const SPI_CR2_ERRIE_MSK: u32 = 0x1u32 << SPI_CR2_ERRIE_POS;
pub const SPI_CR2_ERRIE: u32 = SPI_CR2_ERRIE_MSK;
pub const SPI_CR2_RXNEIE_POS: u32 = 6u32;
pub const SPI_CR2_RXNEIE_MSK: u32 = 0x1u32 << SPI_CR2_RXNEIE_POS;
pub const SPI_CR2_RXNEIE: u32 = SPI_CR2_RXNEIE_MSK;
pub const SPI_CR2_TXEIE_POS: u32 = 7u32;
pub const SPI_CR2_TXEIE_MSK: u32 = 0x1u32 << SPI_CR2_TXEIE_POS;
pub const SPI_CR2_TXEIE: u32 = SPI_CR2_TXEIE_MSK;
pub const SPI_CR2_DS_POS: u32 = 8u32;
pub const SPI_CR2_DS_MSK: u32 = 0xFu32 << SPI_CR2_DS_POS;
pub const SPI_CR2_DS: u32 = SPI_CR2_DS_MSK;
pub const SPI_CR2_DS_0: u32 = 0x1u32 << SPI_CR2_DS_POS;
pub const SPI_CR2_DS_1: u32 = 0x2u32 << SPI_CR2_DS_POS;
pub const SPI_CR2_DS_2: u32 = 0x4u32 << SPI_CR2_DS_POS;
pub const SPI_CR2_DS_3: u32 = 0x8u32 << SPI_CR2_DS_POS;
pub const SPI_CR2_FRXTH_POS: u32 = 12u32;
pub const SPI_CR2_FRXTH_MSK: u32 = 0x1u32 << SPI_CR2_FRXTH_POS;
pub const SPI_CR2_FRXTH: u32 = SPI_CR2_FRXTH_MSK;
pub const SPI_CR2_LDMARX_POS: u32 = 13u32;
pub const SPI_CR2_LDMARX_MSK: u32 = 0x1u32 << SPI_CR2_LDMARX_POS;
pub const SPI_CR2_LDMARX: u32 = SPI_CR2_LDMARX_MSK;
pub const SPI_CR2_LDMATX_POS: u32 = 14u32;
pub const SPI_CR2_LDMATX_MSK: u32 = 0x1u32 << SPI_CR2_LDMATX_POS;
pub const SPI_CR2_LDMATX: u32 = SPI_CR2_LDMATX_MSK;
pub const SPI_SR_RXNE_POS: u32 = 0u32;
pub const SPI_SR_RXNE_MSK: u32 = 0x1u32 << SPI_SR_RXNE_POS;
pub const SPI_SR_RXNE: u32 = SPI_SR_RXNE_MSK;
pub const SPI_SR_TXE_POS: u32 = 1u32;
pub const SPI_SR_TXE_MSK: u32 = 0x1u32 << SPI_SR_TXE_POS;
pub const SPI_SR_TXE: u32 = SPI_SR_TXE_MSK;
pub const SPI_SR_CRCERR_POS: u32 = 4u32;
pub const SPI_SR_CRCERR_MSK: u32 = 0x1u32 << SPI_SR_CRCERR_POS;
pub const SPI_SR_CRCERR: u32 = SPI_SR_CRCERR_MSK;
pub const SPI_SR_MODF_POS: u32 = 5u32;
pub const SPI_SR_MODF_MSK: u32 = 0x1u32 << SPI_SR_MODF_POS;
pub const SPI_SR_MODF: u32 = SPI_SR_MODF_MSK;
pub const SPI_SR_OVR_POS: u32 = 6u32;
pub const SPI_SR_OVR_MSK: u32 = 0x1u32 << SPI_SR_OVR_POS;
pub const SPI_SR_OVR: u32 = SPI_SR_OVR_MSK;
pub const SPI_SR_BSY_POS: u32 = 7u32;
pub const SPI_SR_BSY_MSK: u32 = 0x1u32 << SPI_SR_BSY_POS;
pub const SPI_SR_BSY: u32 = SPI_SR_BSY_MSK;
pub const SPI_SR_FRE_POS: u32 = 8u32;
pub const SPI_SR_FRE_MSK: u32 = 0x1u32 << SPI_SR_FRE_POS;
pub const SPI_SR_FRE: u32 = SPI_SR_FRE_MSK;
pub const SPI_SR_FRLVL_POS: u32 = 9u32;
pub const SPI_SR_FRLVL_MSK: u32 = 0x3u32 << SPI_SR_FRLVL_POS;
pub const SPI_SR_FRLVL: u32 = SPI_SR_FRLVL_MSK;
pub const SPI_SR_FRLVL_0: u32 = 0x1u32 << SPI_SR_FRLVL_POS;
pub const SPI_SR_FRLVL_1: u32 = 0x2u32 << SPI_SR_FRLVL_POS;
pub const SPI_SR_FTLVL_POS: u32 = 11u32;
pub const SPI_SR_FTLVL_MSK: u32 = 0x3u32 << SPI_SR_FTLVL_POS;
pub const SPI_SR_FTLVL: u32 = SPI_SR_FTLVL_MSK;
pub const SPI_SR_FTLVL_0: u32 = 0x1u32 << SPI_SR_FTLVL_POS;
pub const SPI_SR_FTLVL_1: u32 = 0x2u32 << SPI_SR_FTLVL_POS;
pub const SPI_DR_DR_POS: u32 = 0u32;
pub const SPI_DR_DR_MSK: u32 = 0xFFFFFFFFu32 << SPI_DR_DR_POS;
pub const SPI_DR_DR: u32 = SPI_DR_DR_MSK;
pub const SPI_CRCPR_CRCPOLY_POS: u32 = 0u32;
pub const SPI_CRCPR_CRCPOLY_MSK: u32 = 0xFFFFFFFFu32 << SPI_CRCPR_CRCPOLY_POS;
pub const SPI_CRCPR_CRCPOLY: u32 = SPI_CRCPR_CRCPOLY_MSK;
pub const SPI_RXCRCR_RXCRC_POS: u32 = 0u32;
pub const SPI_RXCRCR_RXCRC_MSK: u32 = 0xFFFFFFFFu32 << SPI_RXCRCR_RXCRC_POS;
pub const SPI_RXCRCR_RXCRC: u32 = SPI_RXCRCR_RXCRC_MSK;
pub const SPI_TXCRCR_TXCRC_POS: u32 = 0u32;
pub const SPI_TXCRCR_TXCRC_MSK: u32 = 0xFFFFFFFFu32 << SPI_TXCRCR_TXCRC_POS;
pub const SPI_TXCRCR_TXCRC: u32 = SPI_TXCRCR_TXCRC_MSK;
pub const SPI_I2SCFGR_I2SMOD_POS: u32 = 11u32;
pub const SPI_I2SCFGR_I2SMOD_MSK: u32 = 0x1u32 << SPI_I2SCFGR_I2SMOD_POS;
pub const SPI_I2SCFGR_I2SMOD: u32 = SPI_I2SCFGR_I2SMOD_MSK;
pub const SYSCFG_CFGR1_MEM_MODE_POS: u32 = 0u32;
pub const SYSCFG_CFGR1_MEM_MODE_MSK: u32 = 0x3u32 << SYSCFG_CFGR1_MEM_MODE_POS;
pub const SYSCFG_CFGR1_MEM_MODE: u32 = SYSCFG_CFGR1_MEM_MODE_MSK;
pub const SYSCFG_CFGR1_MEM_MODE_0: u32 = 0x1u32 << SYSCFG_CFGR1_MEM_MODE_POS;
pub const SYSCFG_CFGR1_MEM_MODE_1: u32 = 0x2u32 << SYSCFG_CFGR1_MEM_MODE_POS;
pub const SYSCFG_CFGR1_DMA_RMP_POS: u32 = 8u32;
pub const SYSCFG_CFGR1_DMA_RMP_MSK: u32 = 0x1Fu32 << SYSCFG_CFGR1_DMA_RMP_POS;
pub const SYSCFG_CFGR1_DMA_RMP: u32 = SYSCFG_CFGR1_DMA_RMP_MSK;
pub const SYSCFG_CFGR1_ADC_DMA_RMP_POS: u32 = 8u32;
pub const SYSCFG_CFGR1_ADC_DMA_RMP_MSK: u32 = 0x1u32 << SYSCFG_CFGR1_ADC_DMA_RMP_POS;
pub const SYSCFG_CFGR1_ADC_DMA_RMP: u32 = SYSCFG_CFGR1_ADC_DMA_RMP_MSK;
pub const SYSCFG_CFGR1_USART1TX_DMA_RMP_POS: u32 = 9u32;
pub const SYSCFG_CFGR1_USART1TX_DMA_RMP_MSK: u32 = 0x1u32 << SYSCFG_CFGR1_USART1TX_DMA_RMP_POS;
pub const SYSCFG_CFGR1_USART1TX_DMA_RMP: u32 = SYSCFG_CFGR1_USART1TX_DMA_RMP_MSK;
pub const SYSCFG_CFGR1_USART1RX_DMA_RMP_POS: u32 = 10u32;
pub const SYSCFG_CFGR1_USART1RX_DMA_RMP_MSK: u32 = 0x1u32 << SYSCFG_CFGR1_USART1RX_DMA_RMP_POS;
pub const SYSCFG_CFGR1_USART1RX_DMA_RMP: u32 = SYSCFG_CFGR1_USART1RX_DMA_RMP_MSK;
pub const SYSCFG_CFGR1_TIM16_DMA_RMP_POS: u32 = 11u32;
pub const SYSCFG_CFGR1_TIM16_DMA_RMP_MSK: u32 = 0x1u32 << SYSCFG_CFGR1_TIM16_DMA_RMP_POS;
pub const SYSCFG_CFGR1_TIM16_DMA_RMP: u32 = SYSCFG_CFGR1_TIM16_DMA_RMP_MSK;
pub const SYSCFG_CFGR1_TIM17_DMA_RMP_POS: u32 = 12u32;
pub const SYSCFG_CFGR1_TIM17_DMA_RMP_MSK: u32 = 0x1u32 << SYSCFG_CFGR1_TIM17_DMA_RMP_POS;
pub const SYSCFG_CFGR1_TIM17_DMA_RMP: u32 = SYSCFG_CFGR1_TIM17_DMA_RMP_MSK;
pub const SYSCFG_CFGR1_I2C_FMP_PB6_POS: u32 = 16u32;
pub const SYSCFG_CFGR1_I2C_FMP_PB6_MSK: u32 = 0x1u32 << SYSCFG_CFGR1_I2C_FMP_PB6_POS;
pub const SYSCFG_CFGR1_I2C_FMP_PB6: u32 = SYSCFG_CFGR1_I2C_FMP_PB6_MSK;
pub const SYSCFG_CFGR1_I2C_FMP_PB7_POS: u32 = 17u32;
pub const SYSCFG_CFGR1_I2C_FMP_PB7_MSK: u32 = 0x1u32 << SYSCFG_CFGR1_I2C_FMP_PB7_POS;
pub const SYSCFG_CFGR1_I2C_FMP_PB7: u32 = SYSCFG_CFGR1_I2C_FMP_PB7_MSK;
pub const SYSCFG_CFGR1_I2C_FMP_PB8_POS: u32 = 18u32;
pub const SYSCFG_CFGR1_I2C_FMP_PB8_MSK: u32 = 0x1u32 << SYSCFG_CFGR1_I2C_FMP_PB8_POS;
pub const SYSCFG_CFGR1_I2C_FMP_PB8: u32 = SYSCFG_CFGR1_I2C_FMP_PB8_MSK;
pub const SYSCFG_CFGR1_I2C_FMP_PB9_POS: u32 = 19u32;
pub const SYSCFG_CFGR1_I2C_FMP_PB9_MSK: u32 = 0x1u32 << SYSCFG_CFGR1_I2C_FMP_PB9_POS;
pub const SYSCFG_CFGR1_I2C_FMP_PB9: u32 = SYSCFG_CFGR1_I2C_FMP_PB9_MSK;
pub const SYSCFG_CFGR1_I2C_FMP_I2C1_POS: u32 = 20u32;
pub const SYSCFG_CFGR1_I2C_FMP_I2C1_MSK: u32 = 0x1u32 << SYSCFG_CFGR1_I2C_FMP_I2C1_POS;
pub const SYSCFG_CFGR1_I2C_FMP_I2C1: u32 = SYSCFG_CFGR1_I2C_FMP_I2C1_MSK;
pub const SYSCFG_CFGR1_I2C_FMP_PA9_POS: u32 = 22u32;
pub const SYSCFG_CFGR1_I2C_FMP_PA9_MSK: u32 = 0x1u32 << SYSCFG_CFGR1_I2C_FMP_PA9_POS;
pub const SYSCFG_CFGR1_I2C_FMP_PA9: u32 = SYSCFG_CFGR1_I2C_FMP_PA9_MSK;
pub const SYSCFG_CFGR1_I2C_FMP_PA10_POS: u32 = 23u32;
pub const SYSCFG_CFGR1_I2C_FMP_PA10_MSK: u32 = 0x1u32 << SYSCFG_CFGR1_I2C_FMP_PA10_POS;
pub const SYSCFG_CFGR1_I2C_FMP_PA10: u32 = SYSCFG_CFGR1_I2C_FMP_PA10_MSK;
pub const SYSCFG_EXTICR1_EXTI0_POS: u32 = 0u32;
pub const SYSCFG_EXTICR1_EXTI0_MSK: u32 = 0xFu32 << SYSCFG_EXTICR1_EXTI0_POS;
pub const SYSCFG_EXTICR1_EXTI0: u32 = SYSCFG_EXTICR1_EXTI0_MSK;
pub const SYSCFG_EXTICR1_EXTI1_POS: u32 = 4u32;
pub const SYSCFG_EXTICR1_EXTI1_MSK: u32 = 0xFu32 << SYSCFG_EXTICR1_EXTI1_POS;
pub const SYSCFG_EXTICR1_EXTI1: u32 = SYSCFG_EXTICR1_EXTI1_MSK;
pub const SYSCFG_EXTICR1_EXTI2_POS: u32 = 8u32;
pub const SYSCFG_EXTICR1_EXTI2_MSK: u32 = 0xFu32 << SYSCFG_EXTICR1_EXTI2_POS;
pub const SYSCFG_EXTICR1_EXTI2: u32 = SYSCFG_EXTICR1_EXTI2_MSK;
pub const SYSCFG_EXTICR1_EXTI3_POS: u32 = 12u32;
pub const SYSCFG_EXTICR1_EXTI3_MSK: u32 = 0xFu32 << SYSCFG_EXTICR1_EXTI3_POS;
pub const SYSCFG_EXTICR1_EXTI3: u32 = SYSCFG_EXTICR1_EXTI3_MSK;
pub const SYSCFG_EXTICR1_EXTI0_PA: u32 = 0x00000000u32;
pub const SYSCFG_EXTICR1_EXTI0_PB: u32 = 0x00000001u32;
pub const SYSCFG_EXTICR1_EXTI0_PC: u32 = 0x00000002u32;
pub const SYSCFG_EXTICR1_EXTI0_PD: u32 = 0x00000003u32;
pub const SYSCFG_EXTICR1_EXTI0_PF: u32 = 0x00000005u32;
pub const SYSCFG_EXTICR1_EXTI1_PA: u32 = 0x00000000u32;
pub const SYSCFG_EXTICR1_EXTI1_PB: u32 = 0x00000010u32;
pub const SYSCFG_EXTICR1_EXTI1_PC: u32 = 0x00000020u32;
pub const SYSCFG_EXTICR1_EXTI1_PD: u32 = 0x00000030u32;
pub const SYSCFG_EXTICR1_EXTI1_PF: u32 = 0x00000050u32;
pub const SYSCFG_EXTICR1_EXTI2_PA: u32 = 0x00000000u32;
pub const SYSCFG_EXTICR1_EXTI2_PB: u32 = 0x00000100u32;
pub const SYSCFG_EXTICR1_EXTI2_PC: u32 = 0x00000200u32;
pub const SYSCFG_EXTICR1_EXTI2_PD: u32 = 0x00000300u32;
pub const SYSCFG_EXTICR1_EXTI2_PF: u32 = 0x00000500u32;
pub const SYSCFG_EXTICR1_EXTI3_PA: u32 = 0x00000000u32;
pub const SYSCFG_EXTICR1_EXTI3_PB: u32 = 0x00001000u32;
pub const SYSCFG_EXTICR1_EXTI3_PC: u32 = 0x00002000u32;
pub const SYSCFG_EXTICR1_EXTI3_PD: u32 = 0x00003000u32;
pub const SYSCFG_EXTICR1_EXTI3_PF: u32 = 0x00005000u32;
pub const SYSCFG_EXTICR2_EXTI4_POS: u32 = 0u32;
pub const SYSCFG_EXTICR2_EXTI4_MSK: u32 = 0xFu32 << SYSCFG_EXTICR2_EXTI4_POS;
pub const SYSCFG_EXTICR2_EXTI4: u32 = SYSCFG_EXTICR2_EXTI4_MSK;
pub const SYSCFG_EXTICR2_EXTI5_POS: u32 = 4u32;
pub const SYSCFG_EXTICR2_EXTI5_MSK: u32 = 0xFu32 << SYSCFG_EXTICR2_EXTI5_POS;
pub const SYSCFG_EXTICR2_EXTI5: u32 = SYSCFG_EXTICR2_EXTI5_MSK;
pub const SYSCFG_EXTICR2_EXTI6_POS: u32 = 8u32;
pub const SYSCFG_EXTICR2_EXTI6_MSK: u32 = 0xFu32 << SYSCFG_EXTICR2_EXTI6_POS;
pub const SYSCFG_EXTICR2_EXTI6: u32 = SYSCFG_EXTICR2_EXTI6_MSK;
pub const SYSCFG_EXTICR2_EXTI7_POS: u32 = 12u32;
pub const SYSCFG_EXTICR2_EXTI7_MSK: u32 = 0xFu32 << SYSCFG_EXTICR2_EXTI7_POS;
pub const SYSCFG_EXTICR2_EXTI7: u32 = SYSCFG_EXTICR2_EXTI7_MSK;
pub const SYSCFG_EXTICR2_EXTI4_PA: u32 = 0x00000000u32;
pub const SYSCFG_EXTICR2_EXTI4_PB: u32 = 0x00000001u32;
pub const SYSCFG_EXTICR2_EXTI4_PC: u32 = 0x00000002u32;
pub const SYSCFG_EXTICR2_EXTI4_PD: u32 = 0x00000003u32;
pub const SYSCFG_EXTICR2_EXTI4_PF: u32 = 0x00000005u32;
pub const SYSCFG_EXTICR2_EXTI5_PA: u32 = 0x00000000u32;
pub const SYSCFG_EXTICR2_EXTI5_PB: u32 = 0x00000010u32;
pub const SYSCFG_EXTICR2_EXTI5_PC: u32 = 0x00000020u32;
pub const SYSCFG_EXTICR2_EXTI5_PD: u32 = 0x00000030u32;
pub const SYSCFG_EXTICR2_EXTI5_PF: u32 = 0x00000050u32;
pub const SYSCFG_EXTICR2_EXTI6_PA: u32 = 0x00000000u32;
pub const SYSCFG_EXTICR2_EXTI6_PB: u32 = 0x00000100u32;
pub const SYSCFG_EXTICR2_EXTI6_PC: u32 = 0x00000200u32;
pub const SYSCFG_EXTICR2_EXTI6_PD: u32 = 0x00000300u32;
pub const SYSCFG_EXTICR2_EXTI6_PF: u32 = 0x00000500u32;
pub const SYSCFG_EXTICR2_EXTI7_PA: u32 = 0x00000000u32;
pub const SYSCFG_EXTICR2_EXTI7_PB: u32 = 0x00001000u32;
pub const SYSCFG_EXTICR2_EXTI7_PC: u32 = 0x00002000u32;
pub const SYSCFG_EXTICR2_EXTI7_PD: u32 = 0x00003000u32;
pub const SYSCFG_EXTICR2_EXTI7_PF: u32 = 0x00005000u32;
pub const SYSCFG_EXTICR3_EXTI8_POS: u32 = 0u32;
pub const SYSCFG_EXTICR3_EXTI8_MSK: u32 = 0xFu32 << SYSCFG_EXTICR3_EXTI8_POS;
pub const SYSCFG_EXTICR3_EXTI8: u32 = SYSCFG_EXTICR3_EXTI8_MSK;
pub const SYSCFG_EXTICR3_EXTI9_POS: u32 = 4u32;
pub const SYSCFG_EXTICR3_EXTI9_MSK: u32 = 0xFu32 << SYSCFG_EXTICR3_EXTI9_POS;
pub const SYSCFG_EXTICR3_EXTI9: u32 = SYSCFG_EXTICR3_EXTI9_MSK;
pub const SYSCFG_EXTICR3_EXTI10_POS: u32 = 8u32;
pub const SYSCFG_EXTICR3_EXTI10_MSK: u32 = 0xFu32 << SYSCFG_EXTICR3_EXTI10_POS;
pub const SYSCFG_EXTICR3_EXTI10: u32 = SYSCFG_EXTICR3_EXTI10_MSK;
pub const SYSCFG_EXTICR3_EXTI11_POS: u32 = 12u32;
pub const SYSCFG_EXTICR3_EXTI11_MSK: u32 = 0xFu32 << SYSCFG_EXTICR3_EXTI11_POS;
pub const SYSCFG_EXTICR3_EXTI11: u32 = SYSCFG_EXTICR3_EXTI11_MSK;
pub const SYSCFG_EXTICR3_EXTI8_PA: u32 = 0x00000000u32;
pub const SYSCFG_EXTICR3_EXTI8_PB: u32 = 0x00000001u32;
pub const SYSCFG_EXTICR3_EXTI8_PC: u32 = 0x00000002u32;
pub const SYSCFG_EXTICR3_EXTI8_PD: u32 = 0x00000003u32;
pub const SYSCFG_EXTICR3_EXTI8_PF: u32 = 0x00000005u32;
pub const SYSCFG_EXTICR3_EXTI9_PA: u32 = 0x00000000u32;
pub const SYSCFG_EXTICR3_EXTI9_PB: u32 = 0x00000010u32;
pub const SYSCFG_EXTICR3_EXTI9_PC: u32 = 0x00000020u32;
pub const SYSCFG_EXTICR3_EXTI9_PD: u32 = 0x00000030u32;
pub const SYSCFG_EXTICR3_EXTI9_PF: u32 = 0x00000050u32;
pub const SYSCFG_EXTICR3_EXTI10_PA: u32 = 0x00000000u32;
pub const SYSCFG_EXTICR3_EXTI10_PB: u32 = 0x00000100u32;
pub const SYSCFG_EXTICR3_EXTI10_PC: u32 = 0x00000200u32;
pub const SYSCFG_EXTICR3_EXTI10_PD: u32 = 0x00000300u32;
pub const SYSCFG_EXTICR3_EXTI10_PF: u32 = 0x00000500u32;
pub const SYSCFG_EXTICR3_EXTI11_PA: u32 = 0x00000000u32;
pub const SYSCFG_EXTICR3_EXTI11_PB: u32 = 0x00001000u32;
pub const SYSCFG_EXTICR3_EXTI11_PC: u32 = 0x00002000u32;
pub const SYSCFG_EXTICR3_EXTI11_PD: u32 = 0x00003000u32;
pub const SYSCFG_EXTICR3_EXTI11_PF: u32 = 0x00005000u32;
pub const SYSCFG_EXTICR4_EXTI12_POS: u32 = 0u32;
pub const SYSCFG_EXTICR4_EXTI12_MSK: u32 = 0xFu32 << SYSCFG_EXTICR4_EXTI12_POS;
pub const SYSCFG_EXTICR4_EXTI12: u32 = SYSCFG_EXTICR4_EXTI12_MSK;
pub const SYSCFG_EXTICR4_EXTI13_POS: u32 = 4u32;
pub const SYSCFG_EXTICR4_EXTI13_MSK: u32 = 0xFu32 << SYSCFG_EXTICR4_EXTI13_POS;
pub const SYSCFG_EXTICR4_EXTI13: u32 = SYSCFG_EXTICR4_EXTI13_MSK;
pub const SYSCFG_EXTICR4_EXTI14_POS: u32 = 8u32;
pub const SYSCFG_EXTICR4_EXTI14_MSK: u32 = 0xFu32 << SYSCFG_EXTICR4_EXTI14_POS;
pub const SYSCFG_EXTICR4_EXTI14: u32 = SYSCFG_EXTICR4_EXTI14_MSK;
pub const SYSCFG_EXTICR4_EXTI15_POS: u32 = 12u32;
pub const SYSCFG_EXTICR4_EXTI15_MSK: u32 = 0xFu32 << SYSCFG_EXTICR4_EXTI15_POS;
pub const SYSCFG_EXTICR4_EXTI15: u32 = SYSCFG_EXTICR4_EXTI15_MSK;
pub const SYSCFG_EXTICR4_EXTI12_PA: u32 = 0x00000000u32;
pub const SYSCFG_EXTICR4_EXTI12_PB: u32 = 0x00000001u32;
pub const SYSCFG_EXTICR4_EXTI12_PC: u32 = 0x00000002u32;
pub const SYSCFG_EXTICR4_EXTI12_PD: u32 = 0x00000003u32;
pub const SYSCFG_EXTICR4_EXTI12_PF: u32 = 0x00000005u32;
pub const SYSCFG_EXTICR4_EXTI13_PA: u32 = 0x00000000u32;
pub const SYSCFG_EXTICR4_EXTI13_PB: u32 = 0x00000010u32;
pub const SYSCFG_EXTICR4_EXTI13_PC: u32 = 0x00000020u32;
pub const SYSCFG_EXTICR4_EXTI13_PD: u32 = 0x00000030u32;
pub const SYSCFG_EXTICR4_EXTI13_PF: u32 = 0x00000050u32;
pub const SYSCFG_EXTICR4_EXTI14_PA: u32 = 0x00000000u32;
pub const SYSCFG_EXTICR4_EXTI14_PB: u32 = 0x00000100u32;
pub const SYSCFG_EXTICR4_EXTI14_PC: u32 = 0x00000200u32;
pub const SYSCFG_EXTICR4_EXTI14_PD: u32 = 0x00000300u32;
pub const SYSCFG_EXTICR4_EXTI14_PF: u32 = 0x00000500u32;
pub const SYSCFG_EXTICR4_EXTI15_PA: u32 = 0x00000000u32;
pub const SYSCFG_EXTICR4_EXTI15_PB: u32 = 0x00001000u32;
pub const SYSCFG_EXTICR4_EXTI15_PC: u32 = 0x00002000u32;
pub const SYSCFG_EXTICR4_EXTI15_PD: u32 = 0x00003000u32;
pub const SYSCFG_EXTICR4_EXTI15_PF: u32 = 0x00005000u32;
pub const SYSCFG_CFGR2_LOCKUP_LOCK_POS: u32 = 0u32;
pub const SYSCFG_CFGR2_LOCKUP_LOCK_MSK: u32 = 0x1u32 << SYSCFG_CFGR2_LOCKUP_LOCK_POS;
pub const SYSCFG_CFGR2_LOCKUP_LOCK: u32 = SYSCFG_CFGR2_LOCKUP_LOCK_MSK;
pub const SYSCFG_CFGR2_SRAM_PARITY_LOCK_POS: u32 = 1u32;
pub const SYSCFG_CFGR2_SRAM_PARITY_LOCK_MSK: u32 = 0x1u32 << SYSCFG_CFGR2_SRAM_PARITY_LOCK_POS;
pub const SYSCFG_CFGR2_SRAM_PARITY_LOCK: u32 = SYSCFG_CFGR2_SRAM_PARITY_LOCK_MSK;
pub const SYSCFG_CFGR2_SRAM_PEF_POS: u32 = 8u32;
pub const SYSCFG_CFGR2_SRAM_PEF_MSK: u32 = 0x1u32 << SYSCFG_CFGR2_SRAM_PEF_POS;
pub const SYSCFG_CFGR2_SRAM_PEF: u32 = SYSCFG_CFGR2_SRAM_PEF_MSK;
pub const SYSCFG_CFGR2_SRAM_PE: u32 = SYSCFG_CFGR2_SRAM_PEF;
pub const TIM_CR1_CEN_POS: u32 = 0u32;
pub const TIM_CR1_CEN_MSK: u32 = 0x1u32 << TIM_CR1_CEN_POS;
pub const TIM_CR1_CEN: u32 = TIM_CR1_CEN_MSK;
pub const TIM_CR1_URS_POS: u32 = 2u32;
pub const TIM_CR1_URS_MSK: u32 = 0x1u32 << TIM_CR1_URS_POS;
pub const TIM_CR1_URS: u32 = TIM_CR1_URS_MSK;
pub const TIM_CR1_OPM_POS: u32 = 3u32;
pub const TIM_CR1_OPM_MSK: u32 = 0x1u32 << TIM_CR1_OPM_POS;
pub const TIM_CR1_OPM: u32 = TIM_CR1_OPM_MSK;
pub const TIM_CR1_DIR_POS: u32 = 4u32;
pub const TIM_CR1_DIR_MSK: u32 = 0x1u32 << TIM_CR1_DIR_POS;
pub const TIM_CR1_DIR: u32 = TIM_CR1_DIR_MSK;
pub const TIM_CR1_CMS_POS: u32 = 5u32;
pub const TIM_CR1_CMS_MSK: u32 = 0x3u32 << TIM_CR1_CMS_POS;
pub const TIM_CR1_CMS: u32 = TIM_CR1_CMS_MSK;
pub const TIM_CR1_CMS_0: u32 = 0x1u32 << TIM_CR1_CMS_POS;
pub const TIM_CR1_CMS_1: u32 = 0x2u32 << TIM_CR1_CMS_POS;
pub const TIM_CR1_ARPE_POS: u32 = 7u32;
pub const TIM_CR1_ARPE_MSK: u32 = 0x1u32 << TIM_CR1_ARPE_POS;
pub const TIM_CR1_ARPE: u32 = TIM_CR1_ARPE_MSK;
pub const TIM_CR1_CKD_POS: u32 = 8u32;
pub const TIM_CR1_CKD_MSK: u32 = 0x3u32 << TIM_CR1_CKD_POS;
pub const TIM_CR1_CKD: u32 = TIM_CR1_CKD_MSK;
pub const TIM_CR1_CKD_0: u32 = 0x1u32 << TIM_CR1_CKD_POS;
pub const TIM_CR1_CKD_1: u32 = 0x2u32 << TIM_CR1_CKD_POS;
pub const TIM_CR2_CCPC_POS: u32 = 0u32;
pub const TIM_CR2_CCPC_MSK: u32 = 0x1u32 << TIM_CR2_CCPC_POS;
pub const TIM_CR2_CCPC: u32 = TIM_CR2_CCPC_MSK;
pub const TIM_CR2_CCUS_POS: u32 = 2u32;
pub const TIM_CR2_CCUS_MSK: u32 = 0x1u32 << TIM_CR2_CCUS_POS;
pub const TIM_CR2_CCUS: u32 = TIM_CR2_CCUS_MSK;
pub const TIM_CR2_CCDS_POS: u32 = 3u32;
pub const TIM_CR2_CCDS_MSK: u32 = 0x1u32 << TIM_CR2_CCDS_POS;
pub const TIM_CR2_CCDS: u32 = TIM_CR2_CCDS_MSK;
pub const TIM_CR2_MMS_POS: u32 = 4u32;
pub const TIM_CR2_MMS_MSK: u32 = 0x7u32 << TIM_CR2_MMS_POS;
pub const TIM_CR2_MMS: u32 = TIM_CR2_MMS_MSK;
pub const TIM_CR2_MMS_0: u32 = 0x1u32 << TIM_CR2_MMS_POS;
pub const TIM_CR2_MMS_1: u32 = 0x2u32 << TIM_CR2_MMS_POS;
pub const TIM_CR2_MMS_2: u32 = 0x4u32 << TIM_CR2_MMS_POS;
pub const TIM_CR2_TI1S_POS: u32 = 7u32;
pub const TIM_CR2_TI1S_MSK: u32 = 0x1u32 << TIM_CR2_TI1S_POS;
pub const TIM_CR2_TI1S: u32 = TIM_CR2_TI1S_MSK;
pub const TIM_CR2_OIS1_POS: u32 = 8u32;
pub const TIM_CR2_OIS1_MSK: u32 = 0x1u32 << TIM_CR2_OIS1_POS;
pub const TIM_CR2_OIS1: u32 = TIM_CR2_OIS1_MSK;
pub const TIM_CR2_OIS1N_POS: u32 = 9u32;
pub const TIM_CR2_OIS1N_MSK: u32 = 0x1u32 << TIM_CR2_OIS1N_POS;
pub const TIM_CR2_OIS1N: u32 = TIM_CR2_OIS1N_MSK;
pub const TIM_CR2_OIS2_POS: u32 = 10u32;
pub const TIM_CR2_OIS2_MSK: u32 = 0x1u32 << TIM_CR2_OIS2_POS;
pub const TIM_CR2_OIS2: u32 = TIM_CR2_OIS2_MSK;
pub const TIM_CR2_OIS2N_POS: u32 = 11u32;
pub const TIM_CR2_OIS2N_MSK: u32 = 0x1u32 << TIM_CR2_OIS2N_POS;
pub const TIM_CR2_OIS2N: u32 = TIM_CR2_OIS2N_MSK;
pub const TIM_CR2_OIS3_POS: u32 = 12u32;
pub const TIM_CR2_OIS3_MSK: u32 = 0x1u32 << TIM_CR2_OIS3_POS;
pub const TIM_CR2_OIS3: u32 = TIM_CR2_OIS3_MSK;
pub const TIM_CR2_OIS3N_POS: u32 = 13u32;
pub const TIM_CR2_OIS3N_MSK: u32 = 0x1u32 << TIM_CR2_OIS3N_POS;
pub const TIM_CR2_OIS3N: u32 = TIM_CR2_OIS3N_MSK;
pub const TIM_CR2_OIS4_POS: u32 = 14u32;
pub const TIM_CR2_OIS4_MSK: u32 = 0x1u32 << TIM_CR2_OIS4_POS;
pub const TIM_CR2_OIS4: u32 = TIM_CR2_OIS4_MSK;
pub const TIM_SMCR_SMS_POS: u32 = 0u32;
pub const TIM_SMCR_SMS_MSK: u32 = 0x7u32 << TIM_SMCR_SMS_POS;
pub const TIM_SMCR_SMS: u32 = TIM_SMCR_SMS_MSK;
pub const TIM_SMCR_SMS_0: u32 = 0x1u32 << TIM_SMCR_SMS_POS;
pub const TIM_SMCR_SMS_1: u32 = 0x2u32 << TIM_SMCR_SMS_POS;
pub const TIM_SMCR_SMS_2: u32 = 0x4u32 << TIM_SMCR_SMS_POS;
pub const TIM_SMCR_OCCS_POS: u32 = 3u32;
pub const TIM_SMCR_OCCS_MSK: u32 = 0x1u32 << TIM_SMCR_OCCS_POS;
pub const TIM_SMCR_OCCS: u32 = TIM_SMCR_OCCS_MSK;
pub const TIM_SMCR_TS_POS: u32 = 4u32;
pub const TIM_SMCR_TS_MSK: u32 = 0x7u32 << TIM_SMCR_TS_POS;
pub const TIM_SMCR_TS: u32 = TIM_SMCR_TS_MSK;
pub const TIM_SMCR_TS_0: u32 = 0x1u32 << TIM_SMCR_TS_POS;
pub const TIM_SMCR_TS_1: u32 = 0x2u32 << TIM_SMCR_TS_POS;
pub const TIM_SMCR_TS_2: u32 = 0x4u32 << TIM_SMCR_TS_POS;
pub const TIM_SMCR_MSM_POS: u32 = 7u32;
pub const TIM_SMCR_MSM_MSK: u32 = 0x1u32 << TIM_SMCR_MSM_POS;
pub const TIM_SMCR_MSM: u32 = TIM_SMCR_MSM_MSK;
pub const TIM_SMCR_ETF_POS: u32 = 8u32;
pub const TIM_SMCR_ETF_MSK: u32 = 0xFu32 << TIM_SMCR_ETF_POS;
pub const TIM_SMCR_ETF: u32 = TIM_SMCR_ETF_MSK;
pub const TIM_SMCR_ETF_0: u32 = 0x1u32 << TIM_SMCR_ETF_POS;
pub const TIM_SMCR_ETF_1: u32 = 0x2u32 << TIM_SMCR_ETF_POS;
pub const TIM_SMCR_ETF_2: u32 = 0x4u32 << TIM_SMCR_ETF_POS;
pub const TIM_SMCR_ETF_3: u32 = 0x8u32 << TIM_SMCR_ETF_POS;
pub const TIM_SMCR_ETPS_POS: u32 = 12u32;
pub const TIM_SMCR_ETPS_MSK: u32 = 0x3u32 << TIM_SMCR_ETPS_POS;
pub const TIM_SMCR_ETPS: u32 = TIM_SMCR_ETPS_MSK;
pub const TIM_SMCR_ETPS_0: u32 = 0x1u32 << TIM_SMCR_ETPS_POS;
pub const TIM_SMCR_ETPS_1: u32 = 0x2u32 << TIM_SMCR_ETPS_POS;
pub const TIM_SMCR_ECE_POS: u32 = 14u32;
pub const TIM_SMCR_ECE_MSK: u32 = 0x1u32 << TIM_SMCR_ECE_POS;
pub const TIM_SMCR_ECE: u32 = TIM_SMCR_ECE_MSK;
pub const TIM_SMCR_ETP_POS: u32 = 15u32;
pub const TIM_SMCR_ETP_MSK: u32 = 0x1u32 << TIM_SMCR_ETP_POS;
pub const TIM_SMCR_ETP: u32 = TIM_SMCR_ETP_MSK;
pub const TIM_DIER_UIE_POS: u32 = 0u32;
pub const TIM_DIER_UIE_MSK: u32 = 0x1u32 << TIM_DIER_UIE_POS;
pub const TIM_DIER_UIE: u32 = TIM_DIER_UIE_MSK;
pub const TIM_DIER_CC1IE_POS: u32 = 1u32;
pub const TIM_DIER_CC1IE_MSK: u32 = 0x1u32 << TIM_DIER_CC1IE_POS;
pub const TIM_DIER_CC1IE: u32 = TIM_DIER_CC1IE_MSK;
pub const TIM_DIER_CC2IE_POS: u32 = 2u32;
pub const TIM_DIER_CC2IE_MSK: u32 = 0x1u32 << TIM_DIER_CC2IE_POS;
pub const TIM_DIER_CC2IE: u32 = TIM_DIER_CC2IE_MSK;
pub const TIM_DIER_CC3IE_POS: u32 = 3u32;
pub const TIM_DIER_CC3IE_MSK: u32 = 0x1u32 << TIM_DIER_CC3IE_POS;
pub const TIM_DIER_CC3IE: u32 = TIM_DIER_CC3IE_MSK;
pub const TIM_DIER_CC4IE_POS: u32 = 4u32;
pub const TIM_DIER_CC4IE_MSK: u32 = 0x1u32 << TIM_DIER_CC4IE_POS;
pub const TIM_DIER_CC4IE: u32 = TIM_DIER_CC4IE_MSK;
pub const TIM_DIER_COMIE_POS: u32 = 5u32;
pub const TIM_DIER_COMIE_MSK: u32 = 0x1u32 << TIM_DIER_COMIE_POS;
pub const TIM_DIER_COMIE: u32 = TIM_DIER_COMIE_MSK;
pub const TIM_DIER_TIE_POS: u32 = 6u32;
pub const TIM_DIER_TIE_MSK: u32 = 0x1u32 << TIM_DIER_TIE_POS;
pub const TIM_DIER_TIE: u32 = TIM_DIER_TIE_MSK;
pub const TIM_DIER_BIE_POS: u32 = 7u32;
pub const TIM_DIER_BIE_MSK: u32 = 0x1u32 << TIM_DIER_BIE_POS;
pub const TIM_DIER_BIE: u32 = TIM_DIER_BIE_MSK;
pub const TIM_DIER_UDE_POS: u32 = 8u32;
pub const TIM_DIER_UDE_MSK: u32 = 0x1u32 << TIM_DIER_UDE_POS;
pub const TIM_DIER_UDE: u32 = TIM_DIER_UDE_MSK;
pub const TIM_DIER_CC1DE_POS: u32 = 9u32;
pub const TIM_DIER_CC1DE_MSK: u32 = 0x1u32 << TIM_DIER_CC1DE_POS;
pub const TIM_DIER_CC1DE: u32 = TIM_DIER_CC1DE_MSK;
pub const TIM_DIER_CC2DE_POS: u32 = 10u32;
pub const TIM_DIER_CC2DE_MSK: u32 = 0x1u32 << TIM_DIER_CC2DE_POS;
pub const TIM_DIER_CC2DE: u32 = TIM_DIER_CC2DE_MSK;
pub const TIM_DIER_CC3DE_POS: u32 = 11u32;
pub const TIM_DIER_CC3DE_MSK: u32 = 0x1u32 << TIM_DIER_CC3DE_POS;
pub const TIM_DIER_CC3DE: u32 = TIM_DIER_CC3DE_MSK;
pub const TIM_DIER_CC4DE_POS: u32 = 12u32;
pub const TIM_DIER_CC4DE_MSK: u32 = 0x1u32 << TIM_DIER_CC4DE_POS;
pub const TIM_DIER_CC4DE: u32 = TIM_DIER_CC4DE_MSK;
pub const TIM_DIER_COMDE_POS: u32 = 13u32;
pub const TIM_DIER_COMDE_MSK: u32 = 0x1u32 << TIM_DIER_COMDE_POS;
pub const TIM_DIER_COMDE: u32 = TIM_DIER_COMDE_MSK;
pub const TIM_DIER_TDE_POS: u32 = 14u32;
pub const TIM_DIER_TDE_MSK: u32 = 0x1u32 << TIM_DIER_TDE_POS;
pub const TIM_DIER_TDE: u32 = TIM_DIER_TDE_MSK;
pub const TIM_SR_UIF_POS: u32 = 0u32;
pub const TIM_SR_UIF_MSK: u32 = 0x1u32 << TIM_SR_UIF_POS;
pub const TIM_SR_UIF: u32 = TIM_SR_UIF_MSK;
pub const TIM_SR_CC1IF_POS: u32 = 1u32;
pub const TIM_SR_CC1IF_MSK: u32 = 0x1u32 << TIM_SR_CC1IF_POS;
pub const TIM_SR_CC1IF: u32 = TIM_SR_CC1IF_MSK;
pub const TIM_SR_CC2IF_POS: u32 = 2u32;
pub const TIM_SR_CC2IF_MSK: u32 = 0x1u32 << TIM_SR_CC2IF_POS;
pub const TIM_SR_CC2IF: u32 = TIM_SR_CC2IF_MSK;
pub const TIM_SR_CC3IF_POS: u32 = 3u32;
pub const TIM_SR_CC3IF_MSK: u32 = 0x1u32 << TIM_SR_CC3IF_POS;
pub const TIM_SR_CC3IF: u32 = TIM_SR_CC3IF_MSK;
pub const TIM_SR_CC4IF_POS: u32 = 4u32;
pub const TIM_SR_CC4IF_MSK: u32 = 0x1u32 << TIM_SR_CC4IF_POS;
pub const TIM_SR_CC4IF: u32 = TIM_SR_CC4IF_MSK;
pub const TIM_SR_COMIF_POS: u32 = 5u32;
pub const TIM_SR_COMIF_MSK: u32 = 0x1u32 << TIM_SR_COMIF_POS;
pub const TIM_SR_COMIF: u32 = TIM_SR_COMIF_MSK;
pub const TIM_SR_TIF_POS: u32 = 6u32;
pub const TIM_SR_TIF_MSK: u32 = 0x1u32 << TIM_SR_TIF_POS;
pub const TIM_SR_TIF: u32 = TIM_SR_TIF_MSK;
pub const TIM_SR_BIF_POS: u32 = 7u32;
pub const TIM_SR_BIF_MSK: u32 = 0x1u32 << TIM_SR_BIF_POS;
pub const TIM_SR_BIF: u32 = TIM_SR_BIF_MSK;
pub const TIM_SR_CC1OF_POS: u32 = 9u32;
pub const TIM_SR_CC1OF_MSK: u32 = 0x1u32 << TIM_SR_CC1OF_POS;
pub const TIM_SR_CC1OF: u32 = TIM_SR_CC1OF_MSK;
pub const TIM_SR_CC2OF_POS: u32 = 10u32;
pub const TIM_SR_CC2OF_MSK: u32 = 0x1u32 << TIM_SR_CC2OF_POS;
pub const TIM_SR_CC2OF: u32 = TIM_SR_CC2OF_MSK;
pub const TIM_SR_CC3OF_POS: u32 = 11u32;
pub const TIM_SR_CC3OF_MSK: u32 = 0x1u32 << TIM_SR_CC3OF_POS;
pub const TIM_SR_CC3OF: u32 = TIM_SR_CC3OF_MSK;
pub const TIM_SR_CC4OF_POS: u32 = 12u32;
pub const TIM_SR_CC4OF_MSK: u32 = 0x1u32 << TIM_SR_CC4OF_POS;
pub const TIM_SR_CC4OF: u32 = TIM_SR_CC4OF_MSK;
pub const TIM_EGR_UG_POS: u32 = 0u32;
pub const TIM_EGR_UG_MSK: u32 = 0x1u32 << TIM_EGR_UG_POS;
pub const TIM_EGR_UG: u32 = TIM_EGR_UG_MSK;
pub const TIM_EGR_CC1G_POS: u32 = 1u32;
pub const TIM_EGR_CC1G_MSK: u32 = 0x1u32 << TIM_EGR_CC1G_POS;
pub const TIM_EGR_CC1G: u32 = TIM_EGR_CC1G_MSK;
pub const TIM_EGR_CC2G_POS: u32 = 2u32;
pub const TIM_EGR_CC2G_MSK: u32 = 0x1u32 << TIM_EGR_CC2G_POS;
pub const TIM_EGR_CC2G: u32 = TIM_EGR_CC2G_MSK;
pub const TIM_EGR_CC3G_POS: u32 = 3u32;
pub const TIM_EGR_CC3G_MSK: u32 = 0x1u32 << TIM_EGR_CC3G_POS;
pub const TIM_EGR_CC3G: u32 = TIM_EGR_CC3G_MSK;
pub const TIM_EGR_CC4G_POS: u32 = 4u32;
pub const TIM_EGR_CC4G_MSK: u32 = 0x1u32 << TIM_EGR_CC4G_POS;
pub const TIM_EGR_CC4G: u32 = TIM_EGR_CC4G_MSK;
pub const TIM_EGR_COMG_POS: u32 = 5u32;
pub const TIM_EGR_COMG_MSK: u32 = 0x1u32 << TIM_EGR_COMG_POS;
pub const TIM_EGR_COMG: u32 = TIM_EGR_COMG_MSK;
pub const TIM_EGR_TG_POS: u32 = 6u32;
pub const TIM_EGR_TG_MSK: u32 = 0x1u32 << TIM_EGR_TG_POS;
pub const TIM_EGR_TG: u32 = TIM_EGR_TG_MSK;
pub const TIM_EGR_BG_POS: u32 = 7u32;
pub const TIM_EGR_BG_MSK: u32 = 0x1u32 << TIM_EGR_BG_POS;
pub const TIM_EGR_BG: u32 = TIM_EGR_BG_MSK;
pub const TIM_CCMR1_CC1S_POS: u32 = 0u32;
pub const TIM_CCMR1_CC1S_MSK: u32 = 0x3u32 << TIM_CCMR1_CC1S_POS;
pub const TIM_CCMR1_CC1S: u32 = TIM_CCMR1_CC1S_MSK;
pub const TIM_CCMR1_CC1S_0: u32 = 0x1u32 << TIM_CCMR1_CC1S_POS;
pub const TIM_CCMR1_CC1S_1: u32 = 0x2u32 << TIM_CCMR1_CC1S_POS;
pub const TIM_CCMR1_OC1FE_POS: u32 = 2u32;
pub const TIM_CCMR1_OC1FE_MSK: u32 = 0x1u32 << TIM_CCMR1_OC1FE_POS;
pub const TIM_CCMR1_OC1FE: u32 = TIM_CCMR1_OC1FE_MSK;
pub const TIM_CCMR1_OC1PE_POS: u32 = 3u32;
pub const TIM_CCMR1_OC1PE_MSK: u32 = 0x1u32 << TIM_CCMR1_OC1PE_POS;
pub const TIM_CCMR1_OC1PE: u32 = TIM_CCMR1_OC1PE_MSK;
pub const TIM_CCMR1_OC1M_POS: u32 = 4u32;
pub const TIM_CCMR1_OC1M_MSK: u32 = 0x7u32 << TIM_CCMR1_OC1M_POS;
pub const TIM_CCMR1_OC1M: u32 = TIM_CCMR1_OC1M_MSK;
pub const TIM_CCMR1_OC1M_0: u32 = 0x1u32 << TIM_CCMR1_OC1M_POS;
pub const TIM_CCMR1_OC1M_1: u32 = 0x2u32 << TIM_CCMR1_OC1M_POS;
pub const TIM_CCMR1_OC1M_2: u32 = 0x4u32 << TIM_CCMR1_OC1M_POS;
pub const TIM_CCMR1_OC1CE_POS: u32 = 7u32;
pub const TIM_CCMR1_OC1CE_MSK: u32 = 0x1u32 << TIM_CCMR1_OC1CE_POS;
pub const TIM_CCMR1_OC1CE: u32 = TIM_CCMR1_OC1CE_MSK;
pub const TIM_CCMR1_CC2S_POS: u32 = 8u32;
pub const TIM_CCMR1_CC2S_MSK: u32 = 0x3u32 << TIM_CCMR1_CC2S_POS;
pub const TIM_CCMR1_CC2S: u32 = TIM_CCMR1_CC2S_MSK;
pub const TIM_CCMR1_CC2S_0: u32 = 0x1u32 << TIM_CCMR1_CC2S_POS;
pub const TIM_CCMR1_CC2S_1: u32 = 0x2u32 << TIM_CCMR1_CC2S_POS;
pub const TIM_CCMR1_OC2FE_POS: u32 = 10u32;
pub const TIM_CCMR1_OC2FE_MSK: u32 = 0x1u32 << TIM_CCMR1_OC2FE_POS;
pub const TIM_CCMR1_OC2FE: u32 = TIM_CCMR1_OC2FE_MSK;
pub const TIM_CCMR1_OC2PE_POS: u32 = 11u32;
pub const TIM_CCMR1_OC2PE_MSK: u32 = 0x1u32 << TIM_CCMR1_OC2PE_POS;
pub const TIM_CCMR1_OC2PE: u32 = TIM_CCMR1_OC2PE_MSK;
pub const TIM_CCMR1_OC2M_POS: u32 = 12u32;
pub const TIM_CCMR1_OC2M_MSK: u32 = 0x7u32 << TIM_CCMR1_OC2M_POS;
pub const TIM_CCMR1_OC2M: u32 = TIM_CCMR1_OC2M_MSK;
pub const TIM_CCMR1_OC2M_0: u32 = 0x1u32 << TIM_CCMR1_OC2M_POS;
pub const TIM_CCMR1_OC2M_1: u32 = 0x2u32 << TIM_CCMR1_OC2M_POS;
pub const TIM_CCMR1_OC2M_2: u32 = 0x4u32 << TIM_CCMR1_OC2M_POS;
pub const TIM_CCMR1_OC2CE_POS: u32 = 15u32;
pub const TIM_CCMR1_OC2CE_MSK: u32 = 0x1u32 << TIM_CCMR1_OC2CE_POS;
pub const TIM_CCMR1_OC2CE: u32 = TIM_CCMR1_OC2CE_MSK;
pub const TIM_CCMR1_IC1PSC_POS: u32 = 2u32;
pub const TIM_CCMR1_IC1PSC_MSK: u32 = 0x3u32 << TIM_CCMR1_IC1PSC_POS;
pub const TIM_CCMR1_IC1PSC: u32 = TIM_CCMR1_IC1PSC_MSK;
pub const TIM_CCMR1_IC1PSC_0: u32 = 0x1u32 << TIM_CCMR1_IC1PSC_POS;
pub const TIM_CCMR1_IC1PSC_1: u32 = 0x2u32 << TIM_CCMR1_IC1PSC_POS;
pub const TIM_CCMR1_IC1F_POS: u32 = 4u32;
pub const TIM_CCMR1_IC1F_MSK: u32 = 0xFu32 << TIM_CCMR1_IC1F_POS;
pub const TIM_CCMR1_IC1F: u32 = TIM_CCMR1_IC1F_MSK;
pub const TIM_CCMR1_IC1F_0: u32 = 0x1u32 << TIM_CCMR1_IC1F_POS;
pub const TIM_CCMR1_IC1F_1: u32 = 0x2u32 << TIM_CCMR1_IC1F_POS;
pub const TIM_CCMR1_IC1F_2: u32 = 0x4u32 << TIM_CCMR1_IC1F_POS;
pub const TIM_CCMR1_IC1F_3: u32 = 0x8u32 << TIM_CCMR1_IC1F_POS;
pub const TIM_CCMR1_IC2PSC_POS: u32 = 10u32;
pub const TIM_CCMR1_IC2PSC_MSK: u32 = 0x3u32 << TIM_CCMR1_IC2PSC_POS;
pub const TIM_CCMR1_IC2PSC: u32 = TIM_CCMR1_IC2PSC_MSK;
pub const TIM_CCMR1_IC2PSC_0: u32 = 0x1u32 << TIM_CCMR1_IC2PSC_POS;
pub const TIM_CCMR1_IC2PSC_1: u32 = 0x2u32 << TIM_CCMR1_IC2PSC_POS;
pub const TIM_CCMR1_IC2F_POS: u32 = 12u32;
pub const TIM_CCMR1_IC2F_MSK: u32 = 0xFu32 << TIM_CCMR1_IC2F_POS;
pub const TIM_CCMR1_IC2F: u32 = TIM_CCMR1_IC2F_MSK;
pub const TIM_CCMR1_IC2F_0: u32 = 0x1u32 << TIM_CCMR1_IC2F_POS;
pub const TIM_CCMR1_IC2F_1: u32 = 0x2u32 << TIM_CCMR1_IC2F_POS;
pub const TIM_CCMR1_IC2F_2: u32 = 0x4u32 << TIM_CCMR1_IC2F_POS;
pub const TIM_CCMR1_IC2F_3: u32 = 0x8u32 << TIM_CCMR1_IC2F_POS;
pub const TIM_CCMR2_CC3S_POS: u32 = 0u32;
pub const TIM_CCMR2_CC3S_MSK: u32 = 0x3u32 << TIM_CCMR2_CC3S_POS;
pub const TIM_CCMR2_CC3S: u32 = TIM_CCMR2_CC3S_MSK;
pub const TIM_CCMR2_CC3S_0: u32 = 0x1u32 << TIM_CCMR2_CC3S_POS;
pub const TIM_CCMR2_CC3S_1: u32 = 0x2u32 << TIM_CCMR2_CC3S_POS;
pub const TIM_CCMR2_OC3FE_POS: u32 = 2u32;
pub const TIM_CCMR2_OC3FE_MSK: u32 = 0x1u32 << TIM_CCMR2_OC3FE_POS;
pub const TIM_CCMR2_OC3FE: u32 = TIM_CCMR2_OC3FE_MSK;
pub const TIM_CCMR2_OC3PE_POS: u32 = 3u32;
pub const TIM_CCMR2_OC3PE_MSK: u32 = 0x1u32 << TIM_CCMR2_OC3PE_POS;
pub const TIM_CCMR2_OC3PE: u32 = TIM_CCMR2_OC3PE_MSK;
pub const TIM_CCMR2_OC3M_POS: u32 = 4u32;
pub const TIM_CCMR2_OC3M_MSK: u32 = 0x7u32 << TIM_CCMR2_OC3M_POS;
pub const TIM_CCMR2_OC3M: u32 = TIM_CCMR2_OC3M_MSK;
pub const TIM_CCMR2_OC3M_0: u32 = 0x1u32 << TIM_CCMR2_OC3M_POS;
pub const TIM_CCMR2_OC3M_1: u32 = 0x2u32 << TIM_CCMR2_OC3M_POS;
pub const TIM_CCMR2_OC3M_2: u32 = 0x4u32 << TIM_CCMR2_OC3M_POS;
pub const TIM_CCMR2_OC3CE_POS: u32 = 7u32;
pub const TIM_CCMR2_OC3CE_MSK: u32 = 0x1u32 << TIM_CCMR2_OC3CE_POS;
pub const TIM_CCMR2_OC3CE: u32 = TIM_CCMR2_OC3CE_MSK;
pub const TIM_CCMR2_CC4S_POS: u32 = 8u32;
pub const TIM_CCMR2_CC4S_MSK: u32 = 0x3u32 << TIM_CCMR2_CC4S_POS;
pub const TIM_CCMR2_CC4S: u32 = TIM_CCMR2_CC4S_MSK;
pub const TIM_CCMR2_CC4S_0: u32 = 0x1u32 << TIM_CCMR2_CC4S_POS;
pub const TIM_CCMR2_CC4S_1: u32 = 0x2u32 << TIM_CCMR2_CC4S_POS;
pub const TIM_CCMR2_OC4FE_POS: u32 = 10u32;
pub const TIM_CCMR2_OC4FE_MSK: u32 = 0x1u32 << TIM_CCMR2_OC4FE_POS;
pub const TIM_CCMR2_OC4FE: u32 = TIM_CCMR2_OC4FE_MSK;
pub const TIM_CCMR2_OC4PE_POS: u32 = 11u32;
pub const TIM_CCMR2_OC4PE_MSK: u32 = 0x1u32 << TIM_CCMR2_OC4PE_POS;
pub const TIM_CCMR2_OC4PE: u32 = TIM_CCMR2_OC4PE_MSK;
pub const TIM_CCMR2_OC4M_POS: u32 = 12u32;
pub const TIM_CCMR2_OC4M_MSK: u32 = 0x7u32 << TIM_CCMR2_OC4M_POS;
pub const TIM_CCMR2_OC4M: u32 = TIM_CCMR2_OC4M_MSK;
pub const TIM_CCMR2_OC4M_0: u32 = 0x1u32 << TIM_CCMR2_OC4M_POS;
pub const TIM_CCMR2_OC4M_1: u32 = 0x2u32 << TIM_CCMR2_OC4M_POS;
pub const TIM_CCMR2_OC4M_2: u32 = 0x4u32 << TIM_CCMR2_OC4M_POS;
pub const TIM_CCMR2_OC4CE_POS: u32 = 15u32;
pub const TIM_CCMR2_OC4CE_MSK: u32 = 0x1u32 << TIM_CCMR2_OC4CE_POS;
pub const TIM_CCMR2_OC4CE: u32 = TIM_CCMR2_OC4CE_MSK;
pub const TIM_CCMR2_IC3PSC_POS: u32 = 2u32;
pub const TIM_CCMR2_IC3PSC_MSK: u32 = 0x3u32 << TIM_CCMR2_IC3PSC_POS;
pub const TIM_CCMR2_IC3PSC: u32 = TIM_CCMR2_IC3PSC_MSK;
pub const TIM_CCMR2_IC3PSC_0: u32 = 0x1u32 << TIM_CCMR2_IC3PSC_POS;
pub const TIM_CCMR2_IC3PSC_1: u32 = 0x2u32 << TIM_CCMR2_IC3PSC_POS;
pub const TIM_CCMR2_IC3F_POS: u32 = 4u32;
pub const TIM_CCMR2_IC3F_MSK: u32 = 0xFu32 << TIM_CCMR2_IC3F_POS;
pub const TIM_CCMR2_IC3F: u32 = TIM_CCMR2_IC3F_MSK;
pub const TIM_CCMR2_IC3F_0: u32 = 0x1u32 << TIM_CCMR2_IC3F_POS;
pub const TIM_CCMR2_IC3F_1: u32 = 0x2u32 << TIM_CCMR2_IC3F_POS;
pub const TIM_CCMR2_IC3F_2: u32 = 0x4u32 << TIM_CCMR2_IC3F_POS;
pub const TIM_CCMR2_IC3F_3: u32 = 0x8u32 << TIM_CCMR2_IC3F_POS;
pub const TIM_CCMR2_IC4PSC_POS: u32 = 10u32;
pub const TIM_CCMR2_IC4PSC_MSK: u32 = 0x3u32 << TIM_CCMR2_IC4PSC_POS;
pub const TIM_CCMR2_IC4PSC: u32 = TIM_CCMR2_IC4PSC_MSK;
pub const TIM_CCMR2_IC4PSC_0: u32 = 0x1u32 << TIM_CCMR2_IC4PSC_POS;
pub const TIM_CCMR2_IC4PSC_1: u32 = 0x2u32 << TIM_CCMR2_IC4PSC_POS;
pub const TIM_CCMR2_IC4F_POS: u32 = 12u32;
pub const TIM_CCMR2_IC4F_MSK: u32 = 0xFu32 << TIM_CCMR2_IC4F_POS;
pub const TIM_CCMR2_IC4F: u32 = TIM_CCMR2_IC4F_MSK;
pub const TIM_CCMR2_IC4F_0: u32 = 0x1u32 << TIM_CCMR2_IC4F_POS;
pub const TIM_CCMR2_IC4F_1: u32 = 0x2u32 << TIM_CCMR2_IC4F_POS;
pub const TIM_CCMR2_IC4F_2: u32 = 0x4u32 << TIM_CCMR2_IC4F_POS;
pub const TIM_CCMR2_IC4F_3: u32 = 0x8u32 << TIM_CCMR2_IC4F_POS;
pub const TIM_CCER_CC1E_POS: u32 = 0u32;
pub const TIM_CCER_CC1E_MSK: u32 = 0x1u32 << TIM_CCER_CC1E_POS;
pub const TIM_CCER_CC1E: u32 = TIM_CCER_CC1E_MSK;
pub const TIM_CCER_CC1P_POS: u32 = 1u32;
pub const TIM_CCER_CC1P_MSK: u32 = 0x1u32 << TIM_CCER_CC1P_POS;
pub const TIM_CCER_CC1P: u32 = TIM_CCER_CC1P_MSK;
pub const TIM_CCER_CC1NE_POS: u32 = 2u32;
pub const TIM_CCER_CC1NE_MSK: u32 = 0x1u32 << TIM_CCER_CC1NE_POS;
pub const TIM_CCER_CC1NE: u32 = TIM_CCER_CC1NE_MSK;
pub const TIM_CCER_CC1NP_POS: u32 = 3u32;
pub const TIM_CCER_CC1NP_MSK: u32 = 0x1u32 << TIM_CCER_CC1NP_POS;
pub const TIM_CCER_CC1NP: u32 = TIM_CCER_CC1NP_MSK;
pub const TIM_CCER_CC2E_POS: u32 = 4u32;
pub const TIM_CCER_CC2E_MSK: u32 = 0x1u32 << TIM_CCER_CC2E_POS;
pub const TIM_CCER_CC2E: u32 = TIM_CCER_CC2E_MSK;
pub const TIM_CCER_CC2P_POS: u32 = 5u32;
pub const TIM_CCER_CC2P_MSK: u32 = 0x1u32 << TIM_CCER_CC2P_POS;
pub const TIM_CCER_CC2P: u32 = TIM_CCER_CC2P_MSK;
pub const TIM_CCER_CC2NE_POS: u32 = 6u32;
pub const TIM_CCER_CC2NE_MSK: u32 = 0x1u32 << TIM_CCER_CC2NE_POS;
pub const TIM_CCER_CC2NE: u32 = TIM_CCER_CC2NE_MSK;
pub const TIM_CCER_CC2NP_POS: u32 = 7u32;
pub const TIM_CCER_CC2NP_MSK: u32 = 0x1u32 << TIM_CCER_CC2NP_POS;
pub const TIM_CCER_CC2NP: u32 = TIM_CCER_CC2NP_MSK;
pub const TIM_CCER_CC3E_POS: u32 = 8u32;
pub const TIM_CCER_CC3E_MSK: u32 = 0x1u32 << TIM_CCER_CC3E_POS;
pub const TIM_CCER_CC3E: u32 = TIM_CCER_CC3E_MSK;
pub const TIM_CCER_CC3P_POS: u32 = 9u32;
pub const TIM_CCER_CC3P_MSK: u32 = 0x1u32 << TIM_CCER_CC3P_POS;
pub const TIM_CCER_CC3P: u32 = TIM_CCER_CC3P_MSK;
pub const TIM_CCER_CC3NE_POS: u32 = 10u32;
pub const TIM_CCER_CC3NE_MSK: u32 = 0x1u32 << TIM_CCER_CC3NE_POS;
pub const TIM_CCER_CC3NE: u32 = TIM_CCER_CC3NE_MSK;
pub const TIM_CCER_CC3NP_POS: u32 = 11u32;
pub const TIM_CCER_CC3NP_MSK: u32 = 0x1u32 << TIM_CCER_CC3NP_POS;
pub const TIM_CCER_CC3NP: u32 = TIM_CCER_CC3NP_MSK;
pub const TIM_CCER_CC4E_POS: u32 = 12u32;
pub const TIM_CCER_CC4E_MSK: u32 = 0x1u32 << TIM_CCER_CC4E_POS;
pub const TIM_CCER_CC4E: u32 = TIM_CCER_CC4E_MSK;
pub const TIM_CCER_CC4P_POS: u32 = 13u32;
pub const TIM_CCER_CC4P_MSK: u32 = 0x1u32 << TIM_CCER_CC4P_POS;
pub const TIM_CCER_CC4P: u32 = TIM_CCER_CC4P_MSK;
pub const TIM_CCER_CC4NP_POS: u32 = 15u32;
pub const TIM_CCER_CC4NP_MSK: u32 = 0x1u32 << TIM_CCER_CC4NP_POS;
pub const TIM_CCER_CC4NP: u32 = TIM_CCER_CC4NP_MSK;
pub const TIM_CNT_CNT_POS: u32 = 0u32;
pub const TIM_CNT_CNT_MSK: u32 = 0xFFFFFFFFu32 << TIM_CNT_CNT_POS;
pub const TIM_CNT_CNT: u32 = TIM_CNT_CNT_MSK;
pub const TIM_PSC_PSC_POS: u32 = 0u32;
pub const TIM_PSC_PSC_MSK: u32 = 0xFFFFu32 << TIM_PSC_PSC_POS;
pub const TIM_PSC_PSC: u32 = TIM_PSC_PSC_MSK;
pub const TIM_ARR_ARR_POS: u32 = 0u32;
pub const TIM_ARR_ARR_MSK: u32 = 0xFFFFFFFFu32 << TIM_ARR_ARR_POS;
pub const TIM_ARR_ARR: u32 = TIM_ARR_ARR_MSK;
pub const TIM_RCR_REP_POS: u32 = 0u32;
pub const TIM_RCR_REP_MSK: u32 = 0xFFu32 << TIM_RCR_REP_POS;
pub const TIM_RCR_REP: u32 = TIM_RCR_REP_MSK;
pub const TIM_CCR1_CCR1_POS: u32 = 0u32;
pub const TIM_CCR1_CCR1_MSK: u32 = 0xFFFFu32 << TIM_CCR1_CCR1_POS;
pub const TIM_CCR1_CCR1: u32 = TIM_CCR1_CCR1_MSK;
pub const TIM_CCR2_CCR2_POS: u32 = 0u32;
pub const TIM_CCR2_CCR2_MSK: u32 = 0xFFFFu32 << TIM_CCR2_CCR2_POS;
pub const TIM_CCR2_CCR2: u32 = TIM_CCR2_CCR2_MSK;
pub const TIM_CCR3_CCR3_POS: u32 = 0u32;
pub const TIM_CCR3_CCR3_MSK: u32 = 0xFFFFu32 << TIM_CCR3_CCR3_POS;
pub const TIM_CCR3_CCR3: u32 = TIM_CCR3_CCR3_MSK;
pub const TIM_CCR4_CCR4_POS: u32 = 0u32;
pub const TIM_CCR4_CCR4_MSK: u32 = 0xFFFFu32 << TIM_CCR4_CCR4_POS;
pub const TIM_CCR4_CCR4: u32 = TIM_CCR4_CCR4_MSK;
pub const TIM_BDTR_DTG_POS: u32 = 0u32;
pub const TIM_BDTR_DTG_MSK: u32 = 0xFFu32 << TIM_BDTR_DTG_POS;
pub const TIM_BDTR_DTG: u32 = TIM_BDTR_DTG_MSK;
pub const TIM_BDTR_DTG_0: u32 = 0x01u32 << TIM_BDTR_DTG_POS;
pub const TIM_BDTR_DTG_1: u32 = 0x02u32 << TIM_BDTR_DTG_POS;
pub const TIM_BDTR_DTG_2: u32 = 0x04u32 << TIM_BDTR_DTG_POS;
pub const TIM_BDTR_DTG_3: u32 = 0x08u32 << TIM_BDTR_DTG_POS;
pub const TIM_BDTR_DTG_4: u32 = 0x10u32 << TIM_BDTR_DTG_POS;
pub const TIM_BDTR_DTG_5: u32 = 0x20u32 << TIM_BDTR_DTG_POS;
pub const TIM_BDTR_DTG_6: u32 = 0x40u32 << TIM_BDTR_DTG_POS;
pub const TIM_BDTR_DTG_7: u32 = 0x80u32 << TIM_BDTR_DTG_POS;
pub const TIM_BDTR_LOCK_POS: u32 = 8u32;
pub const TIM_BDTR_LOCK_MSK: u32 = 0x3u32 << TIM_BDTR_LOCK_POS;
pub const TIM_BDTR_LOCK: u32 = TIM_BDTR_LOCK_MSK;
pub const TIM_BDTR_LOCK_0: u32 = 0x1u32 << TIM_BDTR_LOCK_POS;
pub const TIM_BDTR_LOCK_1: u32 = 0x2u32 << TIM_BDTR_LOCK_POS;
pub const TIM_BDTR_OSSI_POS: u32 = 10u32;
pub const TIM_BDTR_OSSI_MSK: u32 = 0x1u32 << TIM_BDTR_OSSI_POS;
pub const TIM_BDTR_OSSI: u32 = TIM_BDTR_OSSI_MSK;
pub const TIM_BDTR_OSSR_POS: u32 = 11u32;
pub const TIM_BDTR_OSSR_MSK: u32 = 0x1u32 << TIM_BDTR_OSSR_POS;
pub const TIM_BDTR_OSSR: u32 = TIM_BDTR_OSSR_MSK;
pub const TIM_BDTR_BKE_POS: u32 = 12u32;
pub const TIM_BDTR_BKE_MSK: u32 = 0x1u32 << TIM_BDTR_BKE_POS;
pub const TIM_BDTR_BKE: u32 = TIM_BDTR_BKE_MSK;
pub const TIM_BDTR_BKP_POS: u32 = 13u32;
pub const TIM_BDTR_BKP_MSK: u32 = 0x1u32 << TIM_BDTR_BKP_POS;
pub const TIM_BDTR_BKP: u32 = TIM_BDTR_BKP_MSK;
pub const TIM_BDTR_AOE_POS: u32 = 14u32;
pub const TIM_BDTR_AOE_MSK: u32 = 0x1u32 << TIM_BDTR_AOE_POS;
pub const TIM_BDTR_AOE: u32 = TIM_BDTR_AOE_MSK;
pub const TIM_BDTR_MOE_POS: u32 = 15u32;
pub const TIM_BDTR_MOE_MSK: u32 = 0x1u32 << TIM_BDTR_MOE_POS;
pub const TIM_BDTR_MOE: u32 = TIM_BDTR_MOE_MSK;
pub const TIM_DCR_DBA_POS: u32 = 0u32;
pub const TIM_DCR_DBA_MSK: u32 = 0x1Fu32 << TIM_DCR_DBA_POS;
pub const TIM_DCR_DBA: u32 = TIM_DCR_DBA_MSK;
pub const TIM_DCR_DBA_0: u32 = 0x01u32 << TIM_DCR_DBA_POS;
pub const TIM_DCR_DBA_1: u32 = 0x02u32 << TIM_DCR_DBA_POS;
pub const TIM_DCR_DBA_2: u32 = 0x04u32 << TIM_DCR_DBA_POS;
pub const TIM_DCR_DBA_3: u32 = 0x08u32 << TIM_DCR_DBA_POS;
pub const TIM_DCR_DBA_4: u32 = 0x10u32 << TIM_DCR_DBA_POS;
pub const TIM_DCR_DBL_POS: u32 = 8u32;
pub const TIM_DCR_DBL_MSK: u32 = 0x1Fu32 << TIM_DCR_DBL_POS;
pub const TIM_DCR_DBL: u32 = TIM_DCR_DBL_MSK;
pub const TIM_DCR_DBL_0: u32 = 0x01u32 << TIM_DCR_DBL_POS;
pub const TIM_DCR_DBL_1: u32 = 0x02u32 << TIM_DCR_DBL_POS;
pub const TIM_DCR_DBL_2: u32 = 0x04u32 << TIM_DCR_DBL_POS;
pub const TIM_DCR_DBL_3: u32 = 0x08u32 << TIM_DCR_DBL_POS;
pub const TIM_DCR_DBL_4: u32 = 0x10u32 << TIM_DCR_DBL_POS;
pub const TIM_DMAR_DMAB_POS: u32 = 0u32;
pub const TIM_DMAR_DMAB_MSK: u32 = 0xFFFFu32 << TIM_DMAR_DMAB_POS;
pub const TIM_DMAR_DMAB: u32 = TIM_DMAR_DMAB_MSK;
pub const TIM14_OR_TI1_RMP_POS: u32 = 0u32;
pub const TIM14_OR_TI1_RMP_MSK: u32 = 0x3u32 << TIM14_OR_TI1_RMP_POS;
pub const TIM14_OR_TI1_RMP: u32 = TIM14_OR_TI1_RMP_MSK;
pub const TIM14_OR_TI1_RMP_0: u32 = 0x1u32 << TIM14_OR_TI1_RMP_POS;
pub const TIM14_OR_TI1_RMP_1: u32 = 0x2u32 << TIM14_OR_TI1_RMP_POS;
pub const USART_CR1_UE_POS: u32 = 0u32;
pub const USART_CR1_UE_MSK: u32 = 0x1u32 << USART_CR1_UE_POS;
pub const USART_CR1_UE: u32 = USART_CR1_UE_MSK;
pub const USART_CR1_RE_POS: u32 = 2u32;
pub const USART_CR1_RE_MSK: u32 = 0x1u32 << USART_CR1_RE_POS;
pub const USART_CR1_RE: u32 = USART_CR1_RE_MSK;
pub const USART_CR1_TE_POS: u32 = 3u32;
pub const USART_CR1_TE_MSK: u32 = 0x1u32 << USART_CR1_TE_POS;
pub const USART_CR1_TE: u32 = USART_CR1_TE_MSK;
pub const USART_CR1_IDLEIE_POS: u32 = 4u32;
pub const USART_CR1_IDLEIE_MSK: u32 = 0x1u32 << USART_CR1_IDLEIE_POS;
pub const USART_CR1_IDLEIE: u32 = USART_CR1_IDLEIE_MSK;
pub const USART_CR1_RXNEIE_POS: u32 = 5u32;
pub const USART_CR1_RXNEIE_MSK: u32 = 0x1u32 << USART_CR1_RXNEIE_POS;
pub const USART_CR1_RXNEIE: u32 = USART_CR1_RXNEIE_MSK;
pub const USART_CR1_TCIE_POS: u32 = 6u32;
pub const USART_CR1_TCIE_MSK: u32 = 0x1u32 << USART_CR1_TCIE_POS;
pub const USART_CR1_TCIE: u32 = USART_CR1_TCIE_MSK;
pub const USART_CR1_TXEIE_POS: u32 = 7u32;
pub const USART_CR1_TXEIE_MSK: u32 = 0x1u32 << USART_CR1_TXEIE_POS;
pub const USART_CR1_TXEIE: u32 = USART_CR1_TXEIE_MSK;
pub const USART_CR1_PEIE_POS: u32 = 8u32;
pub const USART_CR1_PEIE_MSK: u32 = 0x1u32 << USART_CR1_PEIE_POS;
pub const USART_CR1_PEIE: u32 = USART_CR1_PEIE_MSK;
pub const USART_CR1_PS_POS: u32 = 9u32;
pub const USART_CR1_PS_MSK: u32 = 0x1u32 << USART_CR1_PS_POS;
pub const USART_CR1_PS: u32 = USART_CR1_PS_MSK;
pub const USART_CR1_PCE_POS: u32 = 10u32;
pub const USART_CR1_PCE_MSK: u32 = 0x1u32 << USART_CR1_PCE_POS;
pub const USART_CR1_PCE: u32 = USART_CR1_PCE_MSK;
pub const USART_CR1_WAKE_POS: u32 = 11u32;
pub const USART_CR1_WAKE_MSK: u32 = 0x1u32 << USART_CR1_WAKE_POS;
pub const USART_CR1_WAKE: u32 = USART_CR1_WAKE_MSK;
pub const USART_CR1_M_POS: u32 = 12u32;
pub const USART_CR1_M_MSK: u32 = 0x1u32 << USART_CR1_M_POS;
pub const USART_CR1_M: u32 = USART_CR1_M_MSK;
pub const USART_CR1_MME_POS: u32 = 13u32;
pub const USART_CR1_MME_MSK: u32 = 0x1u32 << USART_CR1_MME_POS;
pub const USART_CR1_MME: u32 = USART_CR1_MME_MSK;
pub const USART_CR1_CMIE_POS: u32 = 14u32;
pub const USART_CR1_CMIE_MSK: u32 = 0x1u32 << USART_CR1_CMIE_POS;
pub const USART_CR1_CMIE: u32 = USART_CR1_CMIE_MSK;
pub const USART_CR1_OVER8_POS: u32 = 15u32;
pub const USART_CR1_OVER8_MSK: u32 = 0x1u32 << USART_CR1_OVER8_POS;
pub const USART_CR1_OVER8: u32 = USART_CR1_OVER8_MSK;
pub const USART_CR1_DEDT_POS: u32 = 16u32;
pub const USART_CR1_DEDT_MSK: u32 = 0x1Fu32 << USART_CR1_DEDT_POS;
pub const USART_CR1_DEDT: u32 = USART_CR1_DEDT_MSK;
pub const USART_CR1_DEDT_0: u32 = 0x01u32 << USART_CR1_DEDT_POS;
pub const USART_CR1_DEDT_1: u32 = 0x02u32 << USART_CR1_DEDT_POS;
pub const USART_CR1_DEDT_2: u32 = 0x04u32 << USART_CR1_DEDT_POS;
pub const USART_CR1_DEDT_3: u32 = 0x08u32 << USART_CR1_DEDT_POS;
pub const USART_CR1_DEDT_4: u32 = 0x10u32 << USART_CR1_DEDT_POS;
pub const USART_CR1_DEAT_POS: u32 = 21u32;
pub const USART_CR1_DEAT_MSK: u32 = 0x1Fu32 << USART_CR1_DEAT_POS;
pub const USART_CR1_DEAT: u32 = USART_CR1_DEAT_MSK;
pub const USART_CR1_DEAT_0: u32 = 0x01u32 << USART_CR1_DEAT_POS;
pub const USART_CR1_DEAT_1: u32 = 0x02u32 << USART_CR1_DEAT_POS;
pub const USART_CR1_DEAT_2: u32 = 0x04u32 << USART_CR1_DEAT_POS;
pub const USART_CR1_DEAT_3: u32 = 0x08u32 << USART_CR1_DEAT_POS;
pub const USART_CR1_DEAT_4: u32 = 0x10u32 << USART_CR1_DEAT_POS;
pub const USART_CR1_RTOIE_POS: u32 = 26u32;
pub const USART_CR1_RTOIE_MSK: u32 = 0x1u32 << USART_CR1_RTOIE_POS;
pub const USART_CR1_RTOIE: u32 = USART_CR1_RTOIE_MSK;
pub const USART_CR1_EOBIE_POS: u32 = 27u32;
pub const USART_CR1_EOBIE_MSK: u32 = 0x1u32 << USART_CR1_EOBIE_POS;
pub const USART_CR1_EOBIE: u32 = USART_CR1_EOBIE_MSK;
pub const USART_CR2_ADDM7_POS: u32 = 4u32;
pub const USART_CR2_ADDM7_MSK: u32 = 0x1u32 << USART_CR2_ADDM7_POS;
pub const USART_CR2_ADDM7: u32 = USART_CR2_ADDM7_MSK;
pub const USART_CR2_LBCL_POS: u32 = 8u32;
pub const USART_CR2_LBCL_MSK: u32 = 0x1u32 << USART_CR2_LBCL_POS;
pub const USART_CR2_LBCL: u32 = USART_CR2_LBCL_MSK;
pub const USART_CR2_CPHA_POS: u32 = 9u32;
pub const USART_CR2_CPHA_MSK: u32 = 0x1u32 << USART_CR2_CPHA_POS;
pub const USART_CR2_CPHA: u32 = USART_CR2_CPHA_MSK;
pub const USART_CR2_CPOL_POS: u32 = 10u32;
pub const USART_CR2_CPOL_MSK: u32 = 0x1u32 << USART_CR2_CPOL_POS;
pub const USART_CR2_CPOL: u32 = USART_CR2_CPOL_MSK;
pub const USART_CR2_CLKEN_POS: u32 = 11u32;
pub const USART_CR2_CLKEN_MSK: u32 = 0x1u32 << USART_CR2_CLKEN_POS;
pub const USART_CR2_CLKEN: u32 = USART_CR2_CLKEN_MSK;
pub const USART_CR2_STOP_POS: u32 = 12u32;
pub const USART_CR2_STOP_MSK: u32 = 0x3u32 << USART_CR2_STOP_POS;
pub const USART_CR2_STOP: u32 = USART_CR2_STOP_MSK;
pub const USART_CR2_STOP_0: u32 = 0x1u32 << USART_CR2_STOP_POS;
pub const USART_CR2_STOP_1: u32 = 0x2u32 << USART_CR2_STOP_POS;
pub const USART_CR2_SWAP_POS: u32 = 15u32;
pub const USART_CR2_SWAP_MSK: u32 = 0x1u32 << USART_CR2_SWAP_POS;
pub const USART_CR2_SWAP: u32 = USART_CR2_SWAP_MSK;
pub const USART_CR2_RXINV_POS: u32 = 16u32;
pub const USART_CR2_RXINV_MSK: u32 = 0x1u32 << USART_CR2_RXINV_POS;
pub const USART_CR2_RXINV: u32 = USART_CR2_RXINV_MSK;
pub const USART_CR2_TXINV_POS: u32 = 17u32;
pub const USART_CR2_TXINV_MSK: u32 = 0x1u32 << USART_CR2_TXINV_POS;
pub const USART_CR2_TXINV: u32 = USART_CR2_TXINV_MSK;
pub const USART_CR2_DATAINV_POS: u32 = 18u32;
pub const USART_CR2_DATAINV_MSK: u32 = 0x1u32 << USART_CR2_DATAINV_POS;
pub const USART_CR2_DATAINV: u32 = USART_CR2_DATAINV_MSK;
pub const USART_CR2_MSBFIRST_POS: u32 = 19u32;
pub const USART_CR2_MSBFIRST_MSK: u32 = 0x1u32 << USART_CR2_MSBFIRST_POS;
pub const USART_CR2_MSBFIRST: u32 = USART_CR2_MSBFIRST_MSK;
pub const USART_CR2_ABREN_POS: u32 = 20u32;
pub const USART_CR2_ABREN_MSK: u32 = 0x1u32 << USART_CR2_ABREN_POS;
pub const USART_CR2_ABREN: u32 = USART_CR2_ABREN_MSK;
pub const USART_CR2_ABRMODE_POS: u32 = 21u32;
pub const USART_CR2_ABRMODE_MSK: u32 = 0x3u32 << USART_CR2_ABRMODE_POS;
pub const USART_CR2_ABRMODE: u32 = USART_CR2_ABRMODE_MSK;
pub const USART_CR2_ABRMODE_0: u32 = 0x1u32 << USART_CR2_ABRMODE_POS;
pub const USART_CR2_ABRMODE_1: u32 = 0x2u32 << USART_CR2_ABRMODE_POS;
pub const USART_CR2_RTOEN_POS: u32 = 23u32;
pub const USART_CR2_RTOEN_MSK: u32 = 0x1u32 << USART_CR2_RTOEN_POS;
pub const USART_CR2_RTOEN: u32 = USART_CR2_RTOEN_MSK;
pub const USART_CR2_ADD_POS: u32 = 24u32;
pub const USART_CR2_ADD_MSK: u32 = 0xFFu32 << USART_CR2_ADD_POS;
pub const USART_CR2_ADD: u32 = USART_CR2_ADD_MSK;
pub const USART_CR3_EIE_POS: u32 = 0u32;
pub const USART_CR3_EIE_MSK: u32 = 0x1u32 << USART_CR3_EIE_POS;
pub const USART_CR3_EIE: u32 = USART_CR3_EIE_MSK;
pub const USART_CR3_HDSEL_POS: u32 = 3u32;
pub const USART_CR3_HDSEL_MSK: u32 = 0x1u32 << USART_CR3_HDSEL_POS;
pub const USART_CR3_HDSEL: u32 = USART_CR3_HDSEL_MSK;
pub const USART_CR3_DMAR_POS: u32 = 6u32;
pub const USART_CR3_DMAR_MSK: u32 = 0x1u32 << USART_CR3_DMAR_POS;
pub const USART_CR3_DMAR: u32 = USART_CR3_DMAR_MSK;
pub const USART_CR3_DMAT_POS: u32 = 7u32;
pub const USART_CR3_DMAT_MSK: u32 = 0x1u32 << USART_CR3_DMAT_POS;
pub const USART_CR3_DMAT: u32 = USART_CR3_DMAT_MSK;
pub const USART_CR3_RTSE_POS: u32 = 8u32;
pub const USART_CR3_RTSE_MSK: u32 = 0x1u32 << USART_CR3_RTSE_POS;
pub const USART_CR3_RTSE: u32 = USART_CR3_RTSE_MSK;
pub const USART_CR3_CTSE_POS: u32 = 9u32;
pub const USART_CR3_CTSE_MSK: u32 = 0x1u32 << USART_CR3_CTSE_POS;
pub const USART_CR3_CTSE: u32 = USART_CR3_CTSE_MSK;
pub const USART_CR3_CTSIE_POS: u32 = 10u32;
pub const USART_CR3_CTSIE_MSK: u32 = 0x1u32 << USART_CR3_CTSIE_POS;
pub const USART_CR3_CTSIE: u32 = USART_CR3_CTSIE_MSK;
pub const USART_CR3_ONEBIT_POS: u32 = 11u32;
pub const USART_CR3_ONEBIT_MSK: u32 = 0x1u32 << USART_CR3_ONEBIT_POS;
pub const USART_CR3_ONEBIT: u32 = USART_CR3_ONEBIT_MSK;
pub const USART_CR3_DDRE_POS: u32 = 13u32;
pub const USART_CR3_DDRE_MSK: u32 = 0x1u32 << USART_CR3_DDRE_POS;
pub const USART_CR3_DDRE: u32 = USART_CR3_DDRE_MSK;
pub const USART_CR3_DEM_POS: u32 = 14u32;
pub const USART_CR3_DEM_MSK: u32 = 0x1u32 << USART_CR3_DEM_POS;
pub const USART_CR3_DEM: u32 = USART_CR3_DEM_MSK;
pub const USART_CR3_DEP_POS: u32 = 15u32;
pub const USART_CR3_DEP_MSK: u32 = 0x1u32 << USART_CR3_DEP_POS;
pub const USART_CR3_DEP: u32 = USART_CR3_DEP_MSK;
pub const USART_BRR_DIV_FRACTION_POS: u32 = 0u32;
pub const USART_BRR_DIV_FRACTION_MSK: u32 = 0xFu32 << USART_BRR_DIV_FRACTION_POS;
pub const USART_BRR_DIV_FRACTION: u32 = USART_BRR_DIV_FRACTION_MSK;
pub const USART_BRR_DIV_MANTISSA_POS: u32 = 4u32;
pub const USART_BRR_DIV_MANTISSA_MSK: u32 = 0xFFFu32 << USART_BRR_DIV_MANTISSA_POS;
pub const USART_BRR_DIV_MANTISSA: u32 = USART_BRR_DIV_MANTISSA_MSK;
pub const USART_GTPR_PSC_POS: u32 = 0u32;
pub const USART_GTPR_PSC_MSK: u32 = 0xFFu32 << USART_GTPR_PSC_POS;
pub const USART_GTPR_PSC: u32 = USART_GTPR_PSC_MSK;
pub const USART_GTPR_GT_POS: u32 = 8u32;
pub const USART_GTPR_GT_MSK: u32 = 0xFFu32 << USART_GTPR_GT_POS;
pub const USART_GTPR_GT: u32 = USART_GTPR_GT_MSK;
pub const USART_RTOR_RTO_POS: u32 = 0u32;
pub const USART_RTOR_RTO_MSK: u32 = 0xFFFFFFu32 << USART_RTOR_RTO_POS;
pub const USART_RTOR_RTO: u32 = USART_RTOR_RTO_MSK;
pub const USART_RTOR_BLEN_POS: u32 = 24u32;
pub const USART_RTOR_BLEN_MSK: u32 = 0xFFu32 << USART_RTOR_BLEN_POS;
pub const USART_RTOR_BLEN: u32 = USART_RTOR_BLEN_MSK;
pub const USART_RQR_ABRRQ_POS: u32 = 0u32;
pub const USART_RQR_ABRRQ_MSK: u32 = 0x1u32 << USART_RQR_ABRRQ_POS;
pub const USART_RQR_ABRRQ: u32 = USART_RQR_ABRRQ_MSK;
pub const USART_RQR_SBKRQ_POS: u32 = 1u32;
pub const USART_RQR_SBKRQ_MSK: u32 = 0x1u32 << USART_RQR_SBKRQ_POS;
pub const USART_RQR_SBKRQ: u32 = USART_RQR_SBKRQ_MSK;
pub const USART_RQR_MMRQ_POS: u32 = 2u32;
pub const USART_RQR_MMRQ_MSK: u32 = 0x1u32 << USART_RQR_MMRQ_POS;
pub const USART_RQR_MMRQ: u32 = USART_RQR_MMRQ_MSK;
pub const USART_RQR_RXFRQ_POS: u32 = 3u32;
pub const USART_RQR_RXFRQ_MSK: u32 = 0x1u32 << USART_RQR_RXFRQ_POS;
pub const USART_RQR_RXFRQ: u32 = USART_RQR_RXFRQ_MSK;
pub const USART_ISR_PE_POS: u32 = 0u32;
pub const USART_ISR_PE_MSK: u32 = 0x1u32 << USART_ISR_PE_POS;
pub const USART_ISR_PE: u32 = USART_ISR_PE_MSK;
pub const USART_ISR_FE_POS: u32 = 1u32;
pub const USART_ISR_FE_MSK: u32 = 0x1u32 << USART_ISR_FE_POS;
pub const USART_ISR_FE: u32 = USART_ISR_FE_MSK;
pub const USART_ISR_NE_POS: u32 = 2u32;
pub const USART_ISR_NE_MSK: u32 = 0x1u32 << USART_ISR_NE_POS;
pub const USART_ISR_NE: u32 = USART_ISR_NE_MSK;
pub const USART_ISR_ORE_POS: u32 = 3u32;
pub const USART_ISR_ORE_MSK: u32 = 0x1u32 << USART_ISR_ORE_POS;
pub const USART_ISR_ORE: u32 = USART_ISR_ORE_MSK;
pub const USART_ISR_IDLE_POS: u32 = 4u32;
pub const USART_ISR_IDLE_MSK: u32 = 0x1u32 << USART_ISR_IDLE_POS;
pub const USART_ISR_IDLE: u32 = USART_ISR_IDLE_MSK;
pub const USART_ISR_RXNE_POS: u32 = 5u32;
pub const USART_ISR_RXNE_MSK: u32 = 0x1u32 << USART_ISR_RXNE_POS;
pub const USART_ISR_RXNE: u32 = USART_ISR_RXNE_MSK;
pub const USART_ISR_TC_POS: u32 = 6u32;
pub const USART_ISR_TC_MSK: u32 = 0x1u32 << USART_ISR_TC_POS;
pub const USART_ISR_TC: u32 = USART_ISR_TC_MSK;
pub const USART_ISR_TXE_POS: u32 = 7u32;
pub const USART_ISR_TXE_MSK: u32 = 0x1u32 << USART_ISR_TXE_POS;
pub const USART_ISR_TXE: u32 = USART_ISR_TXE_MSK;
pub const USART_ISR_CTSIF_POS: u32 = 9u32;
pub const USART_ISR_CTSIF_MSK: u32 = 0x1u32 << USART_ISR_CTSIF_POS;
pub const USART_ISR_CTSIF: u32 = USART_ISR_CTSIF_MSK;
pub const USART_ISR_CTS_POS: u32 = 10u32;
pub const USART_ISR_CTS_MSK: u32 = 0x1u32 << USART_ISR_CTS_POS;
pub const USART_ISR_CTS: u32 = USART_ISR_CTS_MSK;
pub const USART_ISR_RTOF_POS: u32 = 11u32;
pub const USART_ISR_RTOF_MSK: u32 = 0x1u32 << USART_ISR_RTOF_POS;
pub const USART_ISR_RTOF: u32 = USART_ISR_RTOF_MSK;
pub const USART_ISR_ABRE_POS: u32 = 14u32;
pub const USART_ISR_ABRE_MSK: u32 = 0x1u32 << USART_ISR_ABRE_POS;
pub const USART_ISR_ABRE: u32 = USART_ISR_ABRE_MSK;
pub const USART_ISR_ABRF_POS: u32 = 15u32;
pub const USART_ISR_ABRF_MSK: u32 = 0x1u32 << USART_ISR_ABRF_POS;
pub const USART_ISR_ABRF: u32 = USART_ISR_ABRF_MSK;
pub const USART_ISR_BUSY_POS: u32 = 16u32;
pub const USART_ISR_BUSY_MSK: u32 = 0x1u32 << USART_ISR_BUSY_POS;
pub const USART_ISR_BUSY: u32 = USART_ISR_BUSY_MSK;
pub const USART_ISR_CMF_POS: u32 = 17u32;
pub const USART_ISR_CMF_MSK: u32 = 0x1u32 << USART_ISR_CMF_POS;
pub const USART_ISR_CMF: u32 = USART_ISR_CMF_MSK;
pub const USART_ISR_SBKF_POS: u32 = 18u32;
pub const USART_ISR_SBKF_MSK: u32 = 0x1u32 << USART_ISR_SBKF_POS;
pub const USART_ISR_SBKF: u32 = USART_ISR_SBKF_MSK;
pub const USART_ISR_RWU_POS: u32 = 19u32;
pub const USART_ISR_RWU_MSK: u32 = 0x1u32 << USART_ISR_RWU_POS;
pub const USART_ISR_RWU: u32 = USART_ISR_RWU_MSK;
pub const USART_ISR_TEACK_POS: u32 = 21u32;
pub const USART_ISR_TEACK_MSK: u32 = 0x1u32 << USART_ISR_TEACK_POS;
pub const USART_ISR_TEACK: u32 = USART_ISR_TEACK_MSK;
pub const USART_ISR_REACK_POS: u32 = 22u32;
pub const USART_ISR_REACK_MSK: u32 = 0x1u32 << USART_ISR_REACK_POS;
pub const USART_ISR_REACK: u32 = USART_ISR_REACK_MSK;
pub const USART_ICR_PECF_POS: u32 = 0u32;
pub const USART_ICR_PECF_MSK: u32 = 0x1u32 << USART_ICR_PECF_POS;
pub const USART_ICR_PECF: u32 = USART_ICR_PECF_MSK;
pub const USART_ICR_FECF_POS: u32 = 1u32;
pub const USART_ICR_FECF_MSK: u32 = 0x1u32 << USART_ICR_FECF_POS;
pub const USART_ICR_FECF: u32 = USART_ICR_FECF_MSK;
pub const USART_ICR_NCF_POS: u32 = 2u32;
pub const USART_ICR_NCF_MSK: u32 = 0x1u32 << USART_ICR_NCF_POS;
pub const USART_ICR_NCF: u32 = USART_ICR_NCF_MSK;
pub const USART_ICR_ORECF_POS: u32 = 3u32;
pub const USART_ICR_ORECF_MSK: u32 = 0x1u32 << USART_ICR_ORECF_POS;
pub const USART_ICR_ORECF: u32 = USART_ICR_ORECF_MSK;
pub const USART_ICR_IDLECF_POS: u32 = 4u32;
pub const USART_ICR_IDLECF_MSK: u32 = 0x1u32 << USART_ICR_IDLECF_POS;
pub const USART_ICR_IDLECF: u32 = USART_ICR_IDLECF_MSK;
pub const USART_ICR_TCCF_POS: u32 = 6u32;
pub const USART_ICR_TCCF_MSK: u32 = 0x1u32 << USART_ICR_TCCF_POS;
pub const USART_ICR_TCCF: u32 = USART_ICR_TCCF_MSK;
pub const USART_ICR_CTSCF_POS: u32 = 9u32;
pub const USART_ICR_CTSCF_MSK: u32 = 0x1u32 << USART_ICR_CTSCF_POS;
pub const USART_ICR_CTSCF: u32 = USART_ICR_CTSCF_MSK;
pub const USART_ICR_RTOCF_POS: u32 = 11u32;
pub const USART_ICR_RTOCF_MSK: u32 = 0x1u32 << USART_ICR_RTOCF_POS;
pub const USART_ICR_RTOCF: u32 = USART_ICR_RTOCF_MSK;
pub const USART_ICR_CMCF_POS: u32 = 17u32;
pub const USART_ICR_CMCF_MSK: u32 = 0x1u32 << USART_ICR_CMCF_POS;
pub const USART_ICR_CMCF: u32 = USART_ICR_CMCF_MSK;
pub const WWDG_CR_T_POS: u32 = 0u32;
pub const WWDG_CR_T_MSK: u32 = 0x7Fu32 << WWDG_CR_T_POS;
pub const WWDG_CR_T: u32 = WWDG_CR_T_MSK;
pub const WWDG_CR_T_0: u32 = 0x01u32 << WWDG_CR_T_POS;
pub const WWDG_CR_T_1: u32 = 0x02u32 << WWDG_CR_T_POS;
pub const WWDG_CR_T_2: u32 = 0x04u32 << WWDG_CR_T_POS;
pub const WWDG_CR_T_3: u32 = 0x08u32 << WWDG_CR_T_POS;
pub const WWDG_CR_T_4: u32 = 0x10u32 << WWDG_CR_T_POS;
pub const WWDG_CR_T_5: u32 = 0x20u32 << WWDG_CR_T_POS;
pub const WWDG_CR_T_6: u32 = 0x40u32 << WWDG_CR_T_POS;
pub const WWDG_CR_T0: u32 = WWDG_CR_T_0;
pub const WWDG_CR_T1: u32 = WWDG_CR_T_1;
pub const WWDG_CR_T2: u32 = WWDG_CR_T_2;
pub const WWDG_CR_T3: u32 = WWDG_CR_T_3;
pub const WWDG_CR_T4: u32 = WWDG_CR_T_4;
pub const WWDG_CR_T5: u32 = WWDG_CR_T_5;
pub const WWDG_CR_T6: u32 = WWDG_CR_T_6;
pub const WWDG_CR_WDGA_POS: u32 = 7u32;
pub const WWDG_CR_WDGA_MSK: u32 = 0x1u32 << WWDG_CR_WDGA_POS;
pub const WWDG_CR_WDGA: u32 = WWDG_CR_WDGA_MSK;
pub const WWDG_CFR_W_POS: u32 = 0u32;
pub const WWDG_CFR_W_MSK: u32 = 0x7Fu32 << WWDG_CFR_W_POS;
pub const WWDG_CFR_W: u32 = WWDG_CFR_W_MSK;
pub const WWDG_CFR_W_0: u32 = 0x01u32 << WWDG_CFR_W_POS;
pub const WWDG_CFR_W_1: u32 = 0x02u32 << WWDG_CFR_W_POS;
pub const WWDG_CFR_W_2: u32 = 0x04u32 << WWDG_CFR_W_POS;
pub const WWDG_CFR_W_3: u32 = 0x08u32 << WWDG_CFR_W_POS;
pub const WWDG_CFR_W_4: u32 = 0x10u32 << WWDG_CFR_W_POS;
pub const WWDG_CFR_W_5: u32 = 0x20u32 << WWDG_CFR_W_POS;
pub const WWDG_CFR_W_6: u32 = 0x40u32 << WWDG_CFR_W_POS;
pub const WWDG_CFR_W0: u32 = WWDG_CFR_W_0;
pub const WWDG_CFR_W1: u32 = WWDG_CFR_W_1;
pub const WWDG_CFR_W2: u32 = WWDG_CFR_W_2;
pub const WWDG_CFR_W3: u32 = WWDG_CFR_W_3;
pub const WWDG_CFR_W4: u32 = WWDG_CFR_W_4;
pub const WWDG_CFR_W5: u32 = WWDG_CFR_W_5;
pub const WWDG_CFR_W6: u32 = WWDG_CFR_W_6;
pub const WWDG_CFR_WDGTB_POS: u32 = 7u32;
pub const WWDG_CFR_WDGTB_MSK: u32 = 0x3u32 << WWDG_CFR_WDGTB_POS;
pub const WWDG_CFR_WDGTB: u32 = WWDG_CFR_WDGTB_MSK;
pub const WWDG_CFR_WDGTB_0: u32 = 0x1u32 << WWDG_CFR_WDGTB_POS;
pub const WWDG_CFR_WDGTB_1: u32 = 0x2u32 << WWDG_CFR_WDGTB_POS;
pub const WWDG_CFR_WDGTB0: u32 = WWDG_CFR_WDGTB_0;
pub const WWDG_CFR_WDGTB1: u32 = WWDG_CFR_WDGTB_1;
pub const WWDG_CFR_EWI_POS: u32 = 9u32;
pub const WWDG_CFR_EWI_MSK: u32 = 0x1u32 << WWDG_CFR_EWI_POS;
pub const WWDG_CFR_EWI: u32 = WWDG_CFR_EWI_MSK;
pub const WWDG_SR_EWIF_POS: u32 = 0u32;
pub const WWDG_SR_EWIF_MSK: u32 = 0x1u32 << WWDG_SR_EWIF_POS;
pub const WWDG_SR_EWIF: u32 = WWDG_SR_EWIF_MSK;
pub const ADC_ISR_OFFSET: u32 = 0x0;
pub const ADC_IER_OFFSET: u32 = 0x4;
pub const ADC_CR_OFFSET: u32 = 0x8;
pub const ADC_CFGR1_OFFSET: u32 = 0xc;
pub const ADC_CFGR2_OFFSET: u32 = 0x10;
pub const ADC_SMPR_OFFSET: u32 = 0x14;
pub const ADC_RESERVED1_OFFSET: u32 = 0x18;
pub const ADC_RESERVED2_OFFSET: u32 = 0x1c;
pub const ADC_TR_OFFSET: u32 = 0x20;
pub const ADC_RESERVED3_OFFSET: u32 = 0x24;
pub const ADC_CHSELR_OFFSET: u32 = 0x28;
pub const ADC_RESERVED4_OFFSET: u32 = 0x2c;
pub const ADC_DR_OFFSET: u32 = 0x30;
pub const ADC_COMMON_CCR_OFFSET: u32 = 0x0;
pub const CRC_DR_OFFSET: u32 = 0x0;
pub const CRC_CR_OFFSET: u32 = 0x4;
pub const CRC_INIT_OFFSET: u32 = 0x8;
pub const CRC_RESERVED3_OFFSET: u32 = 0xc;
pub const DBGMCU_IDCODE_OFFSET: u32 = 0x0;
pub const DBGMCU_CR_OFFSET: u32 = 0x4;
pub const DBGMCU_APB1FZ_OFFSET: u32 = 0x8;
pub const DBGMCU_APB2FZ_OFFSET: u32 = 0xc;
pub const DMA_CHANNEL_CCR_OFFSET: u32 = 0x0;
pub const DMA_CHANNEL_CNDTR_OFFSET: u32 = 0x4;
pub const DMA_CHANNEL_CPAR_OFFSET: u32 = 0x8;
pub const DMA_CHANNEL_CMAR_OFFSET: u32 = 0xc;
pub const DMA_ISR_OFFSET: u32 = 0x0;
pub const DMA_IFCR_OFFSET: u32 = 0x4;
pub const EXTI_IMR_OFFSET: u32 = 0x0;
pub const EXTI_EMR_OFFSET: u32 = 0x4;
pub const EXTI_RTSR_OFFSET: u32 = 0x8;
pub const EXTI_FTSR_OFFSET: u32 = 0xc;
pub const EXTI_SWIER_OFFSET: u32 = 0x10;
pub const EXTI_PR_OFFSET: u32 = 0x14;
pub const FLASH_ACR_OFFSET: u32 = 0x0;
pub const FLASH_KEYR_OFFSET: u32 = 0x4;
pub const FLASH_OPTKEYR_OFFSET: u32 = 0x8;
pub const FLASH_SR_OFFSET: u32 = 0xc;
pub const FLASH_CR_OFFSET: u32 = 0x10;
pub const FLASH_AR_OFFSET: u32 = 0x14;
pub const FLASH_RESERVED_OFFSET: u32 = 0x18;
pub const FLASH_OBR_OFFSET: u32 = 0x1c;
pub const FLASH_WRPR_OFFSET: u32 = 0x20;
pub const OB_RDP_OFFSET: u32 = 0x0;
pub const OB_USER_OFFSET: u32 = 0x2;
pub const OB_DATA0_OFFSET: u32 = 0x4;
pub const OB_DATA1_OFFSET: u32 = 0x6;
pub const OB_WRP0_OFFSET: u32 = 0x8;
pub const GPIO_MODER_OFFSET: u32 = 0x0;
pub const GPIO_OTYPER_OFFSET: u32 = 0x4;
pub const GPIO_OSPEEDR_OFFSET: u32 = 0x8;
pub const GPIO_PUPDR_OFFSET: u32 = 0xc;
pub const GPIO_IDR_OFFSET: u32 = 0x10;
pub const GPIO_ODR_OFFSET: u32 = 0x14;
pub const GPIO_BSRR_OFFSET: u32 = 0x18;
pub const GPIO_LCKR_OFFSET: u32 = 0x1c;
pub const GPIO_AFR_OFFSET: u32 = 0x20;
pub const GPIO_BRR_OFFSET: u32 = 0x24;
pub const SYSCFG_CFGR1_OFFSET: u32 = 0x0;
pub const SYSCFG_RESERVED_OFFSET: u32 = 0x4;
pub const SYSCFG_EXTICR_OFFSET: u32 = 0x8;
pub const SYSCFG_CFGR2_OFFSET: u32 = 0xc;
pub const I2C_CR1_OFFSET: u32 = 0x0;
pub const I2C_CR2_OFFSET: u32 = 0x4;
pub const I2C_OAR1_OFFSET: u32 = 0x8;
pub const I2C_OAR2_OFFSET: u32 = 0xc;
pub const I2C_TIMINGR_OFFSET: u32 = 0x10;
pub const I2C_TIMEOUTR_OFFSET: u32 = 0x14;
pub const I2C_ISR_OFFSET: u32 = 0x18;
pub const I2C_ICR_OFFSET: u32 = 0x1c;
pub const I2C_PECR_OFFSET: u32 = 0x20;
pub const I2C_RXDR_OFFSET: u32 = 0x24;
pub const I2C_TXDR_OFFSET: u32 = 0x28;
pub const IWDG_KR_OFFSET: u32 = 0x0;
pub const IWDG_PR_OFFSET: u32 = 0x4;
pub const IWDG_RLR_OFFSET: u32 = 0x8;
pub const IWDG_SR_OFFSET: u32 = 0xc;
pub const IWDG_WINR_OFFSET: u32 = 0x10;
pub const PWR_CR_OFFSET: u32 = 0x0;
pub const PWR_CSR_OFFSET: u32 = 0x4;
pub const RCC_CR_OFFSET: u32 = 0x0;
pub const RCC_CFGR_OFFSET: u32 = 0x4;
pub const RCC_CIR_OFFSET: u32 = 0x8;
pub const RCC_APB2RSTR_OFFSET: u32 = 0xc;
pub const RCC_APB1RSTR_OFFSET: u32 = 0x10;
pub const RCC_AHBENR_OFFSET: u32 = 0x14;
pub const RCC_APB2ENR_OFFSET: u32 = 0x18;
pub const RCC_APB1ENR_OFFSET: u32 = 0x1c;
pub const RCC_BDCR_OFFSET: u32 = 0x20;
pub const RCC_CSR_OFFSET: u32 = 0x24;
pub const RCC_AHBRSTR_OFFSET: u32 = 0x28;
pub const RCC_CFGR2_OFFSET: u32 = 0x2c;
pub const RCC_CFGR3_OFFSET: u32 = 0x30;
pub const RCC_CR2_OFFSET: u32 = 0x34;
pub const RTC_TR_OFFSET: u32 = 0x0;
pub const RTC_DR_OFFSET: u32 = 0x4;
pub const RTC_CR_OFFSET: u32 = 0x8;
pub const RTC_ISR_OFFSET: u32 = 0xc;
pub const RTC_PRER_OFFSET: u32 = 0x10;
pub const RTC_RESERVED1_OFFSET: u32 = 0x14;
pub const RTC_RESERVED2_OFFSET: u32 = 0x18;
pub const RTC_ALRMAR_OFFSET: u32 = 0x1c;
pub const RTC_RESERVED3_OFFSET: u32 = 0x20;
pub const RTC_WPR_OFFSET: u32 = 0x24;
pub const RTC_SSR_OFFSET: u32 = 0x28;
pub const RTC_SHIFTR_OFFSET: u32 = 0x2c;
pub const RTC_TSTR_OFFSET: u32 = 0x30;
pub const RTC_TSDR_OFFSET: u32 = 0x34;
pub const RTC_TSSSR_OFFSET: u32 = 0x38;
pub const RTC_CALR_OFFSET: u32 = 0x3c;
pub const RTC_TAFCR_OFFSET: u32 = 0x40;
pub const RTC_ALRMASSR_OFFSET: u32 = 0x44;
pub const SPI_CR1_OFFSET: u32 = 0x0;
pub const SPI_CR2_OFFSET: u32 = 0x4;
pub const SPI_SR_OFFSET: u32 = 0x8;
pub const SPI_DR_OFFSET: u32 = 0xc;
pub const SPI_CRCPR_OFFSET: u32 = 0x10;
pub const SPI_RXCRCR_OFFSET: u32 = 0x14;
pub const SPI_TXCRCR_OFFSET: u32 = 0x18;
pub const SPI_I2SCFGR_OFFSET: u32 = 0x1c;
pub const TIM_CR1_OFFSET: u32 = 0x0;
pub const TIM_CR2_OFFSET: u32 = 0x4;
pub const TIM_SMCR_OFFSET: u32 = 0x8;
pub const TIM_DIER_OFFSET: u32 = 0xc;
pub const TIM_SR_OFFSET: u32 = 0x10;
pub const TIM_EGR_OFFSET: u32 = 0x14;
pub const TIM_CCMR1_OFFSET: u32 = 0x18;
pub const TIM_CCMR2_OFFSET: u32 = 0x1c;
pub const TIM_CCER_OFFSET: u32 = 0x20;
pub const TIM_CNT_OFFSET: u32 = 0x24;
pub const TIM_PSC_OFFSET: u32 = 0x28;
pub const TIM_ARR_OFFSET: u32 = 0x2c;
pub const TIM_RCR_OFFSET: u32 = 0x30;
pub const TIM_CCR1_OFFSET: u32 = 0x34;
pub const TIM_CCR2_OFFSET: u32 = 0x38;
pub const TIM_CCR3_OFFSET: u32 = 0x3c;
pub const TIM_CCR4_OFFSET: u32 = 0x40;
pub const TIM_BDTR_OFFSET: u32 = 0x44;
pub const TIM_DCR_OFFSET: u32 = 0x48;
pub const TIM_DMAR_OFFSET: u32 = 0x4c;
pub const TIM_OR_OFFSET: u32 = 0x50;
pub const USART_CR1_OFFSET: u32 = 0x0;
pub const USART_CR2_OFFSET: u32 = 0x4;
pub const USART_CR3_OFFSET: u32 = 0x8;
pub const USART_BRR_OFFSET: u32 = 0xc;
pub const USART_GTPR_OFFSET: u32 = 0x10;
pub const USART_RTOR_OFFSET: u32 = 0x14;
pub const USART_RQR_OFFSET: u32 = 0x18;
pub const USART_ISR_OFFSET: u32 = 0x1c;
pub const USART_ICR_OFFSET: u32 = 0x20;
pub const USART_RDR_OFFSET: u32 = 0x24;
pub const USART_TDR_OFFSET: u32 = 0x26;
pub const WWDG_CR_OFFSET: u32 = 0x0;
pub const WWDG_CFR_OFFSET: u32 = 0x4;
pub const WWDG_SR_OFFSET: u32 = 0x8;

#[macro_export]
macro_rules! ru32 {
    ($group:ident, $reg:ident, $fragment:ident) => {
        unsafe {
            use crate::reg::*;
			use paste::paste;

			let base: u32 = paste!{ [<$group _ BASE>] };
			let offset: u32 = paste!{ [<$group _ $reg _ OFFSET>] };
			let mask: u32 = paste!{[<$group _ $reg _ $fragment _ MSK>]};
			let pos: u32 = paste!{[<$group _ $reg _ $fragment _ POS>]};

            (*((base + offset) as *const u32) & mask) >> pos
        }
    };
}

#[macro_export]
macro_rules! wu32 {
    ($group:ident, $reg:ident, $fragment:ident, $val:literal) => {
        unsafe {
            use crate::reg::*;
			use paste::paste;

			let base: u32 = paste!{ [<$group _BASE>] };
			let offset: u32 = paste!{ [<$group _ $reg _ OFFSET>] };
			let mask: u32 = paste!{[<$group _ $reg _ $fragment _ MSK>]};
			let offset: u32 = paste!{[<$group _ $reg _ $fragment _ POS>]};
			let chunk_reset: u32 = *((base + offset) as *mut u32) & !mask;

			*((base + offset) as *mut u32) = chunk_reset | (mask & ($val << offset));
        }
    }
}
